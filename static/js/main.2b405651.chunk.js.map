{"version":3,"sources":["useClock.js","clockController.js","useEww.js","dhusToGeojson.js","eww.js","useDatahub.js","missionselector.js","mapselector.js","stepmask.js","timeselector2.js","timelabel.js","mapstatelabel.js","debug.js","slidepanel.js","app.js","registerServiceWorker.js","initglobalstates.js","index.js"],"names":["useClock","_ref","autoStart","duration","initDate","startdate","_useState","useState","_useState2","Object","slicedToArray","date","setDate","_useState3","_useState4","playing","setPlaying","ldate","useRef","refreshRate","intervalRef","step","timeoutRef","start","console","log","current","setInterval","incrementDate","setTimeout","togglePause","clearTimeout","clearInterval","undefined","useEffect","Date","getTime","reset","increaseSpeed","Math","abs","decreaseSpeed","forceDate","newdate","ClockController","_useGlobal","useGlobal","_useGlobal2","appdate","setAppdate","_useClock","useHotkeys","lastTap","setLasttap","react_default","a","createElement","className","onClick","now","useEww","id","clon","clat","alt","starfield","atmosphere","names","eww","setProjection","geojsonlayers","setGeojsonlayers","_useState5","latitude","longitude","altitude","_useState6","ewwstate","setEwwState","setGlobeStates","lo","navigator","lookAtLocation","la","al","range","vp","bl","tr","view","viewport","polygon","pickTerrain","canvasCoordinates","x","y","height","terrainObject","position","round","err","width","getViewPolygon","viewpolygon","handleClick","handleDoubleClick","WorldWind","WorldWindow","redrawCallbacks","push","BasicWorldWindowController","prototype","applyLimits","this","wwd","WWMath","clamp","tapRecognizer","TapRecognizer","numberOfTaps","doubleTapRecognizer","recognizeSimultaneouslyWith","wmsConfigBg","service","layerNames","numLevels","format","size","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","wmsConfigNames","configuration","baseUrl","slice","starFieldLayer","StarFieldLayer","atmosphereLayer","AtmosphereLayer","layers","layer","WmsLayer","enabled","l","length","addLayer","time","goToAnimator","travelTime","goTo","Position","redraw","deepPicking","removeGeojson","i","removeLayer","addGeojson","url","renderableLayer","RenderableLayer","properties","updated","ceil","random","GeoJSONParser","load","concat","toConsumableArray","geometry","userProperties","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","Color","labelAttributes","offset","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","attributes","isLineStringType","isMultiLineStringType","drawOutline","outlineColor","interiorColor","red","green","blue","outlineWidth","isPolygonType","isMultiPolygonType","ShapeAttributes","addWMS","config","toggleStarfield","toggleAtmosphere","setTime","epoch","toggleProjection","prevProj","supportedProjections","newProj","indexOf","globe","projection","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","toggleNames","dhusToGeojson","response","features","feed","entry","map","item","reshuffle","array","json","name","content","hubItem","assign","int","double","str","sizeInBytes","sizeArray","split","parseFloat","title","wellknown","footprint","type","ingestiondate","beginposition","endposition","links","data","href","link","earthObservation","parentIdentifier","status","acquisitionInformation","platform","platformShortName","platformname","platformSerialIdentifier","platformserialidentifier","sensor","instrument","instrumentshortname","operationalMode","sensoroperationalmode","acquisitionParameter","acquisitionStartTime","acquisitionStopTime","relativePassNumber","parseInt","relativeorbitnumber","orbitNumber","orbitnumber","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","orbitdirection","productInformation","productType","producttype","message","mapFromHubOpenSearch","filter","totalResults","startIndex","itemsPerPage","Eww","_useEww","_useDatahub","searchURLs","buildUrl","mission","code","end","startindex","target","templateUrl","dateOff","areaOff","find","collection","newurl","replace","geojsonResults","setGeojsonResults","loading","setLoading","isfirstpage","setIsfirstPage","searchdate","_useGlobal3","_useGlobal5","apppolygon","_useState7","_useState8","searchUrl","setSearchurl","_useState9","_useState10","pagination","setPagination","_ref2","asyncToGenerator","regenerator_default","mark","_callee","geoJson","wrap","_context","prev","next","fetch","mode","credentials","sent","totalresults","Number","itemsperpage","t0","stop","_x","apply","arguments","fetchURL","min","dateFormat","windowSize","_unused2","_unused3","useDatahub","_useGlobal7","_useGlobal8","appstarfield","setAppstarfield","_useGlobal9","_useGlobal10","appatmosphere","setAppatmosphere","_useGlobal11","_useGlobal12","appnames","setAppnames","_useGlobal13","setSearching","_useGlobal15","setAppaltitude","_useGlobal17","setApplatitude","_useGlobal19","setApplongitude","_useGlobal21","setApppolygon","reactn_default","style","background","MissionSelector","setMission","draggable","src","MapSelector","_useGlobal4","_useGlobal6","StepMask","highlight","active","setDebug","display","TimeSelector","props","wid","zoomfactor","max","hei","vertical","setSearchdate","setHighlight","livePosition","setLiveposition","tsactive","setTsactive","setStep","myvertical","timecontainer","_useSpring","useSpring","xy","_useSpring2","set","bind","useGesture","onDrag","down","delta","velocity","distance","direction","wheeling","first","_ref$temp","last","temp","getValue","deltaOffset","deltaCumul","lastNewxy","lastStep","lastIncrement","lastDown","lastTime","scale","parentElement","offsetHeight","div","sub","deltaFactor","newxy","add","pow","minX","offsetTop","maxX","mass","tension","friction","precision","immediate","onRest","_ref3","onFrame","onWheel","_ref4","local","_ref4$temp","_ref6","_ref5","timescale","setTimescale","useLayoutEffect","day","month","lastday","monthcode","year","lastmonth","tics","dayclass","monthclass","yearclass","getUTCDate","getUTCMonth","getUTCHours","getUTCFullYear","class","pos","label","key","top","left","scaleText","offsetWidth","zoom","points","ref","web","transform","interpolate","TimeLabel","searching","setYear","setMonth","setDay","MapStateLabel","appaltitude","Debug","debug","setActive","debugkeys","setDebugkeys","lines","SlidePanel","visible","setVisible","slidePanel","toggle","vxvy","imageSrc","userSelect","children","App","hasFetched","setFetch","setVertical","prevVertical","mockApi","Promise","resolve","randomInt","_doFetch","doFetch","isFull","setIsfull","_useFullscreen","useFullscreen","window","document","body","toggleFullscreen","isFullscreen","dist_default","onChange","src_timelabel","clockController","timeselector2","src_mapstatelabel","src_missionselector","src_mapselector","src_debug_0","action","src_stepmask","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","setGlobal","render","app","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4XAGO,SAASA,EAATC,GAAsD,IAAlCC,EAAkCD,EAAlCC,UAAWC,EAAuBF,EAAvBE,SAI9BC,EAJqDH,EAAbI,UAAaC,EAKjCC,mBAASH,GALwBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAKlDK,EALkDH,EAAA,GAK5CI,EAL4CJ,EAAA,GAAAK,EAM3BN,oBAAS,GANkBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAMlDE,EANkDD,EAAA,GAMzCE,EANyCF,EAAA,GAOnDG,EAAQC,mBAGRC,EAAc,GAWpB,IAAMC,EAAcF,mBACdG,EAAOH,iBAAOC,GACdG,EAAaJ,mBAYnB,SAASK,IACLC,QAAQC,IAAI,mCAAmCtB,EAAS,IAAK,SACxDiB,EAAYM,UACbN,EAAYM,QAAUC,YAAY,kBA1B1C,SAAuBN,GAEnBJ,EAAMS,SAAWL,EAEjBT,EAAQK,EAAMS,SAsB8BE,CAAcP,EAAKK,UAAUP,GACrEH,GAAW,IAEfM,EAAWI,QAAUG,WAAW,WAC5BC,KAEC3B,GAGT,SAAS2B,IACLN,QAAQC,IAAI,gBACTH,EAAWI,SAASK,aAAaT,EAAWI,SAC3CN,EAAYM,SACZV,GAAW,GACXgB,cAAcZ,EAAYM,SAC1BN,EAAYM,aAAUO,GACnBV,IAiCb,OAVEW,oBAAU,WACNtB,GAAS,IAAIuB,MAAQC,WACrBnB,EAAMS,QAAUf,EACZT,GACAqB,KAGL,IAGE,CAAEZ,OAAMI,UAASe,cAAaO,MA9BnC,WACIb,QAAQC,IAAI,SACRL,EAAYM,UACZM,cAAcZ,EAAYM,SAC1BN,EAAYM,aAAUO,EACtBjB,GAAW,IAEf,IAAIZ,GAAY,IAAI+B,MAAQC,UAC5Bf,EAAKK,QAAUP,EACfP,EAAQR,GACRa,EAAMS,QAAUtB,GAoBsBkC,cA7D1C,WACIjB,EAAKK,QAAWL,EAAKK,QAAU,EAAIL,EAAKK,SAAW,EAAEL,EAAKK,SAAW,EAClEa,KAAKC,IAAInB,EAAKK,SAAWP,IAAaE,EAAKK,QAAUP,IA2DHsB,cAzDzD,WACIpB,EAAKK,QAAWL,EAAKK,QAAU,EAAIL,EAAKK,SAAW,EAAEL,EAAKK,SAAW,EAClEa,KAAKC,IAAInB,EAAKK,SAAWP,IAAaE,EAAKK,SAAW,EAAIP,IAuDOuB,UAhBxE,SAAmBC,GACf1B,EAAMS,QAAUiB,+BCOTC,MAzEf,SAAA3C,GAAuC,IAAZE,EAAYF,EAAZE,SAAY0C,EAEHC,oBAAU,WAFPC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAE3BG,EAF2BD,EAAA,GAElBE,EAFkBF,EAAA,GAAAG,EAY/BlD,EAAS,CACTE,WAAW,EACXC,SAAUA,EACVE,UAAW2C,IAVXrC,EAL+BuC,EAK/BvC,KAEAmB,GAP+BoB,EAM/BnC,QAN+BmC,EAO/BpB,aACAO,EAR+Ba,EAQ/Bb,MACAC,EAT+BY,EAS/BZ,cACAG,EAV+BS,EAU/BT,cACAC,EAX+BQ,EAW/BR,UAQJS,YAAW,IAAIrB,GACfqB,YAAW,IAAId,GACfc,YAAW,IAAIb,GACfa,YAAW,IAAIV,GAMfP,oBAAU,WAENe,EAAWtC,IAGb,CAACA,IAEHuB,oBAAU,WAGNQ,EAAUM,IAEZ,CAACA,IAEHd,oBAAU,WAGNQ,EAAUM,IACZ,IA9CiC,IAAA1C,EAgDLC,qBAhDKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAgD5B8C,EAhD4B5C,EAAA,GAgDnB6C,EAhDmB7C,EAAA,GA4DnC,OASA8C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBAAkBC,QApBV,WACpBlC,QAAQC,IAAI,WACZ,IAAMkC,EAAMxB,KAAKwB,MACbP,GAAYO,EAAMP,EAAW,IAC/Bf,KAEEgB,EAAWM,GACX7B,gCC7BL,SAAS8B,EAAT3D,GAAuE,IAArD4D,EAAqD5D,EAArD4D,GAAIC,EAAiD7D,EAAjD6D,KAAMC,EAA2C9D,EAA3C8D,KAAMC,EAAqC/D,EAArC+D,IAAKC,EAAgChE,EAAhCgE,UAAWC,EAAqBjE,EAArBiE,WAAYC,EAASlE,EAATkE,MAI3DC,EAAMlD,iBAAO,MAJuDZ,EAKtCC,mBAAS,MAL6BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAKvD+D,GALuD7D,EAAA,GAAAA,EAAA,IAAAK,EAMhCN,mBAAS,IANuBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAMnEyD,EANmExD,EAAA,GAMpDyD,EANoDzD,EAAA,GAAA0D,EAO1CjE,mBAAS,CAACkE,SAAUV,EAAMW,UAAWZ,EAAMa,SAAUX,IAPXY,EAAAnE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GAOnEK,EAPmED,EAAA,GAOzDE,EAPyDF,EAAA,GAoM1E,IAAMG,EAAiB,WACnB,IAAIC,EAAKZ,EAAI1C,QAAQuD,UAAUC,eAAeR,UAC1CS,EAAKf,EAAI1C,QAAQuD,UAAUC,eAAeT,SAC1CW,EAAKhB,EAAI1C,QAAQuD,UAAUI,MAC3BC,EAAMF,EAAK,IA1KnB,WACI,IAKIG,EASAC,EAdAC,EAAOrB,EAAI1C,QAAQgE,SAEnBC,EAAU,GAId,KACIJ,EAAMnB,EAAI1C,QAAQkE,YAAYxB,EAAI1C,QAAQmE,kBAAkBJ,EAAKK,EAAGL,EAAKM,EAAIN,EAAKO,SAASC,gBAAgBC,UACxGzB,SAAWlC,KAAK4D,MAAoB,IAAdZ,EAAGd,UAAkB,IAC9Cc,EAAGb,UAAYnC,KAAK4D,MAAqB,IAAfZ,EAAGb,WAAmB,IAEpD,MAAM0B,GAAMb,EAAK,KAIjB,KACIC,EAAKpB,EAAI1C,QAAQkE,YAAYxB,EAAI1C,QAAQmE,kBAAkBJ,EAAKK,EAAIL,EAAKY,MAAOZ,EAAKM,IAAIE,gBAAgBC,UACtGzB,SAAWlC,KAAK4D,MAAoB,IAAdX,EAAGf,UAAkB,IAC9Ce,EAAGd,UAAYnC,KAAK4D,MAAqB,IAAfX,EAAGd,WAAmB,IAEpD,MAAM0B,GAAMZ,EAAK,KAuBjB,OApBS,MAAND,GAAoB,MAANC,EAEXG,EAAU,IAKGJ,EAAGb,UACFa,EAAGd,SACJe,EAAGd,UACHc,EAAGf,SAGhBkB,EAAU,YACNJ,EAAGb,UAAY,IAAMa,EAAGd,SAAW,IACnCe,EAAGd,UAAY,IAAMa,EAAGd,SAAW,IACnCe,EAAGd,UAAY,IAAMc,EAAGf,SAAW,IACnCc,EAAGb,UAAY,IAAMc,EAAGf,SAAW,IACnCc,EAAGb,UAAY,IAAMa,EAAGd,SAAW,MAEtCkB,EA8HgBW,GAAiB,GAExCxB,EAAY,CACRJ,UAAUM,EACVP,SAAUU,EACVR,SAAUS,EACVmB,YAAajB,KAMfkB,EAAe,WACjBhF,QAAQC,IAAI,UAGVgF,EAAqB,WACvBjF,QAAQC,IAAI,iBA2ElB,OArEES,oBAAU,WACNV,QAAQC,IAAI,wCAAyCwC,EAAU,IAAIC,GAEnEE,EAAI1C,QAAU,IAAIgF,IAAUC,YAAY9C,GACxCO,EAAI1C,QAAQkF,gBAAgBC,KAAK9B,GAGjC2B,IAAUI,2BAA2BC,UAAUC,YAAc,WACzCC,KAAKC,IAAIjC,UACfI,MAAQqB,IAAUS,OAAOC,MAAMhD,EAAI1C,QAAQuD,UAAUI,MAAO,IAAM,MAIhF,IAAIgC,EAAgB,IAAIX,IAAUY,cAAclD,EAAI1C,QAAS8E,GAC7Da,EAAcE,aAAe,EAC7B,IAAIC,EAAsB,IAAId,IAAUY,cAAclD,EAAI1C,QAAS+E,GACnEe,EAAoBD,aAAe,EACnCC,EAAoBC,4BAA4BJ,GAGhD,IAAIK,EAAc,CACdC,QAAS,gCACTC,WAAY,mBACZC,UAAW,GACXC,OAAQ,YACRC,KAAM,IACNC,OAAQtB,IAAUuB,OAAOC,YACzBC,eAAgB,IAAIzB,IAAU0B,SAAS,GAAI,KAG3CC,EAAiB,CACjBV,QAAS,gCACTC,WAAY,iBACZC,UAAW,GACXC,OAAQ,YACRC,KAAM,IACNC,OAAQtB,IAAUuB,OAAOC,YACzBC,eAAgB,IAAIzB,IAAU0B,SAAS,GAAI,KAE/C1B,IAAU4B,cAAcC,QAAU7B,IAAU4B,cAAcC,QAAQC,MAAM,GAAG,GAY3E,IAXA,IAAIC,EAAiB,IAAI/B,IAAUgC,eAC/BC,EAAkB,IAAIjC,IAAUkC,gBAAgB,qCAGhDC,EAAS,CACT,CAAEC,MAAO,IAAIpC,IAAUqC,SAASrB,EAAa,IAAKsB,SAAS,GAC3D,CAAEF,MAAO,IAAIpC,IAAUqC,SAASV,EAAgB,IAAKW,QAAS7E,GAC9D,CAAE2E,MAAOL,EAAgBO,QAAS/E,GAClC,CAAE6E,MAAOH,EAAiBK,QAAS9E,IAG9B+E,EAAI,EAAGA,EAAIJ,EAAOK,OAAQD,IAC/BJ,EAAOI,GAAGH,MAAME,QAAUH,EAAOI,GAAGD,QACpC5E,EAAI1C,QAAQyH,SAASN,EAAOI,GAAGH,OAGnCL,EAAeW,KAAO,IAAIjH,KAC1BwG,EAAgBS,KAAO,IAAIjH,KAC3BN,WAAW,WACPuC,EAAI1C,QAAQ2H,aAAaC,WAAa,IACtClF,EAAI1C,QAAQ6H,KAAK,IAAI7C,IAAU8C,SAASzF,EAAMD,EAAME,IACpDI,EAAI1C,QAAQ+H,UACT,KAEPrF,EAAI1C,QAAQ+H,SACZrF,EAAI1C,QAAQgI,aAAc,GAC3B,IAGE,CAAE7E,WAAU8E,cA/JjB,WACI,IAAI,IAAIC,EAAE,EAAEA,EAAEtF,EAAc4E,OAAOU,IACjCxF,EAAI1C,QAAQmI,YAAYvF,EAAcsF,IAIxCrF,EAAiB,IAEjBH,EAAI1C,QAAQ+H,UAuJgBK,WAtNhC,SAAoBC,GA4ChB,IAAIC,EAAkB,IAAItD,IAAUuD,gBAAgBF,EAAIG,WAAWC,QAAQ5H,KAAK6H,KAAqB,IAAhB7H,KAAK8H,WAE1FjG,EAAI1C,QAAQyH,SAASa,GAIP,IAAItD,IAAU4D,cAAcP,GAClCQ,KAdR,WACI/I,QAAQC,IAAIuI,GACZzF,EAAiB,SAACD,GAAD,SAAAkG,OAAA/J,OAAAgK,EAAA,EAAAhK,CAAqB6D,GAArB,CAAmC0F,MACpD5F,EAAI1C,QAAQ+H,UAvChB,SAAoCiB,EAAUR,GAC1C,IAAI5B,EAAgB,GACpBA,EAAcqC,eAAiBT,EAE/B,IAAIU,EAAsB,IAAIlE,IAAUmE,oBAAoB,MA4B5D,OA3BAD,EAAoBE,WAAa,GACjCF,EAAoBG,WAAa,IAAIrE,IAAUsE,MAAM,EAAG,EAAG,EAAG,IAC9DJ,EAAoBK,gBAAgBC,OAAS,IAAIxE,IAAUyE,OACvDzE,IAAU0E,gBAAiB,EAC3B1E,IAAU0E,gBAAiB,GAI3BV,EAASW,eAAiBX,EAASY,mBACnChD,EAAciD,WAAa,IAAI7E,IAAUmE,oBAAoBD,GAEtDF,EAASc,oBAAsBd,EAASe,yBAC/CnD,EAAciD,WAAWG,aAAc,EACvCpD,EAAciD,WAAWI,aAAe,IAAIjF,IAAUsE,MAClD,GAAM1C,EAAciD,WAAWK,cAAcC,IAC7C,GAAMvD,EAAciD,WAAWK,cAAcE,MAC7C,GAAMxD,EAAciD,WAAWK,cAAcG,KAC7C,GAEJzD,EAAciD,WAAWS,aAAe,IACjCtB,EAASuB,iBAAmBvB,EAASwB,wBAC5C5D,EAAciD,WAAa,IAAI7E,IAAUyF,gBAAgB,MACzD7D,EAAciD,WAAWK,cAAgB,IAAIlF,IAAUsE,MAAM,EAAG,EAAG,EAAG,IACtE1C,EAAciD,WAAWI,aAAe,IAAIjF,IAAUsE,MAAM,EAAG,EAAG,EAAG,KAIlE1C,GAkBoD0B,IAmKvBoC,OApJ5C,SAAgBC,GACC,IAAI3F,IAAUqC,SAASsD,EAAQ,KAmJIC,gBAnRpD,WACI9K,QAAQC,IAAI,mBACZ2C,EAAI1C,QAAQmH,OAAO,GAAGG,SAAW5E,EAAI1C,QAAQmH,OAAO,GAAGG,QACvD5E,EAAI1C,QAAQ+H,UAgRqD8C,iBA1RrE,WACI/K,QAAQC,IAAI,oBACZ2C,EAAI1C,QAAQmH,OAAO,GAAGG,SAAW5E,EAAI1C,QAAQmH,OAAO,GAAGG,QACvD5E,EAAI1C,QAAQ+H,UAuRuE+C,QA9IvF,SAAiBC,GACbrI,EAAI1C,QAAQmH,OAAO,GAAGO,KAAOhF,EAAI1C,QAAQmH,OAAO,GAAGO,KAAO,IAAIjH,KAAKsK,GACnErI,EAAI1C,QAAQ+H,UA4IgFiD,iBAtIhG,WACIrI,EAAe,SAAAsI,GACbnL,QAAQC,IAAI,mBAAmBkL,GAC/B,IAAIC,EAAuB,CAAE,KAAM,kBAAmB,YAClDC,GAAWD,EAAqBE,QAAQH,GAAY,GAAGC,EAAqB1D,OAEhF,OADA1H,QAAQC,IAAI,kBAAkBmL,EAAqBC,IAC3CD,EAAqBC,IAC3B,IAAK,KACDzI,EAAI1C,QAAQqL,MAAMC,WAAa,IAAItG,IAAUuG,gBAC7C,MACJ,IAAK,kBACD7I,EAAI1C,QAAQqL,MAAMC,WAAa,IAAItG,IAAUwG,0BAC7C,MACJ,IAAK,WACD9I,EAAI1C,QAAQqL,MAAMC,WAAa,IAAItG,IAAUyG,mBAC7C,MACJ,IAAK,cACD/I,EAAI1C,QAAQqL,MAAMC,WAAa,IAAItG,IAAU0G,2BAA2B,SACxE,MACJ,IAAK,cACDhJ,EAAI1C,QAAQqL,MAAMC,WAAa,IAAItG,IAAU0G,2BAA2B,SACxE,MACJ,QACAhJ,EAAI1C,QAAQqL,MAAMC,WAAa,IAAItG,IAAUuG,gBAG/C,OADA7I,EAAI1C,QAAQ+H,SACLmD,EAAqBC,MA4GgFQ,YA5QlH,WACI7L,QAAQC,IAAI,eACZ2C,EAAI1C,QAAQmH,OAAO,GAAGG,SAAW5E,EAAI1C,QAAQmH,OAAO,GAAGG,QACvD5E,EAAI1C,QAAQ+H,gCC7DL,SAAS6D,EAAcC,GA+FlC,IAAIC,EAAW,GACf,IAEQA,EADAD,EAASE,KAAKC,MACHH,EAASE,KAAKC,MAAMC,IAAK,SAAAC,GAAI,OA/FhD,SAA8BA,GAC1B,SAASC,EAAUC,GAEf,IADA,IAAIC,EAAO,GACHnE,EAAE,EAAGA,EAAIkE,EAAM5E,OAAQU,IAC3BmE,EAAKD,EAAMlE,GAAGoE,MAASF,EAAMlE,GAAGqE,QAEpC,OAAOF,EAGX,IACI,IAAIG,EAAU,GACXN,EAAKjN,MAAMF,OAAO0N,OAAOD,EAAQL,EAAUD,EAAKjN,OAChDiN,EAAKQ,KAAK3N,OAAO0N,OAAOD,EAAQL,EAAUD,EAAKQ,MAC/CR,EAAKS,QAAQ5N,OAAO0N,OAAOD,EAAQL,EAAUD,EAAKS,SAClDT,EAAKU,KAAK7N,OAAO0N,OAAOD,EAAQL,EAAUD,EAAKU,MAGlD,IACIC,EADAC,EAAYN,EAAQnG,KAAK0G,MAAM,KAEnC,OAAQD,EAAU,IACd,IAAK,IACDD,EAAchM,KAAK4D,MAAMuI,WAAWF,EAAU,KAC9C,MACJ,IAAK,KACDD,EAAchM,KAAK4D,MAA+B,KAAzBuI,WAAWF,EAAU,KAC9C,MACJ,IAAK,KACDD,EAAchM,KAAK4D,MAA+B,KAAzBuI,WAAWF,EAAU,IAAS,MACvD,MACJ,IAAK,KACDD,EAAchM,KAAK4D,MAA+B,KAAzBuI,WAAWF,EAAU,IAAS,KAAK,MAC5D,MACJ,QACID,EAAchM,KAAK4D,MAAMuI,WAAWF,EAAU,KAoDtD,MA9Cc,CACV3K,GAAI+J,EAAKe,MACTjE,SAAUkE,IAAUV,EAAQW,WAC5BC,KAAM,UACN5E,WAAY,CACRC,QAAS,IAAIhI,KAAK+L,EAAQa,eAC1BJ,MAAOf,EAAKe,MACZX,KAAMJ,EAAKe,MACXhO,KAAMuN,EAAQc,cAAgB,IAAMd,EAAQe,YAC5CC,MAAO,CACHC,KAAM,CAAC,CACHC,KAAMxB,EAAKyB,KAAK,GAAGD,QAG3BE,iBAAkB,CACdC,iBAAkB,GAClBC,OAAQ,WACRC,uBAAwB,CAAC,CACrBC,SAAU,CACNC,kBAAmBzB,EAAQ0B,aAC3BC,yBAA0B3B,EAAQ4B,0BAEtCC,OAAQ,CACJC,WAAY9B,EAAQ+B,oBACpBC,gBAAiBhC,EAAQiC,uBAE7BC,qBAAsB,CAClBC,qBAAsB,IAAIlO,KAAK+L,EAAQc,eACvCsB,oBAAqB,IAAInO,KAAK+L,EAAQe,aACtCsB,mBAAoBC,SAAStC,EAAQuC,qBACrCC,YAAaF,SAAStC,EAAQyC,aAC9BC,2BAA4B,KAC5BC,0BAA2B,KAC3BC,eAAgB5C,EAAQ6C,kBAIhCC,mBAAoB,CAChBC,YAAa/C,EAAQgD,YAErBnJ,KAAMwG,MAOxB,MAAOnI,GAEL,OADA5E,QAAQC,IAAI,iCAAiC2E,EAAI+K,SAC1C,IAOsCC,CAAqBxD,KAAOyD,OAAO,SAAAzD,GAAI,OAAIA,IAAS,KAEtF,GAGjB,MAAOxH,GACL5E,QAAQC,IAAI8L,GACZ/L,QAAQC,IAAI,WACZD,QAAQC,IAAI2E,GACZoH,EAAW,GAgBf,MAbc,CACNsB,KAAM,oBACNjL,GAAI,SACJqG,WAAY,CACRoH,aAAc/D,EAASE,KAAK,2BAC5B8D,WAAahE,EAASE,KAAK,yBAA0BF,EAASE,KAAK,yBAAyB,EAC5F+D,aAAcjE,EAASE,KAAK,2BAC5BkB,MAAO,uBACPxE,QAAS,IAAIhI,MAEjBqL,SAAUA,uBCnHP,SAASiE,EAATxR,GAAoE,IAArD4D,EAAqD5D,EAArD4D,GAAIE,EAAiD9D,EAAjD8D,KAAMD,EAA2C7D,EAA3C6D,KAAME,EAAqC/D,EAArC+D,IAAKC,EAAgChE,EAAhCgE,UAAWC,EAAqBjE,EAArBiE,WAAYC,EAASlE,EAATkE,MAASuN,EAY/E9N,EAAO,CACPC,GAAIA,EACJE,KAAMA,EACND,KAAMA,EACNE,IAAKA,EACLC,UAAWA,EACXC,WAAYA,EACZC,MAAOA,IAhBPU,EAH+E6M,EAG/E7M,SACAiF,EAJ+E4H,EAI/E5H,WACAH,EAL+E+H,EAK/E/H,cAEA+C,GAP+EgF,EAM/EtF,OAN+EsF,EAO/EhF,kBACAH,EAR+EmF,EAQ/EnF,iBACAD,EAT+EoF,EAS/EpF,gBACAe,EAV+EqE,EAU/ErE,YACAb,EAX+EkF,EAW/ElF,QAYFrJ,YAAW,IAAIuJ,GACfvJ,YAAW,IAAIoJ,GACfpJ,YAAW,IAAImJ,GACfnJ,YAAW,IAAIkK,GACflK,YAAW,IAAIwG,GA3BkE,IAAAgI,ECApE,WAEX,IAAIC,EAAa,GAIXC,EAAW,SAAA5R,GAA6C,IA2C9B6R,EA3CbC,EAA2C9R,EAA3C8R,KAAMpM,EAAqC1F,EAArC0F,QAASpE,EAA4BtB,EAA5BsB,MAAOyQ,EAAqB/R,EAArB+R,IAAKC,EAAgBhS,EAAhBgS,WA+CtCC,GAJwBJ,EAIKC,EA3Cf,CACd,CACIA,KAAM,KACNI,YAAa,2OACbnE,KAAM,qBACNoE,QAAS,wCACTC,QAAU,0CAEd,CACIN,KAAM,KACNI,YAAa,+OACbnE,KAAM,0BACNoE,QAAS,wCACTC,QAAU,0CAEd,CACIN,KAAM,KACNI,YAAa,2SACbnE,KAAM,kCACNoE,QAAS,wCACTC,QAAU,0CAEd,CACIN,KAAM,MACNI,YAAa,4TACbnE,KAAM,iBACNoE,QAAS,wCACTC,QAAU,0CAEd,CACIN,KAAM,UACNI,YAAa,6IACbnE,KAAM,iBACNoE,QAAS,oCACTC,QAAU,uCAMKC,KAAM,SAACC,GAAgB,OAAOA,EAAWR,MAAQD,KAIpEU,EAASN,EAAOC,YAiBpB,OAhBA3Q,QAAQC,IAAIyQ,EAAOG,SAGhB1M,EAAQuD,OAAS,GAChB1H,QAAQC,IAAI,IAAIkE,EAAQuD,OAAO,KAE/BsJ,GADAA,EAASA,EAAOC,QAAQ,YAAa9M,IACrB8M,QAAQP,EAAOE,QAAS,KAIxCI,GADAA,GADAA,EAASA,EAAOC,QAAQP,EAAOG,QAAS,KACxBI,QAAQ,UAAWlR,IACnBkR,QAAQ,QAAST,GAGrCQ,EAASA,EAAOC,QAAQ,eAAeR,IAe3CL,EAAU,GAAS,8MACnBA,EAAU,GAAS,kNACnBA,EAAU,GAAS,8QACnBA,EAAU,IAAU,gSACpBA,EAAU,QAAc,6IAGxB,IA1FiCtR,EA6FWC,mBAAS,MA7FpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA6F1BoS,EA7F0BlS,EAAA,GA6FVmS,EA7FUnS,EAAA,GAAAK,EA8FHN,oBAAS,GA9FNO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GA8F1B+R,EA9F0B9R,EAAA,GA8FjB+R,EA9FiB/R,EAAA,GAAA0D,EA+FKjE,oBAAS,GA/FdqE,EAAAnE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GA+F1BsO,EA/F0BlO,EAAA,GA+FbmO,EA/FanO,EAAA,GAAA/B,EAiGRC,oBAAU,cAA3BkQ,EAjGyBvS,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAAAoQ,EAkGXnQ,oBAAU,WAAxBgP,EAlGyBrR,OAAAC,EAAA,EAAAD,CAAAwS,EAAA,MAAAC,EAmGRpQ,oBAAU,cAA3BqQ,EAnGyB1S,OAAAC,EAAA,EAAAD,CAAAyS,EAAA,MAAAE,EAqGI7S,mBAAS,MArGb8S,EAAA5S,OAAAC,EAAA,EAAAD,CAAA2S,EAAA,GAqGzBE,EArGyBD,EAAA,GAqGdE,EArGcF,EAAA,GAAAG,EAwGKjT,mBAAS,MAxGdkT,EAAAhT,OAAAC,EAAA,EAAAD,CAAA+S,EAAA,GAwGzBE,EAxGyBD,EAAA,GAwGbE,EAxGaF,EAAA,GA8NjC,OAnHAvR,oBAAU,WA2BHoR,GA1BW,eAAAM,EAAAnT,OAAAoT,EAAA,EAAApT,CAAAqT,EAAAvQ,EAAAwQ,KAAG,SAAAC,EAAOjK,GAAP,IAAAwD,EAAAQ,EAAAkG,EAAA,OAAAH,EAAAvQ,EAAA2Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEb7S,QAAQC,IAAI,WAAYsI,GAFXoK,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIcC,MAAMvK,EAAK,CAACwK,KAAM,OAAQC,YAAa,YAJrD,cAIHjH,EAJG4G,EAAAM,KAAAN,EAAAE,KAAA,EAKU9G,EAASQ,OALnB,OAKHA,EALGoG,EAAAM,KAMHR,EAAuB,YAAZnC,EAAwB/D,EAAOT,EAAcS,GAE9DvM,QAAQC,IAAIwS,EAAQ/J,YACpByJ,EACI,CACAe,aAAcC,OAAOV,EAAQ/J,WAAWoH,cACxCW,WAAa0C,OAAOV,EAAQ/J,WAAWqH,YACvCqD,aAAeD,OAAOV,EAAQ/J,WAAWsH,gBAE1CmD,OAAOV,EAAQ/J,WAAWoH,aAAa,IAAIqB,EAAkBsB,GAChElB,EAAgBW,EAAWzB,WAAayB,EAAWkB,aAAelB,EAAWgB,cAC7ElT,QAAQC,IAA6F,QAjB5F0S,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAoBT3S,QAAQC,IAAI,2BAEZoR,GAAW,GAtBF,yBAAAsB,EAAAW,SAAAd,EAAA,kBAAH,gBAAAe,GAAA,OAAAnB,EAAAoB,MAAA/N,KAAAgO,YAAA,EA0BAC,CAAS5B,IACxB,CAACA,IAEJpR,oBAAU,WACN,GAAGwR,EACC,GAAGA,EAAWzB,WAAayB,EAAWkB,aAAerS,KAAK4S,IAAIzB,EAAWgB,aAhD/D,KAgDyF,CACrF9C,EAAWE,GACrBtQ,QAAQC,IAAI,mBAEZ,IACI,IAAIsI,EAAM8H,EAAS,CACfE,KAAMD,EACNnM,QAASwN,EACT5R,MAAO6T,IAAW,IAAIjT,KAAK6Q,EAAaqC,MAAc,kBACtDrD,IAAKoD,IAAW,IAAIjT,KAAK6Q,EAAaqC,MAAc,kBACpDpD,WAAYyB,EAAWzB,WAAayB,EAAWkB,eAQnDrB,EAAaxJ,GAIf,MAAAuL,GACE9T,QAAQC,IAAI,uBACZoR,GAAW,SAGfA,GAAW,IAIpB,CAACa,IAEJxR,oBAAU,WACNV,QAAQC,IAAI,kBAAkBqQ,IAC/B,IAEH5P,oBAAU,WACNV,QAAQC,IAAI,eAAe0R,IAC5B,CAACA,IAEJjR,oBAAU,WAIN,GAHAV,QAAQC,IAAI,WAAWqQ,GACvBtQ,QAAQC,IAAI,cAAcuR,GAEvBlB,GAAWkB,EAAY,CAEZpB,EAAWE,GAErB,IACItQ,QAAQC,MAAI0R,GAEZ,IAAIpJ,EAAM8H,EAAS,CACfE,KAAMD,EACNnM,QAASwN,EACT5R,MAAO6T,IAAW,IAAIjT,KAAK6Q,EAAaqC,MAAc,kBACtDrD,IAAKoD,IAAW,IAAIjT,KAAK6Q,EAAaqC,MAAc,kBACpDpD,WAAY,IAShBY,GAAW,GAEXU,EAAaxJ,GAEf,MAAAwL,GACE/T,QAAQC,IAAI,0BAIrB,CAACuR,EAAYlB,IAQT,CAACY,iBAAgBE,UAASE,eDjMA0C,GAA3B9C,EA7ByEf,EA6BzEe,eAAgBE,EA7ByDjB,EA6BzDiB,QA7ByD/P,EA8BxDC,oBAAU,cAA3BkQ,EA9ByEvS,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAAAoQ,EA+B3DnQ,oBAAU,WAAxBgP,EA/ByErR,OAAAC,EAAA,EAAAD,CAAAwS,EAAA,MAAAC,EAgC3DpQ,oBAAU,WAAxBE,EAhCyEvC,OAAAC,EAAA,EAAAD,CAAAyS,EAAA,MAAAuC,EAiCvC3S,oBAAU,gBAjC6B4S,EAAAjV,OAAAC,EAAA,EAAAD,CAAAgV,EAAA,GAiCzEE,EAjCyED,EAAA,GAiC1DE,EAjC0DF,EAAA,GAAAG,EAkCrC/S,oBAAU,iBAlC2BgT,EAAArV,OAAAC,EAAA,EAAAD,CAAAoV,EAAA,GAkCzEE,EAlCyED,EAAA,GAkCzDE,EAlCyDF,EAAA,GAAAG,EAmC/CnT,oBAAU,YAnCqCoT,EAAAzV,OAAAC,EAAA,EAAAD,CAAAwV,EAAA,GAmCzEE,EAnCyED,EAAA,GAmC9DE,EAnC8DF,EAAA,GAAAG,EAoCtDvT,oBAAU,aAA3BwT,EApCuE7V,OAAAC,EAAA,EAAAD,CAAA4V,EAAA,MAAAE,EAqCpDzT,oBAAU,eAA7B0T,EArCuE/V,OAAAC,EAAA,EAAAD,CAAA8V,EAAA,MAAAE,EAsCpD3T,oBAAU,eAA7B4T,EAtCuEjW,OAAAC,EAAA,EAAAD,CAAAgW,EAAA,MAAAE,GAuCnD7T,oBAAU,gBAA9B8T,GAvCuEnW,OAAAC,EAAA,EAAAD,CAAAkW,GAAA,MAAAE,GAwCrD/T,oBAAU,cAA5BgU,GAxCuErW,OAAAC,EAAA,EAAAD,CAAAoW,GAAA,MA0CjF3U,oBAAU,WACR,GAAGwQ,EAAgB,CACjBlR,QAAQC,IAAI,kBACVD,QAAQC,IAAIiR,GACZ,IACE5I,EAAW4I,GACX,MAAOtM,GACP5E,QAAQC,IAAI,4BACZD,QAAQC,IAAI2E,MAIlB,CAACsM,IAEHxQ,oBAAU,WACRV,QAAQC,IAAI,qCACZkI,KACA,CAACqJ,EAAWlB,IAEd5P,oBAAU,WACRV,QAAQC,IAAI,cACZ8K,EAAiBwJ,IACjB,CAACA,IAEH7T,oBAAU,WACRoK,EAAgBqJ,IAChB,CAACA,IACHzT,oBAAU,WACRmL,EAAY8I,IACZ,CAACA,IAGHjU,oBAAU,WACRoU,EAAa1D,IACb,CAACA,IAEH1Q,oBAAU,WAERsU,EAAe3R,EAASF,UACxBiS,GAAgB/R,EAASH,WACzBgS,EAAe7R,EAASJ,WACxB,CAACI,EAASH,UAAUG,EAASJ,SAAUI,EAASF,WAElDzC,oBAAU,WAER4U,GAAcjS,EAAS0B,cAEvB,CAAC1B,EAAS0B,cAIZrE,oBAAU,WACRsK,EAAQxJ,IACR,CAACA,IAEHd,oBAAU,WACR8T,EAAiB9R,GACjB0R,EAAgB3R,GAChBmS,EAAYjS,IACZ,IAWJ,OACI4S,EAAAxT,EAAAC,cAAA,UAAQK,GAAIA,EAAImT,MATH,CACbC,WAAY,UACZ/Q,SAAU,QACVG,MAAO,UACPL,OAAQ,mBE/EGkR,MA5Bf,WAA2B,IAAArU,EAGSC,oBAAU,WAHnBC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAGNsU,GAHMpU,EAAA,GAAAA,EAAA,IAgBvB,OAZAI,YAAW,IAAI,WAAKgU,EAAW,QAC/BhU,YAAW,IAAI,WAAKgU,EAAW,QAC/BhU,YAAW,IAAI,WAAKgU,EAAW,QAC/BhU,YAAW,IAAI,WAAKgU,EAAW,SAC/BhU,YAAW,IAAI,WAAKgU,EAAW,aAS3B7T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc2T,UAAU,QAAQC,IAAI,wBAAwBrT,IAAI,GAAGN,QAAS,kBAAMyT,EAAW,UACpI7T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc2T,UAAU,QAAQC,IAAI,wBAAwBrT,IAAI,GAAGN,QAAS,kBAAMyT,EAAW,UACpI7T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc2T,UAAU,QAAQC,IAAI,wBAAwBrT,IAAI,GAAGN,QAAS,kBAAMyT,EAAW,UACpI7T,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAc2T,UAAU,QAAQC,IAAI,yBAAyBrT,IAAI,GAAGN,QAAS,kBAAMyT,EAAW,mBCOlIG,MA5Bf,WAAuB,IAAAzU,EAGyBC,oBAAU,iBAHnCC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAGXkT,EAHWhT,EAAA,GAGIiT,EAHJjT,EAAA,GAAAkQ,EAIuBnQ,oBAAU,gBAJjCyU,EAAA9W,OAAAC,EAAA,EAAAD,CAAAwS,EAAA,GAIX0C,EAJW4B,EAAA,GAIG3B,EAJH2B,EAAA,GAAArE,EAKepQ,oBAAU,YALzB0U,EAAA/W,OAAAC,EAAA,EAAAD,CAAAyS,EAAA,GAKXiD,EALWqB,EAAA,GAKDpB,EALCoB,EAAA,GAkBnB,OACIT,EAAAxT,EAAAC,cAAA,OAAKC,UAAU,eACXsT,EAAAxT,EAAAC,cAAA,OAAKC,UAAU,gBAAesT,EAAAxT,EAAAC,cAAA,OAAKC,UAAU,UAAU2T,UAAU,QAAOC,IAAI,0BAA0BrT,IAAI,GAAGN,QAAS,kBAAMsS,GAAkBD,OAC9IgB,EAAAxT,EAAAC,cAAA,OAAKC,UAAU,gBAAesT,EAAAxT,EAAAC,cAAA,OAAKC,UAAU,UAAU2T,UAAU,QAAOC,IAAI,yBAAyBrT,IAAI,GAAGN,QAAS,kBAAMkS,GAAiBD,OAC5IoB,EAAAxT,EAAAC,cAAA,OAAKC,UAAU,gBAAesT,EAAAxT,EAAAC,cAAA,OAAKC,UAAU,UAAU2T,UAAU,QAAOC,IAAI,qBAAqBrT,IAAI,GAAGN,QAAS,kBAAM0S,GAAaD,+ECIjIsB,MA1Bf,WAAoB,IAAA5U,EACIC,oBAAU,aAAvB4U,EADSjX,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAAAvC,EAEaC,oBAAS,GAFtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAERqX,EAFQnX,EAAA,GAEAoX,EAFApX,EAAA,GAgBhB,OAbA2C,YAAW,IAAI,WAAKyU,EAAS,SAAAD,GAAM,OAAKA,MAExCzV,oBAAU,WACNV,QAAQC,IAAI,0BACZD,QAAQC,IAAI,iBAAiBkW,IAC9B,IAEHzV,oBAAU,WACN0V,EAAwB,SAAdF,IACX,CAACA,IAEJlW,QAAQC,IAAI,mBAGR6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWuT,MAAO,CAACa,QAAUF,EAAQ,SAAS,SACzDrU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUuT,MAAO,CAACa,QAAUF,EAAQ,SAAS,UAC5DrU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYuT,MAAO,CAACa,QAAUF,EAAQ,SAAS,UAC9DrU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWuT,MAAO,CAACa,QAAUF,EAAQ,SAAS,YC2O1DG,MAxPf,SAAsBC,GAAQ,IActBC,EAdsBnV,EAIHC,oBAAU,SAAvB8U,EAJgBnX,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAQpBoV,GAAcF,EAAMG,IAAIH,EAAM5C,MADnB,IACmC4C,EAAMG,IAAIH,EAAM5C,KAA1B,OACpCA,EAAM4C,EAAM5C,IACZ+C,EAAM/C,GAAO4C,EAAMG,IAAMH,EAAM5C,KAAO8C,EAInCE,EAAM,EACZJ,EAAMK,UACLD,EAAMD,EAAM/C,EACZ6C,EAAM,MAENA,EAAME,EAAM/C,EACZgD,EAAM,KApBgB,IAAAlF,EAyBInQ,oBAAU,WAzBdyU,EAAA9W,OAAAC,EAAA,EAAAD,CAAAwS,EAAA,GAyBnBjQ,EAzBmBuU,EAAA,GAyBVtU,EAzBUsU,EAAA,GAAArE,EA0BApQ,oBAAU,cAA3BuV,EA1BiB5X,OAAAC,EAAA,EAAAD,CAAAyS,EAAA,MAAAuC,EA2BD3S,oBAAU,aAA1BwV,EA3BiB7X,OAAAC,EAAA,EAAAD,CAAAgV,EAAA,MAAAnV,EA4BcC,mBAAS,IAAI4B,MA5B3B3B,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GA4BnBiY,EA5BmB/X,EAAA,GA4BLgY,EA5BKhY,EAAA,GAAAK,EA8BMN,oBAAS,GA9BfO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GA8BnB4X,EA9BmB3X,EAAA,GA8BT4X,EA9BS5X,EAAA,GAAA0D,EAgCFjE,mBAAS,cAhCPqE,EAAAnE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GAgCnBnD,EAhCmBuD,EAAA,GAgCb+T,EAhCa/T,EAAA,GAkCpBgU,EAAa1X,mBACnB0X,EAAWlX,QAAUqW,EAAMK,SAG3B,IAAMS,EAAgB3X,mBAtCI4X,EAwCJC,YAAU,iBAAO,CAAEC,GAAI,CAAC,EAAG,MAxCvBC,EAAAxY,OAAAC,EAAA,EAAAD,CAAAqY,EAAA,GAwCjBE,EAxCiBC,EAAA,GAwCjBD,GAAME,EAxCWD,EAAA,GA2CpBE,EAAOC,YAAW,CACpBC,OAAQ,SAAApZ,GAUM,IAVFqZ,EAUErZ,EAVFqZ,KAAMC,EAUJtZ,EAVIsZ,MAAiBC,GAUrBvZ,EAVWwZ,SAUXxZ,EAVqBuZ,UAAU7B,EAU/B1X,EAV+B0X,OAAS+B,EAUxCzZ,EAVwCyZ,UAAqBtQ,GAU7DnJ,EAVmD0Z,SAUnD1Z,EAV6DmJ,MAAMwQ,EAUnE3Z,EAVmE2Z,MAUnEC,GAAA5Z,EAV0E6Z,KAU1E7Z,EAVgF8Z,aAUhF,IAAAF,EAVuF,CAC7Db,GAAIA,EAAGgB,WACPC,YAAa,CAAC,EAAG,GACjBC,WAAY,CAAC,EAAG,GAChBC,UAAW,CAAC,EAAG,GACfC,SAAU,EACVC,cAAe,EACfC,UAAU,EACVC,SAAUnR,GAEpCyQ,EAuBV,GApB0BW,gBAAMd,EAAWF,GAE3CA,EAAYA,EAAS,IAAK,EAAEA,EAavBF,GAAMX,EAAQ,GAGhBiB,GAASlB,GAAY,GACxBqB,EAAKO,SAAWhB,EACbV,EAAWlX,QAAS,CAEnB,IAAIsE,EAAS6S,EAAcnX,QAAQ+Y,cAAcC,aAG7CrZ,EAAO,EACPsZ,EAAM,EACVnZ,QAAQC,MACJ8X,EAAM,IAAI,KAAKlY,EAAQ,MAAwB4W,EAAY0C,EAAM,IACjEpB,EAAM,IAAI,KAAKlY,EAAQ,OAA4B4W,EAAY0C,EAAM,IACrEpB,EAAM,IAAI,MAAMlY,EAAQ,QAA6B4W,EAAY0C,EAAM,IAExEtZ,IAAS0Y,EAAKK,WAEbxC,EAAS,CAAC,sBAAsBmC,EAAKK,SAAS,QAAS/Y,EAAM,IAC7DsX,EAAQtX,GACR0Y,EAAKE,YAAcV,EACnBQ,EAAKf,GAAKe,EAAKI,WAGnBZ,EAAQqB,cAAIrB,EAAMQ,EAAKE,aACvB,IAAIY,EAAc,CAACtY,KAAK4D,MAAMoT,EAAM,GAAGoB,GAAKtZ,EAAKkB,KAAK4D,MAAMoT,EAAM,GAAGoB,GAAKtZ,GACvEiY,IAAME,EAAW,GACpB,IAAIsB,EAAQC,cAAIP,gBAAMK,EAAYtY,KAAKyY,IAAIxB,EAAS,EAAE,IAAKO,EAAKf,IAE7D3X,IAAS0Y,EAAKK,WACbL,EAAKf,GAAK8B,EACVf,EAAKK,SAAW/Y,GAGpB0Y,EAAKI,UAAYW,EAEjB,IAIIG,EAAOpC,EAAcnX,QAAQ+Y,cAAcS,UAAYrC,EAAcnX,QAAQ+Y,cAAcC,aAAe,EAC1GS,GAAStC,EAAcnX,QAAQgZ,aAAe7B,EAAcnX,QAAQ+Y,cAAcC,aAAe,EAErGI,EAAM,GAAKA,EAAM,GAAGG,EAAOA,EAAOH,EAAM,GACxCA,EAAM,GAAKA,EAAM,GAAGK,EAAOA,EAAOL,EAAM,GAExC5B,EAAI,CAAGF,GAAI8B,EAAUzO,OAAQiN,EA/DV,CAAE8B,KAAM,EAAGC,QAAS,KAAOC,SAAU,GAAIC,UAAW,KADtD,CAAEH,KAAM,EAAGC,QAAS,IAAMC,SAAU,GAAIC,UAAW,GAgEDC,UAAWlC,EAAMmC,OAT/D,SAAAC,GAAY,IAAT1C,EAAS0C,EAAT1C,GAAiBM,GAAS3B,GAASe,GAAY,GAAaY,GAAQjB,EAAclD,IAAM6D,EAAG,GAAGhT,EAAO,GAAGiS,IAStB0D,QAVtF,SAAA/H,GAAY,IAAToF,EAASpF,EAAToF,GAAWR,EAAgBrD,IAAM6D,EAAG,GAAGhT,EAAO,GAAGiS,MAc5E,OAAO8B,GAEX6B,QAAS,SAAAC,GAAiEA,EAA/DvC,KAA+D,IAAzDC,EAAyDsC,EAAzDtC,MAAOI,EAAkDkC,EAAlDlC,SAAUmC,EAAwCD,EAAxCC,MAAwCC,EAAAF,EAAjC9B,YAAiC,IAAAgC,EAA3B,CAAE/C,GAAIA,EAAGgB,YAAkB+B,EACtEva,QAAQC,IAAIqa,GACZlE,EAASoB,EAAGgB,WAAW,GAAK,IAAMhB,EAAGgB,WAAW,IAChDtB,GAAY,GACZ,IAAI1S,EAAS6S,EAAcnX,QAAQ+Y,cAAcC,aAI7CI,EAAQN,gBAAMO,cAAIxB,EAAMQ,EAAKf,IAAK,IAKtC,OAHAe,EAAKf,GAAK8B,EAEV5B,EAAI,CAAGF,GAAI8B,EAAQzO,OAAQ,CAAEgP,QAAS,KAAMC,SAAU,GAAIC,UAAW,KAASC,UAAW7B,EAAU8B,OAN9E,SAAAO,GAAY,IAAThD,EAASgD,EAAThD,GAAaN,GAAY,GAAYiB,GAAYtB,EAAclD,IAAM6D,EAAG,GAAGhT,EAAO,GAAGiS,IAMY0D,QAPrG,SAAAM,GAAY,IAATjD,EAASiD,EAATjD,GAAWR,EAAgBrD,IAAM6D,EAAG,GAAGhT,EAAO,GAAGiS,MAQjE8B,KA1IW3G,EA+KQ7S,mBAAS,IA/KjB8S,EAAA5S,OAAAC,EAAA,EAAAD,CAAA2S,EAAA,GA+KnB8I,EA/KmB7I,EAAA,GA+KR8I,EA/KQ9I,EAAA,GAsO1B,OArDA+I,0BAAgB,WAEZD,EAlCc,WAWd,IATA,IACIE,EAAKC,EACLC,EAFAC,EAAY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC7DC,EAAO,EAChBC,EAAY,EACrBC,EAAO,GACLC,EAAa7E,EAAMK,SAAmB,WAAT,SAC7ByE,EAAe9E,EAAMK,SAAqB,aAAX,WAC/B0E,EAAc/E,EAAMK,SAAoB,YAAV,UAG3BxO,EAAEmO,EAAM5C,IAAIvL,GAAGmO,EAAMG,IAAItO,GAAG,KACjCyS,EAAO,IAAIla,KAAKyH,GAAImT,aACpBT,EAAQE,EAAW,IAAIra,KAAKyH,GAAIoT,eACxB,IAAI7a,KAAKyH,GAAIqT,cACrBR,EAAQ,IAAIta,KAAKyH,GAAIsT,iBAClBb,IAAQE,GAASI,EAAK9V,KAAK,CAACsW,MAAMP,EAAUQ,KAAMxT,EAAEmO,EAAM5C,KAAK8C,EAAYoF,MAAOhB,IAClFC,IAAUI,IACTC,EAAK9V,KAAK,CAACsW,MAAMN,EAAYO,KAAMxT,EAAEmO,EAAM5C,KAAK8C,EAAYoF,MAAOf,IACnEK,EAAK9V,KAAK,CAACsW,MAAML,EAAWM,KAAMxT,EAAEmO,EAAM5C,KAAK8C,EAAYoF,MAAOZ,KAItEF,EAAUF,EACVK,EAAYJ,EAGZ,OAAOK,EAAKhP,IAAI,SAAAC,GAAI,OAAiBtK,EAAAC,EAAAC,cAAA,OAAKC,UAAWmK,EAAKuP,MAAOG,IAAK1P,EAAKuP,MAAMvP,EAAKwP,IAAKpG,MAASe,EAAMK,SAA0B,CAACmF,IAAI3P,EAAKwP,KAA1B,CAACI,KAAK5P,EAAKwP,MAAsBxP,EAAKyP,SAOjJI,CAAU1F,EAAMK,YAE/B,CAACL,EAAMK,WAMTgE,0BAAgB,WAEZ,IAAIlR,EAAQ,EACRuN,IACGV,EAAMK,UACLlN,GAAWiK,EAAMnS,GAASiV,EAAYY,EAAcnX,QAAQ+Y,cAAcC,aAAa,EACvFxB,EAAI,CAAEF,GAAI,CAAC,EAAE9N,GAASmB,OAAQ,CAAEgP,QAAS,KAAMC,SAAU,IAAMK,QAAS,KAAMF,OAAQ,SAEtFvQ,GAAWiK,EAAMnS,GAASiV,EAAYY,EAAcnX,QAAQ+Y,cAAciD,YAAY,EACtFxE,EAAI,CAAEF,GAAI,CAAC9N,EAAO,GAAImB,OAAQ,CAAEgP,QAAS,KAAMC,SAAU,IAAMK,QAAS,KAAMF,OAAQ,UAIhG,CAACzY,EAAQkZ,IAEXha,oBAAU,WACNe,EAAWsV,IACb,CAACA,IAIHrW,oBAAU,WAEN,OAAOb,GACH,KAAK,GACDiX,EAAa,OACb,MACJ,KAAK,KACDA,EAAa,SACb,MACJ,KAAK,MACDA,EAAa,QACb,MACJ,QACIA,EAAa,UAEvB,CAACjX,IAGH+a,0BAAgB,WACZ5a,QAAQC,IAAI,oBAAoBsW,EAAM4F,OACxC,CAAC5F,EAAM4F,OAGLra,EAAAC,EAAAC,cAAA,OAAKC,UAAWsU,EAAMK,SAAS,SAAS,QAEpC9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKwC,OAAO,KAAKK,MAAM,KAAK5C,UAAU,YAClCH,EAAAC,EAAAC,cAAA,WAASoa,OAAO,uBAGxBta,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBoa,IAAKhF,GAEhCvV,EAAAC,EAAAC,cAACsa,EAAA,EAASnD,IAAVla,OAAA0N,OAAA,CAAc1K,UAAU,aAAgB0V,IAAxC,CAAgDnC,MAAO,CAAE3Q,MAAO2R,EAAIhS,OAAQmS,EAAK4F,UAAW/E,EAAGgF,YAAY,SAAClY,EAAGC,GAAJ,yBAAAyE,OAA6BzE,EAA7B,cACtGmW,YCjNN+B,MAvCf,WAAqB,IAAApb,EAEKC,oBAAU,WAAxBE,EAFSvC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAAAoQ,EAGMnQ,oBAAU,aAAzB4U,EAHSjX,OAAAC,EAAA,EAAAD,CAAAwS,EAAA,MAAAC,EAIMpQ,oBAAU,aAAzBob,EAJSzd,OAAAC,EAAA,EAAAD,CAAAyS,EAAA,MAAA5S,EAMOC,mBAAS,IANhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMVmc,EANUjc,EAAA,GAMJ2d,EANI3d,EAAA,GAAAK,EAOSN,mBAAS,IAPlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAOVyb,EAPUxb,EAAA,GAOHsd,EAPGtd,EAAA,GAAA0D,EAQKjE,mBAAS,IARdqE,EAAAnE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GAQV6X,EARUzX,EAAA,GAQLyZ,EARKzZ,EAAA,GAAAwO,EASO7S,mBAAS,IAThB8S,EAAA5S,OAAAC,EAAA,EAAAD,CAAA2S,EAAA,GASVhK,EATUiK,EAAA,GASJ7G,EATI6G,EAAA,GAwBjB,OAbA+I,0BAAgB,WACZ,IAAIzb,EAAO,IAAIwB,KAAKa,GACpBmb,EAAQxd,EAAKuc,kBACbkB,EAAShJ,IAAWzU,EAAK,YACzB0d,EAAOjJ,IAAWzU,EAAK,WACvB6L,EAAQ4I,IAAWzU,EAAK,kBAC1B,CAACqC,IAEHoZ,0BAAgB,WACZ5a,QAAQC,IAAI,cAAcyc,IAC5B,CAACA,IAIC5a,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,WAAuB,IAAZya,EAAiB,oBAAoB,OAAQZ,IAAI,QAAjE,QACAha,EAAAC,EAAAC,cAAA,OAAKC,UAAuB,QAAZiU,EAAkB,wBAAwB,WAAa4F,IAAI,OAASjB,GACpF/Y,EAAAC,EAAAC,cAAA,OAAKC,UAAuB,SAAZiU,EAAmB,yBAAyB,YAAc4F,IAAI,QAASb,GACvFnZ,EAAAC,EAAAC,cAAA,OAAKC,UAAuB,UAAZiU,EAAoB,0BAA0B,aAAe4F,IAAI,SAAUhB,GAC3FhZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAY6Z,IAAI,QAASlU,WCVrCkV,MAtBf,WAAyB,IAAAzb,EAEKC,oBAAU,eAA5Byb,EAFa9d,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAWrB,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,WAAOjB,KAAK6H,KAAKmU,EAAc,KAAO,eC0CnCC,MApDf,WAAiB,IAAA3b,EAGeC,oBAAU,SAHzBC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAGL4b,EAHK1b,EAAA,GAGE6U,EAHF7U,EAAA,GAAAzC,EAIiBC,oBAAS,GAJ1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAILqX,EAJKnX,EAAA,GAIGke,EAJHle,EAAA,GAAAK,EAKuBN,mBAAS,IALhCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAKL8d,EALK7d,EAAA,GAKM8d,EALN9d,EAAA,GAwCb,OAhCAqC,YAAW,IAAI,WAAKub,EAAU,SAAA/G,GAAM,OAAKA,MAEzCzV,oBAAU,WACNV,QAAQC,IAAI,yBACb,IAEHS,oBAAU,WACN,GAAGyV,EAAQ,CACPnW,QAAQC,IAAIgd,EAAM,GAAG,KAAKA,EAAM,IAChC,IAAII,EAAQF,EACZE,EAAMJ,EAAM,IAAMA,EAAM,GACxBG,EAAcC,GACdrd,QAAQC,IAAIod,KAEjB,CAACJ,IAEJvc,oBAAU,WACNV,QAAQC,IAAI,eACZD,QAAQC,IAAIkd,IACb,CAACA,EAAU,KAEdzc,oBAAU,WACN0V,EAAU,CAAC,KAAK,KACjB,IAUCtU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQuT,MAAO,CAACa,QAAUF,EAAQ,SAAS,OAAQtR,MAAO,OAAQL,OAAO,SAEpF1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UACKmb,EAAUhR,IAAI,SAAAC,GAAI,OAAEtK,EAAAC,EAAAC,cAAA,MAAI8Z,IAAK1P,GAAOA,eC/C1C,SAASkR,EAAW/G,GAAO,IAAAlV,EAEfC,oBAAU,SAAvB8U,EAF4BnX,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAAAvC,EAIRC,oBAAS,GAJDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAI/Bye,EAJ+Bve,EAAA,GAItBwe,EAJsBxe,EAAA,GAAAsY,EAKhBC,YAAU,iBAAO,CAAEC,GAAI,CAAC,EAAG,MALXC,EAAAxY,OAAAC,EAAA,EAAAD,CAAAqY,EAAA,GAK7BE,EAL6BC,EAAA,GAK7BD,GAAME,EALuBD,EAAA,GAOhCgG,EAAa/d,mBAEbge,EAAS,WACXtH,EAAS,CAAC,gBAAgBmH,EAAQ,IAAIE,EAAWvd,QAAQgc,YAAY,IACrExE,EAAI,CAAEF,GAAK+F,EAAc,CAACE,EAAWvd,QAAQgc,YAAY,GAAtC,CAAC,EAAE,GAAuClC,WAAW,IACxEwD,EAAW,SAAAD,GAAO,OAAKA,KAG3B7c,oBAAU,WACN0V,EAAS,CAAC,YAAYmH,EAAQ,KAEhC,CAACA,IAEH7c,oBAAU,WACNL,WAAWqd,EAAO,MAEpB,IAEF,IAAM/F,EAAOC,YAAW,CACpBC,OAAQ,SAAApZ,GAA2E,IAAvEyZ,EAAuEzZ,EAAvEyZ,UAAWF,EAA4DvZ,EAA5DuZ,SAAUF,EAAkDrZ,EAAlDqZ,KAAOC,EAA2CtZ,EAA3CsZ,MAAO4F,EAAoClf,EAApCkf,KAAoCtF,EAAA5Z,EAA9B8Z,YAA8B,IAAAF,EAAzB,CAACb,GAAIA,EAAGgB,YAAiBH,EAI/E,GAAGP,EAECJ,EAAI,CAAEF,GAAI+B,cAAIhB,EAAKf,GAAGO,GAAQiC,WAAW,SAKzC,GAAG2D,EAAK,GAAK,GAAK,CACY3E,gBAAMd,EAAWF,GAC3C5B,EAAS,CAAC,YAAYmH,EAAQ,IAC9B7F,EAAI,CAAEF,GAAI,CAACiG,EAAWvd,QAAQgc,YAAY,GAAIlC,WAAW,IACzDwD,GAAW,QAEX9F,EAAI,CAAEF,GAAIe,EAAKf,GAAIwC,WAAW,IAGtC,OAAOzB,KAqBf,OACIzW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO4T,IAAKU,EAAMqH,SAAUpb,IAAI,GAAIN,QAASwb,IAE5D5b,EAAAC,EAAAC,cAACsa,EAAA,EAASnD,IAAVla,OAAA0N,OAAA,GAAkBgL,IAAlB,CAA0B0E,IAAKoB,EAAYxb,UAAU,eAAeuT,MAAO,CAAEqI,WAAY,OAAQtB,UAAW/E,EAAGgF,YAAY,SAAClY,EAAGC,GAAJ,qBAAAyE,OAAyB1E,EAAzB,gBACvHxC,EAAAC,EAAAC,cAAA,WACKuU,EAAMuH,YC3D3B,IA6GeC,EA7GH,WAAM,IAAAjf,EAEeC,oBAAS,GAFxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAETkf,EAFShf,EAAA,GAEGif,EAFHjf,EAAA,GAAAqC,EAMgBC,oBAAU,WAN1BC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAMRiP,EANQ/O,EAAA,GAAAA,EAAA,GAOdb,oBAAU,WACNV,QAAQC,IAAI,uBAAwBqQ,IACrC,CAACA,IATU,IAAAjR,EAcMN,mBAAU,IAAI4B,KAAK,cAAeC,WAdxCtB,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAcTsU,EAdSrU,EAAA,GAAA0D,GAAA1D,EAAA,GAeMP,mBAAU,IAAI4B,KAAK,cAAeC,YAfxCwC,EAAAnE,OAAAC,EAAA,EAAAD,CAAA+D,EAAA,GAeT0T,EAfStT,EAAA,GAAAwO,GAAAxO,EAAA,GAiBgBrE,oBAAS,IAjBzB8S,EAAA5S,OAAAC,EAAA,EAAAD,CAAA2S,EAAA,GAiBTgF,EAjBS/E,EAAA,GAiBCqM,EAjBDrM,EAAA,GAmBhBlQ,YAAW,IAAI,WACbuc,EAAY,SAAAC,GACR,OAASA,MAKfzd,oBAAU,WAER,IAAM0d,EAAU,WACd,OAAO,IAAIC,QAAQ,SAAAC,GACjBje,WAAW,WACT,IAAMke,EAAYxd,KAAK6H,KAAqB,GAAhB7H,KAAK8H,UACjC7I,QAAQC,IAAI,gBACZqe,EAAQC,IACP,QARO,SAAAC,IAAA,OAAAA,EAAAvf,OAAAoT,EAAA,EAAApT,CAAAqT,EAAAvQ,EAAAwQ,KAYd,SAAAC,IAAA,OAAAF,EAAAvQ,EAAA2Q,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACOmL,EADP,CAAArL,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAE8BuL,IAF9B,OAAAzL,EAAAM,KAGIgL,GAAS,GAHb,wBAAAtL,EAAAW,SAAAd,OAZcgB,MAAA/N,KAAAgO,YAAA,WAAA+K,EAAAhL,MAAA/N,KAAAgO,WAmBdgL,IACC,IA9Ca,IAAAzM,EAmDWjT,oBAAS,GAnDpBkT,EAAAhT,OAAAC,EAAA,EAAAD,CAAA+S,EAAA,GAmDT0M,EAnDSzM,EAAA,GAmDF0M,EAnDE1M,EAAA,GAAA2M,EAoD2BC,YAAcC,OAAOC,SAASC,MAAnDC,GApDNL,EAoDRM,aApDQN,EAoDMK,kBAQtB,OALAtd,YAAW,IAAIsd,GAIjBjf,QAAQC,IAAI,eAER6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmd,EAAApd,EAAD,CAAYyF,QAASkX,EAAQU,SAAU,WAAYV,GAAQC,GAAU,KAEnE7c,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACqd,EAAD,CAAWzI,SAAUA,KAGvB9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACsd,EAAD,CAAiB3gB,SAAS,YAG5BmD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACiO,EAAD,CAAK5N,GAAG,QAAQI,UAAU,OAAOC,WAAW,OAAOJ,KAAK,MAAMC,KAAK,KAAKI,MAAM,UAEhFb,EAAAC,EAAAC,cAAA,OAAKC,UAAW2U,EAAS,gBAAgB,iBACvC9U,EAAAC,EAAAC,cAACud,EAAD,CAAc5L,IAAKA,EAAK+C,IAAKA,EAAKE,SAAUA,KAG9C9U,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBqO,GAC/BxO,EAAAC,EAAAC,cAACwd,EAAD,MACA1d,EAAAC,EAAAC,cAACsb,EAAD,CAAYnH,OAAO,QAAQyH,SAAS,yBAClC9b,EAAAC,EAAAC,cAACyd,EAAD,MACA3d,EAAAC,EAAAC,cAAC0d,EAAD,OAGF5d,EAAAC,EAAAC,cAAC2d,EAAD,CAAOC,OAAO,YACd9d,EAAAC,EAAAC,cAAC6d,EAAD,SClGR,IAAMC,EAAcC,QACa,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvB3c,UAAU4c,cACPC,SAASF,GACTG,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfpd,UAAU4c,cAAcS,WAK1B9gB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB8gB,MAAM,SAAAC,GACLhhB,QAAQghB,MAAM,4CAA6CA,KClE/DhhB,QAAQC,IAAI,iBAAiB,IAAIU,MAAQC,WAGzCqgB,oBAAU,CAACzf,SAAW,IAAIb,MAAQC,YAClCqgB,oBAAU,CAACzP,YAAc,IAAI7Q,MAAQC,YACrCqgB,oBAAU,CAAC3Q,QAAS,OACpB2Q,oBAAU,CAACvE,WAAW,IACtBuE,oBAAU,CAACtP,WAAY,KCA3BuP,iBACEpf,EAAAC,EAAAC,cAACmf,EAAD,MAIApC,SAASqC,eAAe,SFIT,WACb,GAA6C,kBAAmB3d,UAAW,CAGzE,GADkB,IAAI4d,IAAIC,YAAwBxC,OAAOkB,UAC3CuB,SAAWzC,OAAOkB,SAASuB,OAIvC,OAGFzC,OAAO0C,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAApX,OAAMsY,YAAN,sBAEPxB,EAwCV,SAAiCM,GAE/BtN,MAAMsN,GACHG,KAAK,SAAAxU,GAGkB,MAApBA,EAASiC,SACuD,IAAhEjC,EAAS0V,QAAQC,IAAI,gBAAgBpW,QAAQ,cAG7C7H,UAAU4c,cAAcsB,MAAMpB,KAAK,SAAAC,GACjCA,EAAaoB,aAAarB,KAAK,WAC7BzB,OAAOkB,SAAS6B,aAKpB1B,EAAgBC,KAGnBW,MAAM,WACL/gB,QAAQC,IACN,mEA5DA6hB,CAAwB1B,GAGxBD,EAAgBC,MErB1B2B","file":"static/js/main.2b405651.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, duration, startdate }) {\n    //console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    let initDate = startdate\n    const [date, setDate] = useState(initDate)\n    const [playing, setPlaying] = useState(false)\n    const ldate = useRef();\n\n    // refresh rate in msec\n    const refreshRate = 50\n\n    function incrementDate(step) {\n        //setDate(prevDate => { return prevDate + step  });\n        ldate.current += step \n        //setDate((new Date(ldate.current)).getTime());\n        setDate(ldate.current);\n    }\n      \n\n      // Control functions\n    const intervalRef = useRef();\n    const step = useRef(refreshRate);\n    const timeoutRef = useRef();\n    \n\n    function increaseSpeed() {\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshRate) step.current = refreshRate\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshRate) step.current = -1 * refreshRate\n     }\n\n    function start() {\n        console.log(\"starting Timer... (will stop in \"+duration/1000+\" sec)\")\n        if (!intervalRef.current) {\n            intervalRef.current = setInterval(() => incrementDate(step.current), refreshRate);\n            setPlaying(true)\n        }\n        timeoutRef.current = setTimeout(() => {\n            togglePause()\n            //start()\n          }, duration);\n    }\n\n    function togglePause() {\n        console.log('toggle clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) {\n            setPlaying(false)\n            clearInterval(intervalRef.current)\n            intervalRef.current = undefined\n        } else start()\n    }\n\n    function reset() {\n        console.log('reset')\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current)\n            intervalRef.current = undefined\n            setPlaying(false)\n        }\n        let initDate = (new Date()).getTime()\n        step.current = refreshRate\n        setDate(initDate)\n        ldate.current = initDate\n    }\n\n     \n    function forceDate(newdate) {\n        ldate.current = newdate\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        setDate((new Date()).getTime())\n        ldate.current = date\n        if (autoStart) {\n            start();\n        }\n        //return reset;\n    }, []);\n\n  \n  return { date, playing, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useClock } from \"./useClock\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\n\n\n\n\nfunction ClockController({ duration }) {\n\n    const [ appdate, setAppdate ] = useGlobal('appdate');\n\n    const {\n        date,\n        playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        autoStart: false,\n        duration: duration,\n        startdate: appdate\n    })\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",reset)\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    //const dateLabel = (new Date(date) ).toUTCString()\n\n\n\n    useEffect(() => {\n        //console.log(\"useEffect (date) in ClockController\")\n        setAppdate(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (appdate) in ClockController\")\n        //setAppdate(date)\n        forceDate(appdate)\n        //setAppdate({appdate: new Date(date)})\n    },[appdate]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (init) in ClockController\")\n        //console.log(\"appdate changed\")\n        forceDate(appdate)\n    },[]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        console.log('pressed')\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 300) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n    \n    return (\n/*\n        <div {...handlers} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width:\"100%\", height: \"100%\"}}>\n            {(new Date(date) ).toUTCString()}\n        </div>\n\n<div onClick={togglePause}><img className='Buttons' src={playing?pauseImage:playImage} alt=''/></div>\n*/\n\n    <div className= 'ClockController' onClick={handleDoubleTap} ></div>\n    );\n}\n\nexport default ClockController;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\n\n\n// BasicWorldWindowController.prototype.applyLimits = function () {\n//     var navigator = this.wwd.navigator;\n\n//     // Clamp latitude to between -90 and +90, and normalize longitude to between -180 and +180.\n//     navigator.lookAtLocation.latitude = WWMath.clamp(navigator.lookAtLocation.latitude, -90, 90);\n//     navigator.lookAtLocation.longitude = Angle.normalizedDegreesLongitude(navigator.lookAtLocation.longitude);\n\n//     // Clamp range to values greater than 1 in order to prevent degenerating to a first-person navigator when\n//     // range is zero.\n//     navigator.range = WWMath.clamp(navigator.range, 1, Number.MAX_VALUE);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.heading = Angle.normalizedDegrees(navigator.heading);\n\n//     // Clamp tilt to between 0 and +90 to prevent the viewer from going upside down.\n//     navigator.tilt = WWMath.clamp(navigator.tilt, 0, 90);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.roll = Angle.normalizedDegrees(navigator.roll);\n\n//     // Apply 2D limits when the globe is 2D.\n//     if (this.wwd.globe.is2D() && navigator.enable2DLimits) {\n//         // Clamp range to prevent more than 360 degrees of visible longitude. Assumes a 45 degree horizontal\n//         // field of view.\n//         var maxRange = 2  Math.PI  this.wwd.globe.equatorialRadius;\n//         navigator.range = WWMath.clamp(navigator.range, 1, maxRange);\n\n//         // Force tilt to 0 when in 2D mode to keep the viewer looking straight down.\n//         navigator.tilt = 0;\n//     }\n// };\n\nexport function useEww({ id, clon, clat, alt, starfield, atmosphere, names }) {\n    //console.log('useEww renders')\n    \n  \n    const eww = useRef(null)\n    const [projection, setProjection] = useState(\"3D\")\n    const [geojsonlayers, setGeojsonlayers] = useState([])\n    const [ewwstate, setEwwState] = useState({latitude: clat, longitude: clon, altitude: alt})\n\n    //toggle atmosphere\n    function toggleAtmosphere() {\n        console.log('toggleAtmosphere')\n        eww.current.layers[3].enabled = !eww.current.layers[3].enabled\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield() {\n        console.log('toggleStarfield')\n        eww.current.layers[2].enabled = !eww.current.layers[2].enabled\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames() {\n        console.log('toggleNames')\n        eww.current.layers[1].enabled = !eww.current.layers[1].enabled\n        eww.current.redraw();\n    }\n\n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n\n    function addGeojson(url) {\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        \n        function loadCompleteCallback() {\n            console.log(renderableLayer)\n            setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n            eww.current.redraw();\n        }\n    \n    \n        let renderableLayer = new WorldWind.RenderableLayer(url.properties.updated+Math.ceil(Math.random() * 10000))\n        // if (replace) removeGeoJson()\n        eww.current.addLayer(renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers(eww.current.layers)\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])        \n    }\n\n    function removeGeojson() {\n        for(let i=0;i<geojsonlayers.length;i++) {\n          eww.current.removeLayer(geojsonlayers[i])\n        //   console.log('removing json layers: ')\n        //   console.log(geojsonlayers[i])\n        }\n        setGeojsonlayers([])\n        // console.log(geojsonlayers)\n        eww.current.redraw();\n      }\n\n    function addWMS(config) {\n        let layer =  new WorldWind.WmsLayer(config, \"\")\n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n    }\n\n\n    function setTime(epoch) {\n        eww.current.layers[2].time = eww.current.layers[3].time = new Date(epoch)\n        eww.current.redraw();\n        \n\n     }\n\n\n    function toggleProjection() {\n        setProjection( prevProj => {\n          console.log(\"prevProjection: \"+prevProj)\n          let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n          let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n          console.log(\"newProjection: \"+supportedProjections[newProj])\n          switch (supportedProjections[newProj]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n            }\n          eww.current.redraw();\n          return supportedProjections[newProj]\n          })      \n      }\n\n    // callback from eww   \n    // function setGlobeStates() {\n    //     console.log('ewwstate update')\n    //     setEwwState({\n    //         longitude:eww.current.navigator.lookAtLocation.longitude, \n    //         latitude: eww.current.navigator.lookAtLocation.latitude,\n    //         altitude: eww.current.navigator.range})\n    // }\n    const setGlobeStates = () => {\n        let lo = eww.current.navigator.lookAtLocation.longitude\n        let la = eww.current.navigator.lookAtLocation.latitude\n        let al = eww.current.navigator.range\n        let vp = (al < 2000000?getViewPolygon():'')\n        // console.log(al + 'km : '+ vp)\n        setEwwState({\n            longitude:lo, \n            latitude: la,\n            altitude: al, \n            viewpolygon: vp\n        })\n    }\n\n    // handler for tap/click\n\n    const handleClick  = () => {\n        console.log('click')\n    }\n\n    const handleDoubleClick  = () => {\n        console.log('double click')\n        \n    }\n\n    \n    // didMount effect\n    useEffect(() => {\n        console.log(\"useEffect (mount) in Eww  star/atmo: \"+ starfield+'/'+atmosphere)\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n        eww.current = new WorldWind.WorldWindow(id);\n        eww.current.redrawCallbacks.push(setGlobeStates)\n\n        // Define a min/max altitude limit\n        WorldWind.BasicWorldWindowController.prototype.applyLimits = function () {\n            var navigator = this.wwd.navigator;\n            navigator.range = WorldWind.WWMath.clamp(eww.current.navigator.range, 2000, 300000000);\n        }\n\n        // define click/tap recognisers\n        let tapRecognizer = new WorldWind.TapRecognizer(eww.current, handleClick);\n        tapRecognizer.numberOfTaps = 1;\n        let doubleTapRecognizer = new WorldWind.TapRecognizer(eww.current, handleDoubleClick);\n        doubleTapRecognizer.numberOfTaps = 2;\n        doubleTapRecognizer.recognizeSimultaneouslyWith(tapRecognizer);\n\n        //setWwd(eww);\n        let wmsConfigBg = {\n            service: \"https://tiles.maps.eox.at/wms\",\n            layerNames: \"s2cloudless-2018\",\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n    \n        let wmsConfigNames = {\n            service: \"https://tiles.maps.eox.at/wms\",\n            layerNames: \"overlay_bright\",\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n        WorldWind.configuration.baseUrl = WorldWind.configuration.baseUrl.slice(0,-3)\n        let starFieldLayer = new WorldWind.StarFieldLayer();\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        //atmosphereLayer.minActiveAltitude = 5000000\n    \n        let layers = [\n            { layer: new WorldWind.WmsLayer(wmsConfigBg, \"\"), enabled: true },\n            { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: starfield },\n            { layer: atmosphereLayer, enabled: atmosphere }\n        ];\n    \n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            eww.current.addLayer(layers[l].layer);\n        }\n        //let date = new Date();\n        starFieldLayer.time = new Date();\n        atmosphereLayer.time = new Date();\n        setTimeout(() => {\n            eww.current.goToAnimator.travelTime = 1000;\n            eww.current.goTo(new WorldWind.Position(clat, clon, alt));\n            eww.current.redraw();\n            }, 2000)\n    \n        eww.current.redraw();\n        eww.current.deepPicking = true;\n    }, []); // effect runs only once\n        \n  \n  return { ewwstate, removeGeojson, addGeojson, addWMS, toggleStarfield, toggleAtmosphere, setTime, toggleProjection, toggleNames };\n}\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(hubItem.footprint),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    links: {\n                        data: [{\n                            href: item.link[0].href,\n                        }]\n                    },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            size: sizeInBytes\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import React, { useGlobal, useState, useEffect } from \"reactn\"\nimport { useEww } from \"./useEww\"\n// import { useGlobal } from 'reactn'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport useDatahub from \"./useDatahub\"\n\n\nexport default function Eww({ id, clat, clon, alt, starfield, atmosphere, names }) {\n\nconst {\n    ewwstate,\n    addGeojson,\n    removeGeojson,\n    addWMS,\n    toggleProjection,\n    toggleAtmosphere,\n    toggleStarfield,\n    toggleNames,\n    setTime\n} = useEww({\n    id: id,\n    clat: clat,\n    clon: clon,\n    alt: alt,\n    starfield: starfield,\n    atmosphere: atmosphere,\n    names: names\n})\n\n  // toogle projection\n  useHotkeys(\"p\",toggleProjection)  \n  useHotkeys(\"a\",toggleAtmosphere)  \n  useHotkeys(\"s\",toggleStarfield)  \n  useHotkeys(\"n\",toggleNames)  \n  useHotkeys(\"c\",removeGeojson)\n\n  const { geojsonResults, loading} = useDatahub();\n  const [ searchdate,  ] = useGlobal('searchdate');\n  const [ mission,  ] = useGlobal('mission');\n  const [ appdate,  ] = useGlobal('appdate')\n  const [ appstarfield,  setAppstarfield] = useGlobal('appstarfield')\n  const [ appatmosphere,  setAppatmosphere] = useGlobal('appatmosphere')\n  const [ appnames,  setAppnames] = useGlobal('appnames')\n  const [ , setSearching ] = useGlobal('searching')\n  const [ , setAppaltitude ] = useGlobal('appaltitude')\n  const [ , setApplatitude ] = useGlobal('applatitude')\n  const [ , setApplongitude ] = useGlobal('applongitude')\n  const [ , setApppolygon ] = useGlobal('apppolygon')\n\n  useEffect(() => {\n    if(geojsonResults) {\n      console.log('datahub in use')\n        console.log(geojsonResults)\n        try {\n          addGeojson(geojsonResults)\n        } catch (err) {\n          console.log(\"error on geojson parsing\")\n          console.log(err)\n        }\n      }\n      \n  },[geojsonResults]);\n\n  useEffect(() => {\n    console.log('reacting to searchdate or mission')\n    removeGeojson()\n  },[searchdate,mission]);\n\n  useEffect(() => {\n    console.log('atmosphere')\n    toggleAtmosphere(appatmosphere)\n  },[appatmosphere])\n\n  useEffect(() => {\n    toggleStarfield(appstarfield)\n  },[appstarfield])\n  useEffect(() => {\n    toggleNames(appnames)\n  },[appnames])\n\n\n  useEffect(() => {\n    setSearching(loading)\n  },[loading]);\n\n  useEffect(() => {\n    // console.log(' ewwstate changed')\n    setAppaltitude(ewwstate.altitude)\n    setApplongitude(ewwstate.longitude)\n    setApplatitude(ewwstate.latitude)\n  },[ewwstate.longitude,ewwstate.latitude, ewwstate.altitude ]);\n\n  useEffect(() => {\n    // uncomment to search via polygon at low lats\n    setApppolygon(ewwstate.viewpolygon)\n    // setApppolygon('')\n  },[ewwstate.viewpolygon ]);\n\n\n\n  useEffect(() => {\n    setTime(appdate)\n  },[appdate]);\n\n  useEffect(() => {\n    setAppatmosphere(atmosphere)\n    setAppstarfield(starfield)\n    setAppnames(names)\n  },[]);\n\n\nlet globeStyle = {\n    background: 'inherit',\n    position: \"fixed\",\n    width: 'inherit',\n    height: 'inherit'\n  };\n\n\nreturn (\n    <canvas id={id} style={globeStyle} />\n)\n\n}\n","import { useState, useEffect } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\n\n\n\nexport default function useDatahub() {\n\n    let searchURLs = []\n    //http://131.176.236.55/dhus/\n    //https://scihub.copernicus.eu/apihub/search?\n\n    const buildUrl = ({code, polygon, start, end, startindex}) => {\n\n        // console.log('Search param: '+code+','+polygon+','+start+','+end+','+startindex)\n\n        let collections = [\n            {\n                code: 'S1',\n                templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json',\n                name: 'Sentinel-1 A/B GRD' ,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S2',\n                templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND producttype:S2MSI1C)&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json',\n                name: 'Sentinel-2 A/B Level 1C',\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S3',\n                templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:OL_1_ERR___ OR producttype:SL_1_RBT___ OR producttype:SR_1_SRA___))&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json',\n                name: 'Sentinel-3 A/B, OLCI/SLSTR/SRAL' ,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S5P',\n                templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-5 precursor AND (producttype:L1B_RA_BD1 OR (producttype:L2__NO2___ AND processingmode:Near real time)))&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json',\n                name: 'Sentinel-1 A/B',\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'ENVISAT',\n                templateUrl: 'https://eocat.esa.int/ngeo/catalogue/FEDEO-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&format=json&count=50&startIndex={startindex}',\n                name: 'Sentinel-1 A/B',\n                dateOff: ' beginposition:[{start} TO {end}]',\n                areaOff:  ' footprint:\"Intersects({polygon})\"'\n            }\n\n        ]\n\n        const getTargetCollection= (mission) => {\n            return collections.find( (collection) => {return collection.code == mission} )\n        }\n        // console.log(getTargetCollection(mission))\n        let target = getTargetCollection(code)\n        let newurl = target.templateUrl\n        console.log(target.areaOff)\n        \n\n        if(polygon.length > 0) {\n            console.log('|'+polygon.length+'|')\n            newurl = newurl.replace(\"{polygon}\", polygon)\n            newurl = newurl.replace(target.dateOff, '')\n        } else {\n            newurl = newurl.replace(target.areaOff, '')\n            newurl = newurl.replace(\"{start}\", start)\n            newurl = newurl.replace(\"{end}\", end)\n        }\n        \n        newurl = newurl.replace(\"{startindex}\",startindex)\n\n\n        return newurl\n\n\n\n        \n        // url = url.replace(\"{polygon}\", (apppolygon !== '') ? ' footprint:\"Intersects('+ apppolygon + ')\"' : '')\n        // url = url.replace(\"{start}\", dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'));\n        // url = url.replace(\"{end}\", dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'));\n        // url = url.replace(\"{startindex}\", pagination.startindex + pagination.itemsperpage);\n\n    }\n\n    searchURLs[\"S1\"] = 'https://131.176.236.55/dhus/search?q=({polygon} beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S2\"] = 'https://131.176.236.55/dhus/search?q=({polygon} beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND producttype:S2MSI1C)&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S3\"] = 'https://131.176.236.55/dhus/search?q=({polygon} beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:OL_1_ERR___ OR producttype:SL_1_RBT___ OR producttype:SR_1_SRA___))&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S5P\"] = 'https://s5phub.copernicus.eu/search?q=({polygon} beginposition:[{start} TO {end}] AND platformname:Sentinel-5 precursor AND (producttype:L1B_RA_BD1 OR (producttype:L2__NO2___ AND processingmode:Near real time)))&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"ENVISAT\"] = 'https://eocat.esa.int/ngeo/catalogue/FEDEO-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&format=json&count=50&startIndex={startindex}'\n    \n    // search time window size in ms\n    const windowSize = 1000 * 60 * 60 * 3\n    const MAX_ITEMS = 2000\n\n    const [geojsonResults, setGeojsonResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [isfirstpage, setIsfirstPage] = useState(true)\n    \n    const [ searchdate,  ] = useGlobal('searchdate');\n    const [ mission,  ] = useGlobal('mission');\n    const [ apppolygon,  ] = useGlobal('apppolygon');\n\n    const [ searchUrl, setSearchurl  ] = useState(null);\n    // const [ polygon, setPolygon  ] = useState('');\n\n    const [ pagination, setPagination ] = useState(null);\n\n//{totalresults,startindex}\n    useEffect(() => {\n        const fetchURL = async (url) => {\n            // setLoading(true)\n            console.log('Search: '+ url)\n            try {\n                const response = await fetch(url, {mode: 'cors', credentials: 'include'})\n                const json = await response.json()\n                const geoJson = (mission === 'ENVISAT')? json : dhusToGeojson(json)\n                // console.log('totalResults: ' + geoJson.properties.totalResults)\n                console.log(geoJson.properties)\n                setPagination( \n                    {\n                    totalresults: Number(geoJson.properties.totalResults) ,\n                    startindex:  Number(geoJson.properties.startIndex), \n                    itemsperpage:  Number(geoJson.properties.itemsPerPage), \n                    })\n                if(Number(geoJson.properties.totalResults>0)) setGeojsonResults(geoJson) \n                setIsfirstPage((pagination.startindex + pagination.itemsperpage < pagination.totalresults)?true:false)\n                console.log('first?: ' + (pagination.startindex + pagination.itemsperpage < pagination.totalresults)?'true':'false')\n                // setLoading(false);   \n            } catch {\n                console.log(\"Didn't recieve a json !\")\n                //console.log(response)\n                setLoading(false);\n            }\n            \n        }\n        if(searchUrl) fetchURL(searchUrl)\n    }, [searchUrl]);\n    \n    useEffect(() => {\n        if(pagination) {\n            if(pagination.startindex + pagination.itemsperpage < Math.min(pagination.totalresults,MAX_ITEMS) ) {\n                let url = searchURLs[mission]\n                console.log(\"There's More...\")\n                // setIsfirstPage(false)\n                try {\n                    let url = buildUrl({\n                        code: mission,\n                        polygon: apppolygon, \n                        start: dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'), \n                        end: dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'), \n                        startindex: pagination.startindex + pagination.itemsperpage\n                    })\n\n                    // url = url.replace(\"{polygon}\", (apppolygon !== '') ? ' footprint:\"Intersects('+ apppolygon + ')\" AND ' : '')\n                    // url = url.replace(\"{start}\", dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'));\n                    // url = url.replace(\"{end}\", dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'));\n                    // url = url.replace(\"{startindex}\", pagination.startindex + pagination.itemsperpage);\n                    //console.log(\"Next URL: \" + url)\n                    setSearchurl(url)\n\n                \n            \n                } catch {\n                    console.log('Not a JULIAN date !')\n                    setLoading(false);\n                }\n            } else {\n                setLoading(false);\n            }\n    \n        }\n    }, [pagination]);\n\n    useEffect(() => {\n        console.log('DataHub ready. '+mission)\n    }, []);\n\n    useEffect(() => {\n        console.log('apppolygon: '+apppolygon)\n    }, [apppolygon]);\n\n    useEffect(() => {\n        console.log('mission '+mission)\n        console.log('searchdate '+searchdate)\n\n        if(mission && searchdate) {\n            \n            let url = searchURLs[mission]\n            //if(mission in [\"S1\",\"S2\",\"S3\"]) url = searchURLs[mission]\n            try {\n                console.log(apppolygon?true:false)\n\n                let url = buildUrl({\n                    code: mission,\n                    polygon: apppolygon, \n                    start: dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'), \n                    end: dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'), \n                    startindex: 0\n                })\n                // console.log('url2: '+url2)\n\n\n                // url = url.replace(\"{polygon}\", (apppolygon !== '') ? ' footprint:\"Intersects('+ apppolygon + ')\" AND ' : '')\n                // url = url.replace(\"{start}\", dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'));\n                // url = url.replace(\"{end}\", dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'));\n                // url = url.replace(\"{startindex}\", 0);\n                setLoading(true)\n                // setIsfirstPage(true)\n                setSearchurl(url)\n        \n            } catch {\n                console.log('Not a JULIAN date !')\n            }\n        }\n        \n    }, [searchdate, mission]);\n/*    \n    const [ mission, setMission ] = useGlobal('mission');\n    useEffect(() => {\n        if(mission in [\"S1\",\"S2\",\"S3\"]) setUrl(searchURLs[mission])\n    }, [mission]);\n    */\n\n    return {geojsonResults, loading, isfirstpage}\n}\n","import React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './missionselector.css'\n\n\n// should use a prop\n\nfunction MissionSelector() {\n\n\n    const [ mission, setMission ] = useGlobal('mission');\n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2')}) \n    useHotkeys(\"3\",()=>{setMission('S3')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MissionSelector'>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s2_black.png' alt='' onClick={() => setMission('S2')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n           \n            \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, { useEffect, useGlobal } from \"reactn\";\n// import { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './mapselector.css'\n\n\n// should use a prop\n\nfunction MapSelector() {\n\n\n    const [ appatmosphere, setAppatmosphere ] = useGlobal('appatmosphere');\n    const [ appstarfield, setAppstarfield ] = useGlobal('appstarfield');\n    const [ appnames, setAppnames ] = useGlobal('appnames');\n    // useHotkeys(\"1\",()=>{setMission('S1')}) \n    // useHotkeys(\"2\",()=>{setMission('S2')}) \n    // useHotkeys(\"3\",()=>{setMission('S3')}) \n    // useHotkeys(\"5\",()=>{setMission('S5P')}) \n    // useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelector'>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/atmosphere.png' alt='' onClick={() => setAppatmosphere(!appatmosphere)} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/starfield.png' alt='' onClick={() => setAppstarfield(!appstarfield)} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/names.png' alt='' onClick={() => setAppnames(!appnames)} /></div>\n           \n        </div>\n    )\n}\n\nexport default MapSelector\n","import React, { useEffect, useState } from \"react\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useGlobal } from 'reactn'\nimport './stepmask.css'\n\n\n\n\nfunction StepMask() {\n    const [highlight] = useGlobal('highlight')\n    const [ active, setDebug ] = useState(false)\n    useHotkeys(\"m\",()=>{setDebug(active => !active)}) \n\n    useEffect(() => {\n        console.log('Mask Overlay: press m ')\n        console.log('active (use): '+active)\n    }, []);\n\n    useEffect(() => {\n        setDebug((highlight !== 'none') )\n    }, [highlight]);\n\n    console.log('active rendered')\n\n    return (\n        <div className='StepMask' style={{display: (active)?'inline':'none'}}>\n            <div className='DayMask' style={{display: (active)?'inline':'none'}}/>\n            <div className='MonthMask' style={{display: (active)?'inline':'none'}}/>\n            <div className='YearMask' style={{display: (active)?'inline':'none'}}/>\n        \n        </div>\n    )\n}\n\nexport default StepMask\n","import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\"\nimport {useSpring, animated, config} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport './timeselector.css'\nimport { useGlobal } from 'reactn'\nimport { add, sub, scale } from 'vec-la'\nimport StepMask from './stepmask'\nimport useDebug from './useDebug'\n\n\n// to be split in a controller and a useTouchScale hook () => {<TouchScale>, scaleRenderer, size}\n\n\n\n\nfunction TimeSelector(props)  {\n\n    /// debug snippet\n    // const [debug, setDebug] = useDebug('')    \n    const [ , setDebug ] = useGlobal('debug')\n\n    //console.log(\"Render TimeSelector \")\n    const dayspace = 40\n    const zoomfactor = (props.max-props.min)/(dayspace*(props.max-props.min)/(1000*60*60*24))\n    const min = props.min\n    const max = min +((props.max - props.min) / zoomfactor)\n\n    \n\n    let wid, hei = 0\n    if(props.vertical) {\n        hei = max - min\n        wid = 100\n    } else {\n        wid = max - min\n        hei = 100\n\n    }\n\n\n    const [appdate, setAppdate] = useGlobal('appdate')\n    const [, setSearchdate] = useGlobal('searchdate')\n    const [, setHighlight] = useGlobal('highlight')\n    const [livePosition, setLiveposition] = useState(new Date())\n\n    const [tsactive, setTsactive] = useState(false); \n\n    const [step, setStep] = useState('continuous')\n\n    const myvertical = useRef()\n    myvertical.current = props.vertical\n\n\n    const timecontainer = useRef()\n\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\n\n\n    const bind = useGesture({\n        onDrag: ({  down, delta, distance, velocity, active , direction, wheeling, time, first, last, temp = {\n                                                xy: xy.getValue(), \n                                                deltaOffset: [0, 0], \n                                                deltaCumul: [0, 0],\n                                                lastNewxy: [0, 0],\n                                                lastStep: 1, \n                                                lastIncrement: 0,\n                                                lastDown: false, \n                                                lastTime: time\n                                            }\n                }) => {\n            let springConfigUp = { mass: 1, tension: 200 , friction: 40, precision: 1 }\n            let springConfigDown = { mass: 1, tension: 1200 , friction: 40, precision: 0.01 }\n            let config = {  velocity: scale(direction, velocity), decay: true, precision: 1 }\n\n            velocity = (velocity<.15)?0:velocity\n\n            // if(time - temp.lastTime > 1000) {\n            //     console.log('deltaCumul...')\n            //     console.log(temp.deltaCumul)\n            //     if (temp.deltaCumul < 0.01) {\n            //         console.log('STABLE !!')\n            //     }\n            //     temp.lastTime = time\n            //     temp.deltaCumul = 0\n            // }\n            // temp.deltaCumul += velocity      \n\n            if (!down) setStep(1)\n            \n            // if(down != temp.lastDown) { setTsactive(true)}\n            if(first) { setTsactive(true)}\n            temp.lastDown = down\n            if(myvertical.current) {    \n                //let pos = target.getBoundingClientRect().top\n                let height = timecontainer.current.parentElement.offsetHeight\n\n                //let followDest = (delta[0]<-200)?delta[1]*10+temp.xy[1]:delta[1]+temp.xy[1]\n                let step = 1\n                let div = 1\n                console.log()\n                if (delta[0]<-30) {step = (1000 * 60 * 60 * 24)  / zoomfactor; div = 10; }\n                if (delta[0]<-80) {step = (1000 * 60 * 60 * 24 * 30) / zoomfactor; div = 15}\n                if (delta[0]<-160) {step = (1000 * 60 * 60 * 24 * 365) / zoomfactor; div = 30}\n\n                if(step !== temp.lastStep) {\n                    //console.log('Step changed from: '+temp.lastStep+' to: '+ step)\n                    setDebug(['Step changed from: '+temp.lastStep+' to: '+ step, 1])\n                    setStep(step)\n                    temp.deltaOffset = delta\n                    temp.xy = temp.lastNewxy\n                }\n\n                delta = sub(delta,temp.deltaOffset)\n                let deltaFactor = [Math.round(delta[0]/div)*step,Math.round(delta[1]/div)*step]\n                if(down) velocity = 0\n                let newxy = add(scale(deltaFactor,Math.pow(velocity+1,2)), temp.xy)\n\n                if(step !== temp.lastStep) {\n                    temp.xy = newxy\n                    temp.lastStep = step\n                }\n\n                temp.lastNewxy = newxy\n                \n                const setLiveTime = ({ xy }) => { setLiveposition(min+(-xy[1]+height/2)*zoomfactor)}\n                const setFinalTime = ({ xy }) => {   if(!down && !active) {setTsactive(false)}; if(!down) { setSearchdate(min+(-xy[1]+height/2)*zoomfactor) }}  \n\n\n                let minX = timecontainer.current.parentElement.offsetTop + timecontainer.current.parentElement.offsetHeight / 2\n                let maxX = - timecontainer.current.offsetHeight + timecontainer.current.parentElement.offsetHeight / 2\n        \n                newxy[1] = newxy[1]>minX ? minX : newxy[1]\n                newxy[1] = newxy[1]<maxX ? maxX : newxy[1]\n\n                set({  xy: newxy ,   config: down?springConfigDown:springConfigUp, immediate: down, onRest: setFinalTime, onFrame: setLiveTime} )\n\n            } else {    \n            }\n            return temp\n        },\n        onWheel: ({down, delta, wheeling, local, temp= { xy: xy.getValue() }}) => {\n            console.log(local)\n            setDebug(xy.getValue()[0] + '/' + xy.getValue()[1])\n            setTsactive(true)\n            let height = timecontainer.current.parentElement.offsetHeight\n            const setLiveTime = ({ xy }) => { setLiveposition(min+(-xy[1]+height/2)*zoomfactor)}\n            const setFinalTime = ({ xy }) => {   setTsactive(false); if(!wheeling) { setSearchdate(min+(-xy[1]+height/2)*zoomfactor) }}  \n            // let newxy = scale(add(delta,temp.xy), 0.1)\n            let newxy = scale(add(delta,temp.xy), 0.1)\n            //setDebug(newxy)\n            temp.xy = newxy\n\n            set({  xy: newxy , config: { tension: 1200, friction: 40, precision: 0.01  }, immediate: wheeling, onRest: setFinalTime, onFrame: setLiveTime} )\n            return temp\n        }\n\n    })\n\n    \n\n    const scaleText = () => {\n        \n        let monthcode = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n        let day, month, hour, year = 0\n        let lastday, lastmonth = 0\n        let tics = []\n        const dayclass = (!props.vertical)?'DayTic':'DayTic-v'\n        const monthclass = (!props.vertical)?'MonthTic':'MonthTic-v'\n        const yearclass = (!props.vertical)?'YearTic':'YearTic-v'\n        \n        \n        for (let i=props.min;i<=props.max;i+=3600000) {\n            day = (new Date(i)).getUTCDate()\n            month = monthcode[(new Date(i)).getUTCMonth()]\n            hour = (new Date(i)).getUTCHours()\n            year = (new Date(i)).getUTCFullYear()\n            if(day !== lastday) tics.push({class:dayclass, pos: (i-props.min)/zoomfactor, label: day})\n            if(month !== lastmonth ) {\n                tics.push({class:monthclass, pos: (i-props.min)/zoomfactor, label: month})\n                tics.push({class:yearclass, pos: (i-props.min)/zoomfactor, label: year})\n            }\n            //if(year != lastyear) tics.push({class:'YearTic', pos: (i-props.min)/zoomfactor, label: year})\n            //if(hour != lasthour) tics.push({class:'HourTic', pos: (i-props.min)/zoomfactor, label: '.'})\n            lastday = day\n            lastmonth = month\n        }\n\n            return tics.map(item => (            <div className={item.class} key={item.class+item.pos} style={(!props.vertical)?{left:item.pos}:{top:item.pos}}>{item.label}</div>))\n    }\n\n    const [timescale, setTimescale] = useState('')    \n    //const [vertical, setVertical] = useState(props.vertical)    \n    useLayoutEffect(() => {\n        //console.log(\"useEffect (livePosition) in TimeSelector: \"+livePosition)\n        setTimescale(scaleText(props.vertical))\n    \n    },[props.vertical])\n\n\n    \n\n\n    useLayoutEffect(() => {\n        // if no gesture (touch, mouse) is ongoing, the time selector follows the global appdate\n        let offset =0\n        if(!tsactive) {\n            if(props.vertical) {\n                offset = ((min - appdate)/zoomfactor)+timecontainer.current.parentElement.offsetHeight/2\n                set({ xy: [0,offset], config: { tension: 1200, friction: 40 }, onFrame: null, onRest: null }  )\n            } else {\n                offset = ((min - appdate)/zoomfactor)+timecontainer.current.parentElement.offsetWidth/2\n                set({ xy: [offset,0], config: { tension: 1200, friction: 40 }, onFrame: null, onRest: null }  )\n\n            }           \n        }\n    },[appdate,timescale])  \n\n    useEffect(() => {\n        setAppdate(livePosition)\n    },[livePosition])\n\n\n\n    useEffect(() => {\n        // console.log('Step changed to: ' + step)\n        switch(step) {\n            case 40:\n                setHighlight(\"day\")\n                break;\n            case 1200:\n                setHighlight(\"month\")\n                break;\n            case 14600:\n                setHighlight(\"year\")\n                break;\n            default:\n                setHighlight(\"none\")\n        }\n    },[step])\n\n\n    useLayoutEffect(() => {\n        console.log(\"zoom changed to: \"+props.zoom)\n    },[props.zoom])\n\n    return (\n        <div className={props.vertical?\"Mask-v\":\"Mask\"} >\n            \n            <div className=\"TriangleContainer\" >\n                <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                    <polygon points=\"20,5 20,35 12,20\" />   \n                </svg> \n            </div>        \n            <div className=\"TimeContainer\" ref={timecontainer}>\n                \n                <animated.div className=\"TimeScale\" {...bind()} style={{ width: wid,height: hei, transform: xy.interpolate((x, y) => `translate3d(0px,${y}px,0)`) }}>\n                    {timescale}\n                </animated.div>\n            </div>\n        </div>\n    )\n}\n\nexport default TimeSelector","import React, { useState, useLayoutEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\nimport \"./timelabel.css\"\n\n\n\n\nfunction TimeLabel() {\n\n    const [ appdate,  ] = useGlobal('appdate')\n    const [ highlight, ] = useGlobal('highlight')\n    const [ searching, ] = useGlobal('searching')\n\n    const [year, setYear] = useState('') \n    const [month, setMonth] = useState('') \n    const [day, setDay] = useState('') \n    const [time, setTime] = useState('') \n\n    useLayoutEffect(() => {     \n        let date = new Date(appdate)\n        setYear(date.getUTCFullYear())\n        setMonth(dateFormat(date,'UTC:mmm'))\n        setDay(dateFormat(date,'UTC:dd'))\n        setTime(dateFormat(date,'UTC:HH:MM:ss'))\n    },[appdate])\n\n    useLayoutEffect(() => {     \n        console.log('Searching: '+searching)\n    },[searching])\n\n\n    return (\n        <div className='LabelCountainer' >\n            <div className={searching===true?'Line  Line-active':'Line'} key='line' >____</div>\n            <div className={highlight==='day'?'DayLabel  Highlighted':'DayLabel'}  key='day'  >{day}</div>\n            <div className={highlight==='year'?'YearLabel  Highlighted':'YearLabel'}  key='year' >{year}</div>\n            <div className={highlight==='month'?'MonthLabel  Highlighted':'MonthLabel'}  key='month' >{month}</div>\n            <div className='TimeLabel' key='time' >{time}</div>\n        </div>\n    );\n    // <div className='MonthLabel' key='month' style={highlight=='month'?{color: 'rgba(120,0,0,1)'}:{}} >{month}</div>\n\n\n    \n}\n\nexport default TimeLabel;\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport \"./mapstatelabel.css\"\n\n\n\nfunction MapStateLabel() {\n\n    const [ appaltitude,  ] = useGlobal('appaltitude')\n    // const [altitude, setAltitude] = useState()\n\n\n    // useLayoutEffect(() => {    \n    //     console.log('Altitude changed') \n    //     setAltitude(Math.ceil(appaltitude / 1000))\n    // },[appaltitude])\n\n    return (\n        <div className='MapStateLabel' >\n            <div >{Math.ceil(appaltitude / 1000)+ ' Km'}</div>\n        </div>\n    )\n    // <div className='MonthLabel' key='month' style={highlight=='month'?{color: 'rgba(120,0,0,1)'}:{}} >{month}</div>\n\n\n    \n}\n\nexport default MapStateLabel;\n","import React, { useEffect, useState } from \"react\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport useDebug from './useDebug'\nimport './debug.css'\n\n\n\n\nfunction Debug() {\n\n    // const [ debug, setDebug ] = useDebug()\n    const [ debug, setDebug ] = useGlobal('debug')\n    const [ active, setActive ] = useState(false)\n    const [ debugkeys, setDebugkeys ] = useState([])\n    \n\n    useHotkeys(\"d\",()=>{setActive(active => !active)}) \n\n    useEffect(() => {\n        console.log('Debug Overlay Key: d')\n    }, []);\n\n    useEffect(() => {\n        if(active) {\n            console.log(debug[1]+': '+debug[0])\n            let lines = debugkeys\n            lines[debug[1]] = debug[0]\n            setDebugkeys( lines )\n            console.log(lines)\n        }\n    }, [debug]);\n\n    useEffect(() => {\n        console.log('debugkeys: ')\n        console.log(debugkeys)\n    }, [debugkeys[1]]);\n\n    useEffect(() => {\n        setDebug( ['Hi',0])\n    }, []);\n\n//     const listItems = numbers.map((number) =>\n//     <li>{number}</li>\n//   );\n//   return (\n//     <ul>{listItems}</ul>\n//   )\n\n    return (\n        <div className='Debug' style={{display: (active)?'inline':'none', width: '100%', height:'100%'}}>\n            {/* <div className='ContinuousScroll' style={{position: 'relative', top: '70%', right:0, width: 60, height:'100%', background:  'rgba(22, 22, 20, 0.24)'}}/> */}\n            <div className='DebugBox1'>\n                <ul>\n                    {debugkeys.map(item=><li key={item}>{item}</li>)}\n                </ul>\n            </div> \n        </div>\n    )\n}\n\nexport default Debug\n","import React, {useState, useLayoutEffect, useEffect, useRef } from \"react\";\nimport {useSpring, animated} from 'react-spring';\nimport { useGesture } from 'react-use-gesture'\nimport { useGlobal } from 'reactn'\nimport { add, sub, scale } from 'vec-la'\nimport \"./controlpanel.css\"\n\nexport default function SlidePanel(props) {\n\n    const [ , setDebug ] = useGlobal('debug')\n\n    const [visible, setVisible] = useState(true)\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\n\n    const slidePanel = useRef()\n\n    const toggle = () =>  {\n        setDebug(['toggle from: '+visible+' '+slidePanel.current.offsetWidth,2])\n        set({ xy: !visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n        setVisible(visible => !visible)\n    }\n\n    useEffect(() => {\n        setDebug(['visible: '+visible,1])\n        // set({ xy: visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n    },[visible])\n\n    useEffect(() => {\n        setTimeout(toggle,1000)\n        // set({ xy: visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n    },[])\n\n    const bind = useGesture({\n        onDrag: ({  direction, velocity, down,  delta, vxvy, temp={xy: xy.getValue()}}) => {\n            // setDebug('tempX: '+add(temp.xy,delta)[0],1)\n            // setDebug('down: '+down,2)\n            \n            if(down) {\n                \n                set({ xy: add(temp.xy,delta), immediate: true })\n\n\n                // set({ xy: newxy })\n            } else {\n                if(vxvy[0] > 0.2) {\n                    let config = {  velocity: scale(direction, velocity), decay: true, precision: 1 }\n                    setDebug(['visible: '+visible,1])\n                    set({ xy: [slidePanel.current.offsetWidth,0], immediate: false})\n                    setVisible(false)\n                } else {\n                    set({ xy: temp.xy, immediate: false })\n                }\n            }\n            return temp\n\n\n            // if(!down && vxvy[0] > 0.2) {\n            //     setVisible(state => !state)\n            // } else {\n\n            //     let newxy = add(temp.xy,delta)\n            //     setDebug('offsetWidth: '+slidePanel.current.offsetWidth)\n            //     // if(!down && vxvy[0] > 0.2) {\n            //     //     newxy = [slidePanel.current.offsetWidth,0]\n            //     // }\n                \n            //     set({ xy: newxy, immediate: down })\n            //     return temp\n\n            // }\n        }\n        })\n\n\n    return (\n        <div>\n            <img className='Logo' src={props.imageSrc} alt=''  onClick={toggle} />\n\n            <animated.div {...bind()} ref={slidePanel} className='ControlPanel' style={{ userSelect: 'none', transform: xy.interpolate((x, y) => `translate3d(${x}px,0,0)`) }}>\n                <div>\n                    {props.children}\n                </div>\n            </animated.div>\n        </div>\n\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport ClockController from \"./clockController\";\nimport Eww from \"./eww\";\nimport MissionSelector from \"./missionselector\";\nimport MapSelector from \"./mapselector\";\nimport Fullscreen from \"react-full-screen\";\nimport { useFullscreen } from '@straw-hat/react-fullscreen';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useGlobal } from 'reactn';\n\nimport \"./styles.css\"\nimport TimeSelector from \"./timeselector2\";\nimport TimeLabel from \"./timelabel\";\nimport MapStateLabel from \"./mapstatelabel\";\n\nimport Debug from \"./debug\";\nimport SlidePanel from \"./slidepanel\";\nimport StepMask from './stepmask'\n\n\n\nconst App = () => {\n  //const [count, setCount] = useState(1000);\n  const [hasFetched, setFetch] = useState(false)\n\n\n  \n  const [ mission, setMission ] = useGlobal('mission');\n    useEffect(() => {\n        console.log('Mission changed to: '+ mission)\n    }, [mission]);\n \n\n\n  // Set boundaries and zoom factor of the time scale\n  const [min, setMin] = useState((new Date(\"2015-04-10\")).getTime())\n  const [max, setMax] = useState((new Date(\"2019-12-31\")).getTime())\n  \n  const [vertical, setVertical] = useState(true)\n  \n  useHotkeys(\"h\",() => {\n    setVertical(prevVertical => {\n        return (!prevVertical)\n      })\n    })\n\n\n  useEffect(() => {\n\n    const mockApi = () => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const randomInt = Math.ceil(Math.random() * 10)\n          console.log(\"mockApi done\")\n          resolve(randomInt)\n        }, 2000)\n      })\n    }\n    \n    async function doFetch() {\n      if (!hasFetched) {\n        const apiResponse = await mockApi();\n        setFetch(true);\n      }\n    }\n\n    doFetch()\n  }, []);\n  \n\n\n\n  const [isFull,setIsfull] = useState(false)\n  const { isFullscreen, toggleFullscreen } = useFullscreen(window.document.body);\n  // const [isControlPanel, setIscontrolpanel] = useState(false)\n  \n  useHotkeys(\"f\",toggleFullscreen )  \n  \n  //const [ appdate, setAppdate ] = useGlobal('appdate');\n  // const [ myname,  ] = useGlobal('appnames');\nconsole.log('app renders')\n  return (\n    <div className=\"App\">\n      <Fullscreen enabled={isFull} onChange={() =>  {if(!isFull) setIsfull(false)} }>\n      \n        <div className=\"DateTimeLabel\" >\n          <TimeLabel vertical={vertical} />\n        </div>\n        \n        <div className=\"ClockController\">\n          <ClockController duration=\"600000\"/>\n        </div> \n\n        <div className=\"Globe\">\n          <Eww id=\"globe\" starfield=\"true\" atmosphere='true' clon='0.5' clat='40' names='true'/>\n        </div>\n        <div className={vertical?\"TimeSelectorv\":\"TimeSelectorh\"}>\n          <TimeSelector min={min} max={max} vertical={vertical}/>\n        </div>\n        \n        <div className='MissionLabel'>{mission}</div>\n        <MapStateLabel></MapStateLabel>\n        <SlidePanel active='false' imageSrc='./images/EOi_logo.png' >\n          <MissionSelector></MissionSelector>\n          <MapSelector></MapSelector>\n        </SlidePanel>\n\n        <Debug action='Bonjour'/>\n        <StepMask/>\n      </Fullscreen>\n   </div>\n  );\n}\n\n        // <ControlPanel active='false' imageSrc='./images/EOi_logo.png' >\n        //         <MissionSelector></MissionSelector>\n        //         <MapSelector></MapSelector>\n        // </ControlPanel>\n\n\n\n        // <div className='MiniGlobe' >\n        //   <Eww id='miniglobe' clon='0.5' clat='40' myname={myname}/>  \n        // </div>  \n\n                // <img className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>setIscontrolpanel((isControlPanel => !isControlPanel))} />\n\n\n\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()).getTime())\n\n    // Set current time as global state\n    setGlobal({appdate: ((new Date()).getTime())})\n    setGlobal({searchdate: ((new Date()).getTime())})\n    setGlobal({mission: 'S1'})\n    setGlobal({searching: false})\n    setGlobal({apppolygon: ''})\n    \n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./app\";\nimport {initGlobalStates} from \"./initglobalstates\"\nimport registerServiceWorker from './registerServiceWorker';\n\n// if you're in create-react-app import the files as:\n// import store from \"./js/store/index\";\n// import App from \"./js/components/App.jsx\";\ninitGlobalStates()\n\nrender(\n  <App />,\n  // The target element might be either root or app,\n  // depending on your development environment\n  // document.getElementById(\"app\")\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();"],"sourceRoot":""}