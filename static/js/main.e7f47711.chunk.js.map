{"version":3,"sources":["useClock.js","clockController.js","map.js","timeselector.js","timelabel.js","app.js","initglobalstates.js","index.js"],"names":["useClock","_ref","autoStart","duration","initDate","Date","getTime","_useState","useState","_useState2","Object","slicedToArray","date","setDate","ldate","useRef","refreshRate","intervalRef","step","timeoutRef","start","current","console","log","setInterval","incrementDate","setTimeout","togglePause","clearTimeout","clearInterval","undefined","useEffect","reset","increaseSpeed","Math","abs","decreaseSpeed","forceDate","newdate","ClockController","_useClock","_useGlobal","useGlobal","_useGlobal2","appdate","setAppdate","useHotkeys","react_default","a","createElement","onClick","Map","props","wwd","setProjection","prevProj","supportedProjections","newProj","indexOf","length","globe","projection","WorldWind","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","redraw","layers","enabled","elevationModel","EarthElevationModel","WorldWindow","id","wmsConfig","service","layerNames","numLevels","format","size","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","starFieldLayer","StarFieldLayer","atmosphereLayer","AtmosphereLayer","layer","WmsLayer","starfield","l","addLayer","time","style","background","position","width","height","TimeSelector","min","max","vertical","direction","wid","finalPosition","setFinalposition","_useState3","_useState4","livePosition","setLiveposition","_useSpring","useSpring","xy","pos","_useSpring2","_useSpring2$","set","_useState5","_useState6","active","setActive","bind","useGesture","down","delta","target","velocity","_ref$temp","temp","getValue","runBefore","getBoundingClientRect","top","topOrigin","parentNode","scaleheight","dest","config","mass","tension","friction","precision","onRest","onFrame","_ref2","onStart","left","leftOrigin","scalewidth","_ref3","offset","className","web","div","assign","transform","interpolate","x","y","concat","text","i","scaleText","TimerLabel","display","justifyContent","alignItems","toUTCString","App","hasFetched","setFetch","mockApi","Promise","resolve","randomInt","ceil","random","_doFetch","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","apply","this","arguments","doFetch","_useState7","_useState8","isFull","setIsfull","dist_default","onChange","timelabel","clockController","src_timeselector","setGlobal","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.e7f47711.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, duration }) {\n    //console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    let initDate = (new Date()).getTime()\n    const [date, setDate] = useState(initDate)\n    const ldate = useRef();\n\n    // refresh rate in msec\n    const refreshRate = 50\n\n    function incrementDate(step) {\n        //setDate(prevDate => { return prevDate + step  });\n        ldate.current += step \n        //setDate((new Date(ldate.current)).getTime());\n        setDate(ldate.current);\n    }\n      \n\n      // Control functions\n    const intervalRef = useRef();\n    const step = useRef(refreshRate);\n    const timeoutRef = useRef();\n    \n\n    function increaseSpeed() {\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshRate) step.current = refreshRate\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshRate) step.current = -1 * refreshRate\n     }\n\n    function start() {\n        if (!intervalRef.current) {\n            console.log('will start with step: '+step.current)\n            intervalRef.current = setInterval(() => incrementDate(step.current), refreshRate);\n        }\n        timeoutRef.current = setTimeout(() => {\n            togglePause()\n            //start()\n          }, duration);\n    }\n\n    function togglePause() {\n        console.log('toggle')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n            intervalRef.current = undefined;\n        } else start()\n    }\n\n    function reset() {\n        console.log('reset')\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n            intervalRef.current = undefined;\n        }\n        let initDate = (new Date()).getTime()\n        step.current = refreshRate\n        setDate(initDate)\n        ldate.current = initDate\n    }\n\n     \n    function forceDate(newdate) {\n        ldate.current = newdate\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        setDate((new Date()).getTime())\n        console.log('date after setting: '+date)\n        ldate.current = date\n        console.log('init date to: '+ldate.current)\n        if (autoStart) {\n            console.log(\"starting Timer... (\"+duration/1000+\" sec)\")\n            start();\n        }\n        //return reset;\n    }, []);\n    useEffect(() => {\n        //console.log('ldate changed to: '+ldate.current)\n    }, [ldate.current]);\n\n  \n  return { date, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, { useState, useEffect, useRef } from \"react\"\nimport { useClock } from \"./useClock\";\nimport { useGlobal, setGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\n\n\n\nfunction ClockController({ duration }) {\n    const {\n        date,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        autoStart: false,\n        duration: duration\n    })\n\n    const [ appdate, setAppdate ] = useGlobal('appdate');\n    //setGlobal({appdate: date})\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",reset)\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    //const dateLabel = (new Date(date) ).toUTCString()\n\n    useEffect(() => {\n        console.log(\"useEffect (date) in ClockController\")\n        setAppdate(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n    useEffect(() => {\n        //console.log(\"useEffect (appdate) in ClockController\")\n        //setAppdate(date)\n        forceDate(appdate)\n        //setAppdate({appdate: new Date(date)})\n    },[appdate]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (init) in ClockController\")\n        //console.log(\"appdate changed\")\n        forceDate(appdate)\n    },[]);\n\n    return (\n/*\n        <div {...handlers} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width:\"100%\", height: \"100%\"}}>\n            {(new Date(date) ).toUTCString()}\n        </div>\n*/\n    <div onClick={togglePause}>start</div>\n    );\n}\n\nexport default ClockController;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\n//import { useClock } from \"./useClock\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\n\nexport default function Map(props) {\n  //const [wwd, setWwd] = useState([]);\n  //const [date, setDate] = useState(0);\n  const [appdate, setAppdate ] = useGlobal('appdate')\n  const wwd = useRef(null)\n  \n  \n  // toogle projection\n  useHotkeys(\"p\",toggleProjection)  \n    const [, setProjection] = useState(\"3D\")\n  function toggleProjection() {\n    setProjection( prevProj => {\n      console.log(\"prevProjection: \"+prevProj)\n      let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n      let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n      console.log(\"newProjection: \"+supportedProjections[newProj])\n      switch (supportedProjections[newProj]) {\n        case \"3D\":\n            wwd.current.globe.projection = new WorldWind.ProjectionWgs84();\n            break;\n        case \"Equirectangular\":\n            wwd.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n            break;\n        case \"Mercator\":\n            wwd.current.globe.projection = new WorldWind.ProjectionMercator();\n            break;\n        case \"North Polar\":\n            wwd.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n            break;\n        case \"South Polar\":\n            wwd.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n            break;\n        default:\n        wwd.current.globe.projection = new WorldWind.ProjectionWgs84();\n        }\n      wwd.current.redraw();\n      return supportedProjections[newProj]\n      })      \n  }\n  \n  //toggle atmosphere\n  useHotkeys(\"a\",toggleAtmosphere)  \n  function toggleAtmosphere() {\n    wwd.current.layers[2].enabled = !wwd.current.layers[2].enabled\n    wwd.current.redraw();\n  }\n  //toggle starField\n  useHotkeys(\"s\",toggleStarField)  \n  function toggleStarField() {\n    wwd.current.layers[1].enabled = !wwd.current.layers[1].enabled\n    wwd.current.redraw();\n  }\n\n  useEffect(() => {\n    console.log(\"useEffect (mount) in Map\")\n    var elevationModel = new WorldWind.EarthElevationModel();\n    wwd.current = new WorldWind.WorldWindow(props.id, elevationModel);\n    //setWwd(wwd);\n    var wmsConfig = {\n      service: \"https://tiles.maps.eox.at/wms\",\n      layerNames: \"s2cloudless-2018\",\n      numLevels: 19,\n      format: \"image/png\",\n      size: 256,\n      sector: WorldWind.Sector.FULL_SPHERE,\n      levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n\n    var starFieldLayer = new WorldWind.StarFieldLayer();\n    var atmosphereLayer = new WorldWind.AtmosphereLayer();\n\n    var layers = [\n      { layer: new WorldWind.WmsLayer(wmsConfig, \"\"), enabled: true },\n      { layer: starFieldLayer, enabled: props.starfield },\n      { layer: atmosphereLayer, enabled: true }\n    ];\n\n    for (var l = 0; l < layers.length; l++) {\n      layers[l].layer.enabled = layers[l].enabled;\n      wwd.current.addLayer(layers[l].layer);\n    }\n    //var date = new Date();\n    starFieldLayer.time = new Date(appdate);\n    atmosphereLayer.time = new Date(appdate);\n    wwd.current.redraw();\n  }, []); // effect runs only once\n\n  useEffect(() => {\n    //console.log(\"useEffect (appdate) in Map\")\n    wwd.current.layers[1].time = wwd.current.layers[2].time = new Date(appdate)\n    wwd.current.redraw();\n  },[appdate]);\n\n\n\n  var globeStyle = {\n    //background:  \"linear-gradient(rgb(67, 124, 199), #111) repeat scroll 0 0 #222\",\n    background: 'inherit',\n    position: \"fixed\",\n    //width: props.width,\n    //height: props.height\n    width: 'inherit',\n    height: 'inherit'\n  };\n\n  return (\n      <canvas id={props.id} style={globeStyle} />\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\"\nimport {useSpring, animated, config} from 'react-spring'\nimport { useGesture } from 'react-with-gesture'\nimport './timeselector.css'\nimport { setGlobal, useGlobal } from 'reactn'\n\n// to be split in a controller and a useTouchScale hook () => {<TouchScale>, scaleRenderer, size}\n\n\n\n\nfunction TimeSelector(props)  {\n    //console.log(\"Render TimeSelector \")\n\n    const zoomfactor = 100000\n    const min = props.min\n    const max = min +((props.max - props.min) / zoomfactor)\n\n    //const scaleRef = useRef()\n    \n    \n    const vertical = props.direction==\"vertical\"?true:false\n\n    const wid = max - min\n    console.log('min: '+min+' / wid: '+wid)\n    const [finalPosition, setFinalposition] = useState(0)\n    const [livePosition, setLiveposition] = useState(0)\n    const [appdate, setAppdate] = useGlobal('appdate')\n\n    const [{ xy,pos }, set] = useSpring(() => ({ xy: [0, 0], pos: 0 }))\n\n    const [active, setActive] = useState(false); \n\n    const bind = useGesture(({ down, delta, velocity, target , temp = xy.getValue()}) => {\n        //setActive(true)\n        //console.log('active: '+active)\n\n        const runBefore = () => {setActive(true)}        \n        if(vertical) {    \n            let pos = target.getBoundingClientRect().top\n            let topOrigin = target.parentNode.getBoundingClientRect().top\n            let height = target.parentNode.getBoundingClientRect().height\n            let scaleheight = target.getBoundingClientRect().height\n            let dest = (pos+delta[1]+temp[1]>=topOrigin+height)?Math.min(height/2,delta[1]+temp[1]):delta[1]+temp[1]\n            //tbd: 400 is the height of widget\n            dest = (pos+delta[1]+temp[1]<-scaleheight+height)?Math.max(-1*(max-min-height/2),delta[1]+temp[1]):dest\n            const setLiveTime = ({ xy }) => {setLiveposition(min+(-xy[1]+height/2)*zoomfactor)}\n            const setFinalTime = () => {setFinalposition(min+(-dest+height/2)*zoomfactor);setActive(false)}                \n            set({ xy: down ? [0,delta[1]+temp[1]] : [0,dest], pos: pos, config: { mass: 1, tension: 120 , friction: 14, precision: 1 }, onRest: setFinalTime, onFrame: setLiveTime, onStart: runBefore } )\n            //set({ xy: down ? [0,delta[1]+temp[1]] : [0,dest], pos: pos, config: { mass: velocity, tension: 500 * velocity, friction: 10, precision: 1 }, onRest: setFinalTime, onFrame: setLiveTime } )\n        } else {    \n            let pos = target.getBoundingClientRect().left\n            let leftOrigin = target.parentNode.getBoundingClientRect().left\n            let width = target.parentNode.getBoundingClientRect().width\n            let scalewidth = target.getBoundingClientRect().width\n            //console.log(leftOrigin+\"/width: \"+width+\" /max-min: \"+(max-min)+\" /scalewidth: \"+scalewidth+\" /wid: \"+wid)\n            let dest = (pos+delta[0]+temp[0]>=leftOrigin+width)?Math.min(width/2,delta[0]+temp[0]):delta[0]+temp[0]\n            dest = (pos+delta[0]+temp[0]<-scalewidth-width/2)?Math.max(-1*(max-min-width/2),delta[0]+temp[0]):dest\n            const setLiveTime = ({ xy }) => {setLiveposition(min+(-xy[0]+width/2)*zoomfactor)}\n            const setFinalTime = () => {setFinalposition(min+(-dest+width/2)*zoomfactor);setActive(false)}                \n            set({ xy: down ? [delta[0]+temp[0],0] : [dest,0], pos: pos, config: { mass: 1, tension: 120 , friction: 14, precision: 1 }, onRest: setFinalTime, onFrame: setLiveTime, onStart: runBefore } )\n            //set({ xy: down ? [delta[0]+temp[0],0] : [dest,0], pos: pos, config: {  tension: 1200 , friction: 40, precision: 1 }, onRest: setFinalTime, onFrame: setLiveTime, onStart: runBefore } )\n            //set({ xy: down ? [delta[0]+temp[0],0] : [dest,0], pos: pos, config: { mass: velocity, tension: 500 * velocity, friction: 10, precision: 1 }, onRest: setFinalTime, onFrame: setLiveTime } )\n        }\n        return temp    \n    })\n\n    \n\n    const scaleText = (min,max) => {\n        let text = ''\n        for (let i=min;i<=max;i++) {\n            text += i +\"   \"\n        }\n        return text\n    }\n\n    useEffect(() => {\n        console.log(\"useEffect (livePosition) in TimeSelector: \"+livePosition)\n        if(active) setAppdate(livePosition)\n    },[livePosition])\n\n    useEffect(() => {\n        if(!active) {\n            let offset = ((min - appdate)/zoomfactor)+250\n            //set({ xy: vertical?[0,offset]:[offset,0], config: { mass: 1, tension: 120 , friction: 14, precision: 1 } } )\n            set({ xy: vertical?[0,offset]:[offset,0], config: { tension: 1200, friction: 40 }, onFrame: null }  )\n        }\n    },[appdate])\n\n    useEffect(() => {\n        //console.log(\"useEffect (finalPosition) in TimeSelector: \"+finalPosition)\n        setAppdate(finalPosition)\n    },[finalPosition])\n\n    useEffect(() => {\n        console.log(\"Active changed to: \"+active)   \n    },[active]);\n\n    return (\n    <div className=\"TimeContainer\" >\n        <animated.div className=\"TimeScale\" {...bind()} style={{ width: wid,height: wid, transform: xy.interpolate((x, y) => `translate3d(${x}px,${y}px,0)`) }}>\n            {scaleText(2000,2200)}\n        </animated.div>\n    </div>\n    )\n}\n\nexport default TimeSelector","import React from \"react\";\nimport { useGlobal } from 'reactn';\n\n\n\n\nfunction TimerLabel() {\n\n    const [ appdate, setAppdate ] = useGlobal('appdate');\n    //console.log(\"Render TimerLabel (appdate): \"+appdate)\n\n    return (\n        <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width:\"100%\", height: \"100%\"}}>\n            {(new Date(appdate) ).toUTCString()} \n        </div>\n    );\n}\n\nexport default TimerLabel;\n","import React, { useState, useEffect } from \"react\";\nimport Timer from \"./clockController\";\nimport Map from \"./map\";\nimport Fullscreen from \"react-full-screen\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useGlobal } from 'reactn';\n\nimport \"./styles.css\"\nimport TimeSelector from \"./timeselector\";\nimport TimeLabel from \"./timelabel\";\n\n\n\nconst App = () => {\n  //const [count, setCount] = useState(1000);\n  const [hasFetched, setFetch] = useState(false)\n\n\n  // Set boundaries of the time scale\n  const [min, setMin] = useState((new Date(\"2019-04-10\")).getTime())\n  const [max, setMax] = useState((new Date()).getTime())\n\n\n  useEffect(() => {\n\n    const mockApi = () => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const randomInt = Math.ceil(Math.random() * 10)\n          console.log(\"mockApi done\")\n          resolve(randomInt)\n        }, 10000)\n      })\n    }\n    \n    async function doFetch() {\n      if (!hasFetched) {\n        const apiResponse = await mockApi();\n        setFetch(true);\n      }\n    }\n\n    console.log('useEffect (mount) in App')\n    doFetch()\n  }, []);\n  \n\n\n\n  const [isFull,setIsfull] = useState(false)\n  //const goFull = () => { setIsfull(true) }\n  useHotkeys(\"f\",() => {setIsfull(true)} )  \n  //const [ appdate, setAppdate ] = useGlobal('appdate');\n\n\n  return (\n    <div className=\"App\">\n      <Fullscreen enabled={isFull} onChange={isFull => setIsfull({isFull})} >\n        <div className=\"TimeLabel\" >\n          <TimeLabel />\n        </div>\n        <div className=\"ClockController\">\n          <Timer duration=\"600000\"/>\n        </div> \n\n        <div className=\"Globe\">\n          <Map id=\"globe\" starfield=\"true\"/>\n        </div>\n        <div className=\"TimeSelectorh\">\n          <TimeSelector min={min} max={max} direction=\"horizontal\"/>\n        </div>\n        \n      </Fullscreen>\n   </div>\n  );\n}\n\nexport default App;\n","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()).getTime())\n\n    // Set current time as global state\n    setGlobal({appdate: ((new Date()).getTime())})\n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./app\";\nimport {initGlobalStates} from \"./initglobalstates\"\n\n// if you're in create-react-app import the files as:\n// import store from \"./js/store/index\";\n// import App from \"./js/components/App.jsx\";\ninitGlobalStates()\n\nrender(\n  <App />,\n  // The target element might be either root or app,\n  // depending on your development environment\n  // document.getElementById(\"app\")\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}