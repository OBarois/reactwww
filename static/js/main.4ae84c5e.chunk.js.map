{"version":3,"sources":["clockController.js","wwwx/shapes/TexturedSurfaceShape.js","wwwx/shapes/TexturedSurfacePolygon.js","useEww.js","dhusToGeojson.js","eocatToGeojson.js","useDatahub.js","searchmanager.js","eww.js","missionselector.js","mapselector.js","mapstatelabel.js","datemanager/components/datelabel/DateLabel.js","datemanager/components/datecontroller/DateController.js","datemanager/components/datecontroller/useClock.js","datemanager/components/dateselector/DateSelectorScale.js","datemanager/components/dateselector/DateSelector.js","datemanager/DateManager.js","debug.js","slidepanel.js","colorpicker.js","app.js","registerServiceWorker.js","initglobalstates.js","index.js"],"names":["ClockController","PickedObject","WorldWind","SurfacePolygon","TexturedSurfaceShape","attributes","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","image","step","maxImageWidth","maxImageHeight","dc","ctx2D","xScale","yScale","dx","dy","pickColor","highlighted","highlightAttributes","_attributes","drawInterior","_isInteriorInhibited","drawOutline","outlineWidth","pickingMode","uniquePickColor","toHexString","crossesAntiMeridian","containsPole","draw","_interiorGeometry","fillStyle","interiorColor","toCssColorString","fill","_outlineGeometry","lineWidth","strokeStyle","outlineColor","stroke","save","points","map","location","x","longitude","y","latitude","drawPoints","clip","drawImageToPolygon","restore","po","clone","pickDelegate","layer","resolvePick","beginPath","moveTo","i","len","length","lineTo","ctx","canvasWidth","canvas","width","canvasHeight","height","offScreenCanvas","offScreenCtx","corners","getCorners","axesDim","getAxesDimensions","offScreenWidth","Math","min","distX","offScreenHeight","distY","drawImage","topLeft","topRight","bottomRight","bottomLeft","y1Current","y2Current","y1Next","y2Next","lerp","dWidth","ceil","max","abs","dHeight","isRectInsideCanvas","bbox","_this2","getBbox","edgePoints","filter","point","isEdgePoint","arePointsEqual","leftPoints","minX","rightPoints","maxX","_this$getTopBottom","getTopBottom","top","bottom","_this$getTopBottom2","slope1","getSlope","slope2","topLeftPoint","getTopLeftPoint","console","log","topLeftIndex","findIndex","newCorners","push","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","minY","maxY","reduce","acc","p1","p2","sqrt","slope","point1","point2","distance","t","_image","img","stateKeyInvalid","_stateId","stateId","document","createElement","getContext","SurfaceShape","TexturedSurfacePolygon","boundaries","Array","isArray","Error","staticStateKey","_boundaries","resetBoundaries","shape","useEww","_ref","id","clon","clat","alt","starfield","atmosphere","names","eww","useRef","_useState","useState","_useState2","slicedToArray","setProjection","_useState3","_useState4","_useState5","_useState6","geojsonlayers","setGeojsonlayers","_useState7","_useState8","_useState9","altitude","aoi","pickedItems","_useState10","ewwstate","setEwwState","features","_useState11","_useState12","setEnabledfeatures","_useState13","_useState14","starfieldlayer","setstarfieldlayer","_useState15","_useState16","atmospherelayer","setatmospherelayer","getLayerByName","name","current","layers","displayName","addQuicklook","renderable","url","useCredentials","userProperties","quicklookUrl","Promise","resolve","reject","Image","onload","onerror","e","crossOrigin","src","then","quicklookLayer","removeQuicklooks","boundingSector","footprint","quicklook","addRenderable","redraw","removeAllRenderables","setGlobeStates","lo","navigator","lookAtLocation","la","al","range","vp","bl","tr","view","viewport","polygon","pickTerrain","canvasCoordinates","terrainObject","position","round","err","getViewPolygon","objectSpread","viewpolygon","handleClick","recognizer","clientX","clientY","pickList","pick","includes","j","renderables","objects","userObject","handleDoubleClick","useEffect","WorldWindow","redrawCallbacks","BasicWorldWindowController","prototype","applyLimits","WWMath","clamp","clickRecognizer","ClickRecognizer","numberOfClicks","doubleClickRecognizer","recognizeSimultaneouslyWith","maxClickInterval","tapRecognizer","TapRecognizer","numberOfTaps","doubleTapRecognizer","maxTapInterval","wmsConfigBg","service","layerNames","title","numLevels","format","size","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","wmsConfigNames","configuration","baseUrl","slice","starFieldLayer","StarFieldLayer","atmosphereLayer","AtmosphereLayer","RenderableLayer","WmsLayer","enabled","l","addLayer","time","Date","setTimeout","goToAnimator","travelTime","goTo","Position","deepPicking","removeGeojson","removeLayer","addGeojson","epoch","renderableLayer","properties","updated","random","GeoJSONParser","load","concat","toConsumableArray","newfeatures","start","earthObservation","acquisitionInformation","acquisitionParameter","acquisitionStartTime","getTime","stop","acquisitionStopTime","sort","a","b","geometry","Name","NAME","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","Color","labelAttributes","offset","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","isLineStringType","isMultiLineStringType","red","green","blue","isPolygonType","isMultiPolygonType","ShapeAttributes","addWMS","toggleStarfield","toggleAtmosphere","setTime","toggleProjection","prevProj","supportedProjections","newProj","indexOf","globe","projection","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","toggleNames","_layer","dhusToGeojson","response","mapFromHubOpenSearch","item","reshuffle","array","json","content","hubItem","date","assign","int","double","str","sizeInBytes","sizeArray","split","parseFloat","wellknown","type","ingestiondate","uuid","beginposition","endposition","downloadUrl","link","href","parentIdentifier","status","platform","platformShortName","platformname","platformSerialIdentifier","platformserialidentifier","sensor","instrument","instrumentshortname","operationalMode","sensoroperationalmode","relativePassNumber","parseInt","relativeorbitnumber","orbitNumber","orbitnumber","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","orbitdirection","productInformation","productType","producttype","message","feed","entry","totalResults","startIndex","itemsPerPage","eocatToGeojson","identifier","EarthObservation","metaDataProperty","EarthObservationMetaData","procedure","EarthObservationEquipment","Platform","shortName","Instrument","Sensor","phenomenonTime","TimePeriod","beginPosition","endPosition","acquisitionParameters","Acquisition","useDatahub","collections","setCollections","geojsonResults","setGeojsonResults","loading","setLoading","firstpage","setFirstpage","_useGlobal","useGlobal","searchepoch","_useGlobal3","startend","_useGlobal5","mission","_useGlobal7","apppolygon","_SearchManager","_useGlobal4","setStartend","_useGlobal9","_useGlobal10","setReplace","_useGlobal11","_useGlobal12","setGosearch","windowSize","searchList","setSearchList","replacemode","setReplacemode","useHotkeys","count","SearchDate","toJSON","startepoch","UTC","getUTCFullYear","getUTCMonth","getUTCDate","_startdate","_enddate","newSearchList","end","SearchManager","searchUrl","setSearchurl","fetchURL","_ref2","asyncToGenerator","regenerator_default","mark","_callee","index","newurl","paging","geoJson","wrap","_context","prev","next","replace","totalresults","startindex","itemsperpage","fetch","mode","credentials","sent","t0","t1","_x","_x2","apply","arguments","startIndexOrigin","collectionArray","code","templateUrl","dateOff","areaOff","target","buildUrl","Eww","_useEww","state","_useDatahub","_useGlobal6","appdate","appstarfield","setAppstarfield","appatmosphere","setAppatmosphere","_useGlobal13","_useGlobal14","appnames","setAppnames","_useGlobal15","setAppaltitude","_useGlobal17","setApplatitude","_useGlobal19","setApplongitude","_useGlobal21","_useGlobal22","setApppolygon","_useGlobal23","_useGlobal24","setApppickeditems","reactn_default","style","background","MissionSelector","_useGlobal2","setMission","react_default","className","draggable","onClick","MapSelector","MapStateLabel","appaltitude","apppickeditems","items","setItems","showQL","setShowQL","fontSize","key","display","DateLabel","highlight","animated","dateFormat","toUpperCase","DateController","startdate","onDateChange","_useClock","autoStart","initdate","duration","setDate","playing","setPlaying","refreshrate","ldate","intervalRef","timeoutRef","setInterval","clearTimeout","clearInterval","togglePause","reset","increaseSpeed","decreaseSpeed","forceDate","newdate","useClock","lastTap","setLasttap","now","DateSelectorScale","zoomfactor","immediate","scale","timescale","setTimescale","scaleText","_start","_zoom","day","month","hour","monthcode","year","lastday","lastmonth","lastyear","lasthour","tics","putyear","putmonth","putday","putevenhour","puthour","offsetHeight","refdate","getUTCHours","class","pos","label","_useSpring","useSpring","dater","zoomer","_useSpring2","_useSpring2$","set","useLayoutEffect","to","config","onFrame","value","web","div","ref","DateSelector","onFinalDateChange","STEPS_UP","STEPS_DOWN","selector","refscaledate","scaledate","setScaledate","lastStartdate","setlLastStartdate","newstart","setNewstart","active","setActive","setZoomfactor","xy","bind","useGesture","onDrag","steparea","zoom","event","first","down","delta","velocity","direction","_ref2$temp","temp","getValue","laststeparea","deltaoffset","Xoffset","parentElement","offsetWidth","pageX","pageY","floor","add","sub","decay","onRest","dateselector_DateSelectorScale","DateManager","searching","selectorStartdate","setselectorStartdate","controllerStartdate","setcontrollerStartdate","labeldate","setLabelDate","datecontroller_DateController","datelabel_DateLabel","dateselector_DateSelector","Debug","debug","setDebug","debugkeys","setDebugkeys","lines","SlidePanel","props","visible","setVisible","slidePanel","toggle","vxvy","_ref$temp","initTarget","getAttribute","passive","imageSrc","transform","interpolate","children","ColorPicker","appcolor","lib","color","onChangeComplete","documentElement","setProperty","hex","App","hasFetched","setFetch","setAppdate","setSearchdate","_useGlobal8","setVertical","prevVertical","mockApi","randomInt","_doFetch","doFetch","isFull","setIsfull","_useFullscreen","useFullscreen","window","body","toggleFullscreen","isFullscreen","dist_default","onChange","datemanager_DateManager","src_mapstatelabel","src_missionselector","src_mapselector","src_colorpicker","src_debug_0","action","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","setGlobal","render","app","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"ueAkFeA,0EChFTC,EAAeC,IAAUD,aAC3BE,EAAiBD,IAAUC,eAuUhBC,cAlTX,SAAAA,EAAYC,GAAY,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACpBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAMDQ,MAAQ,KAObP,EAAKQ,KAAO,EAOZR,EAAKS,cAAgB,GACrBT,EAAKU,eAAiB,GAtBFV,+EAmCRW,EAAIC,EAAOC,EAAQC,EAAQC,EAAIC,GAC3C,IAGIC,EAHAlB,EAAcI,KAAKe,aAAef,KAAKgB,qBAA2ChB,KAAKiB,YACvFC,GAAiBlB,KAAKmB,sBAAwBvB,EAAWsB,aACzDE,EAAexB,EAAWwB,aAAexB,EAAWyB,aAAe,EAGvE,GAAKH,GAAiBE,EAAtB,CAYA,GARIZ,EAAGc,cAAgBtB,KAAKc,YACxBd,KAAKc,UAAYN,EAAGe,mBAGpBf,EAAGc,cACHR,EAAYd,KAAKc,UAAUU,eAG3BxB,KAAKyB,qBAAuBzB,KAAK0B,aAC7BR,IACAlB,KAAK2B,KAAK3B,KAAK4B,kBAAmBnB,EAAOC,EAAQC,EAAQC,EAAIC,GAC7DJ,EAAMoB,UAAYrB,EAAGc,YAAcR,EAAYlB,EAAWkC,cAAcC,mBACxEtB,EAAMuB,QAENZ,IACApB,KAAK2B,KAAK3B,KAAKiC,iBAAkBxB,EAAOC,EAAQC,EAAQC,EAAIC,GAC5DJ,EAAMyB,UAAYtC,EAAWyB,aAC7BZ,EAAM0B,YAAc3B,EAAGc,YAAcR,EAAYlB,EAAWwC,aAAaL,mBACzEtB,EAAM4B,cAEP,CACCrC,KAAKI,QAAUI,EAAGc,aAClBb,EAAM6B,OAEV,IAAIC,EAASvC,KAAK4B,kBAAkB,GAAGY,IAAI,SAAAC,GAAQ,MAAK,CACpDC,EAAGD,EAASE,UAAYjC,EAASE,EACjCgC,EAAGH,EAASI,SAAWlC,EAASE,KAEpCb,KAAK8C,WAAWP,EAAQ9B,GACpBS,IACIlB,KAAKI,QAAUI,EAAGc,aAClBb,EAAMsC,OACN/C,KAAKgD,mBAAmBvC,EAAOT,KAAKI,MAAOmC,GAC3C9B,EAAMwC,YAGNxC,EAAMoB,UAAYrB,EAAGc,YAAcR,EAAYlB,EAAWkC,cAAcC,mBACxEtB,EAAMuB,SAGVZ,IACAX,EAAMyB,UAAYtC,EAAWyB,aAC7BZ,EAAM0B,YAAc3B,EAAGc,YAAcR,EAAYlB,EAAWwC,aAAaL,mBACzEtB,EAAM4B,UAId,GAAI7B,EAAGc,YAAa,CAChB,IAAI4B,EAAK,IAAI1D,EAAaQ,KAAKc,UAAUqC,QAASnD,KAAKoD,aAAepD,KAAKoD,aAAepD,KACtF,KAAMA,KAAKqD,OAAO,GACtB7C,EAAG8C,YAAYJ,wCAIZX,EAAQ9B,GACfA,EAAM8C,YACN9C,EAAM+C,OAAOjB,EAAO,GAAGG,EAAGH,EAAO,GAAGK,GACpC,IAAK,IAAIa,EAAI,EAAGC,EAAMnB,EAAOoB,OAAQF,EAAIC,EAAKD,IAC1ChD,EAAMmD,OAAOrB,EAAOkB,GAAGf,EAAGH,EAAOkB,GAAGb,8CAIzBiB,EAAKzD,EAAOmC,GAC3B,IAAIuB,EAAcD,EAAIE,OAAOC,MACzBC,EAAeJ,EAAIE,OAAOG,OAE1BC,EAAkBxE,EAAqBwE,kBACvCC,EAAezE,EAAqByE,eAEpCC,EAAUrE,KAAKsE,WAAW/B,GAC1BgC,EAAUvE,KAAKwE,kBAAkBH,GAEjCI,EAAiBC,KAAKC,IAAIJ,EAAQK,MAAO5E,KAAKM,eAC9CuE,EAAkBH,KAAKC,IAAIJ,EAAQO,MAAO9E,KAAKO,gBAEnD4D,EAAgBH,MAAQS,EACxBN,EAAgBD,OAASW,EACzBT,EAAaW,UAAU3E,EAAO,EAAG,EAAGqE,EAAgBI,GAOpD,IALA,IAGIG,EAASC,EAAUC,EAAaC,EAAYC,EAAWC,EAAWC,EAAQC,EAH1ElF,EAAOL,KAAKK,KACZ2D,EAAQS,EAAiB,EACzBP,EAASW,EAAkB,EAGtBjC,EAAI,EAAGA,EAAIsB,EAAQtB,GAAKvC,EAAM,CACnC+E,EAAYpF,KAAKwF,KAAKnB,EAAQ,GAAIA,EAAQ,GAAIzB,EAAIsB,GAClDmB,EAAYrF,KAAKwF,KAAKnB,EAAQ,GAAIA,EAAQ,GAAIzB,EAAIsB,GAClDoB,EAAStF,KAAKwF,KAAKnB,EAAQ,GAAIA,EAAQ,IAAKzB,EAAIvC,GAAQ6D,GACxDqB,EAASvF,KAAKwF,KAAKnB,EAAQ,GAAIA,EAAQ,IAAKzB,EAAIvC,GAAQ6D,GAExD,IAAK,IAAIxB,EAAI,EAAGA,EAAIsB,EAAOtB,GAAKrC,EAAM,CAClC2E,EAAUhF,KAAKwF,KAAKJ,EAAWC,EAAW3C,EAAIsB,GAC9CiB,EAAWjF,KAAKwF,KAAKJ,EAAWC,GAAY3C,EAAIrC,GAAQ2D,GACxDkB,EAAclF,KAAKwF,KAAKF,EAAQC,GAAS7C,EAAIrC,GAAQ2D,GACrDmB,EAAanF,KAAKwF,KAAKF,EAAQC,EAAQ7C,EAAIsB,GAE3C,IAAIyB,EAASf,KAAKgB,KAAKhB,KAAKiB,IAAItF,EAAMqE,KAAKkB,IAAIX,EAASvC,EAAIsC,EAAQtC,GAAIgC,KAAKkB,IAAIT,EAAWzC,EAAIwC,EAAYxC,KAAO,EAC/GmD,EAAUnB,KAAKgB,KAAKhB,KAAKiB,IAAItF,EAAMqE,KAAKkB,IAAIZ,EAAQpC,EAAIuC,EAAWvC,GAAI8B,KAAKkB,IAAIX,EAASrC,EAAIsC,EAAYtC,KAAO,EAEhH5C,KAAK8F,mBAAmBd,EAASS,EAAQI,EAAS/B,EAAaG,IAC/DJ,EAAIkB,UAAUZ,EAAiBzB,EAAGE,EAAGvC,EAAMA,EAAM2E,EAAQtC,EAAGsC,EAAQpC,EAAG6C,EAAQI,wCAMpFtD,EAAQwD,GAAM,IAAAC,EAAAhG,KACrB+F,EAAOA,GAAQ/F,KAAKiG,QAAQ1D,GAE5B,IAAI2D,EAAa3D,EAAO4D,OAAO,SAAAC,GAAK,OAAIJ,EAAKK,YAAYD,EAAOL,KAOhE,GAL0B,IAAtBG,EAAWvC,QACX3D,KAAKsG,eAAeJ,EAAW,GAAIA,EAAWA,EAAWvC,OAAS,MAClEuC,EAAWvC,OAAS,GAGpBuC,EAAWvC,OAAS,EAAG,CACvB,IAAI4C,EAAaL,EAAWC,OAAO,SAAAC,GAAK,OAAIA,EAAM1D,IAAMqD,EAAKS,OACzDC,EAAcP,EAAWC,OAAO,SAAAC,GAAK,OAAIA,EAAM1D,IAAMqD,EAAKW,OAFvCC,EAIkB3G,KAAK4G,aAAaL,GAAjDvB,EAJa2B,EAIlBE,IAAsB1B,EAJJwB,EAIJG,OAJIC,EAKoB/G,KAAK4G,aAAaH,GAE7D,MAAO,CAACzB,EAPe+B,EAKlBF,IALkBE,EAKHD,OAEoB3B,GAG5C,IAAI6B,EAAShH,KAAKiH,SAASf,EAAW,GAAIA,EAAW,IACjDgB,EAASlH,KAAKiH,SAASf,EAAW,GAAIA,EAAW,IACjDiB,EAAenH,KAAKoH,gBAAgBJ,EAAQd,EAAW,GAAIA,EAAW,KACtElG,KAAKoH,gBAAgBF,EAAQhB,EAAW,GAAIA,EAAW,IAE3D,IAAKiB,EAED,OADAE,QAAQC,IAAI,6DACLpB,EAKX,IAFA,IAAIqB,EAAerB,EAAWsB,UAAU,SAAApB,GAAK,OAAIA,EAAM1D,IAAMyE,EAAazE,GAAK0D,EAAMxD,IAAMuE,EAAavE,IACpG6E,EAAa,GACRhE,EAAI8D,EAAc9D,EAAIyC,EAAWvC,OAAS4D,EAAc9D,IAC7DgE,EAAWC,KAAKxB,EAAWzC,EAAIyC,EAAWvC,SAG9C,OAAO8D,kCAGHlF,GACJ,IAAIwD,EAAO,CACPS,KAAMmB,OAAOC,iBACblB,KAAMiB,OAAOE,iBACbC,KAAMH,OAAOC,iBACbG,KAAMJ,OAAOE,kBAGjB,OAAOtF,EAAOyF,OAAO,SAACjC,EAAMK,GAMxB,OALAL,EAAKS,KAAO9B,KAAKC,IAAIoB,EAAKS,KAAMJ,EAAM1D,GACtCqD,EAAKW,KAAOhC,KAAKiB,IAAII,EAAKW,KAAMN,EAAM1D,GACtCqD,EAAK+B,KAAOpD,KAAKC,IAAIoB,EAAK+B,KAAM1B,EAAMxD,GACtCmD,EAAKgC,KAAOrD,KAAKiB,IAAII,EAAKgC,KAAM3B,EAAMxD,GAE/BmD,GACRA,wCAGMxD,GACT,OAAOA,EAAOyF,OAAO,SAACC,EAAK7B,GASvB,OARIA,EAAMxD,EAAIqF,EAAIpB,IAAIjE,IAClBqF,EAAIpB,IAAMT,GAGVA,EAAMxD,EAAIqF,EAAInB,OAAOlE,IACrBqF,EAAInB,OAASV,GAGV6B,GACR,CAACpB,IAAKtE,EAAO,GAAIuE,OAAQvE,EAAO,sCAG9B2F,EAAIC,GACT,IAAIvH,EAAKsH,EAAGxF,EAAIyF,EAAGzF,EACf7B,EAAKqH,EAAGtF,EAAIuF,EAAGvF,EACnB,OAAO8B,KAAK0D,KAAKxH,EAAKA,EAAKC,EAAKA,uCAGxBuF,EAAOL,GACf,OACIK,EAAM1D,IAAMqD,EAAKS,MAAQJ,EAAM1D,IAAMqD,EAAKW,MAC1CN,EAAMxD,IAAMmD,EAAK+B,MAAQ1B,EAAMxD,IAAMmD,EAAKgC,4CAInCG,EAAIC,GACf,OAAOD,EAAGxF,IAAMyF,EAAGzF,GAAKwF,EAAGtF,IAAMuF,EAAGvF,mCAG/BsF,EAAIC,GACT,OAAQD,EAAGtF,EAAIuF,EAAGvF,IAAMsF,EAAGxF,EAAIyF,EAAGzF,2CAGtB2F,EAAOC,EAAQC,GAC3B,OAAIF,GAAS,EACF,KAGPC,EAAO1F,EAAI2F,EAAO3F,EACX0F,EAGJC,4CAGOlE,GACd,IAGIO,EAAQ,EACRE,EAAQ,EAWZ,OAfSJ,KAAKkB,IAAIvB,EAAQ,GAAG3B,EAAI2B,EAAQ,GAAG3B,GACnCgC,KAAKkB,IAAIvB,EAAQ,GAAGzB,EAAIyB,EAAQ,GAAGzB,IAMxCgC,EAAQ5E,KAAKwI,SAASnE,EAAQ,GAAIA,EAAQ,IAC1CS,EAAQ9E,KAAKwI,SAASnE,EAAQ,GAAIA,EAAQ,MAG1CO,EAAQ5E,KAAKwI,SAASnE,EAAQ,GAAIA,EAAQ,IAC1CS,EAAQ9E,KAAKwI,SAASnE,EAAQ,GAAIA,EAAQ,KAGvC,CAACO,QAAOE,sCAGdoD,EAAIC,EAAIM,GACT,MAAO,CACH/F,EAAGwF,EAAGxF,GAAKyF,EAAGzF,EAAIwF,EAAGxF,GAAK+F,EAC1B7F,EAAGsF,EAAGtF,GAAKuF,EAAGvF,EAAIsF,EAAGtF,GAAK6F,8CAIfrC,EAAOpC,EAAOE,EAAQJ,EAAaG,GAClD,OACImC,EAAM1D,EAAIsB,GAAS,GACnBoC,EAAM1D,GAAKoB,GACXsC,EAAMxD,EAAIsB,GAAU,GACpBkC,EAAMxD,EAAIqB,gCApQd,OAAOjE,KAAK0I,qBAGNC,GACN3I,KAAK0I,OAASC,EACd3I,KAAK4I,iBAAkB,EACvB5I,KAAK6I,SAAWnJ,EAAeoJ,sDAsQ/B,OAHKnJ,EAAqBoE,SACtBpE,EAAqBoE,OAASgF,SAASC,cAAc,WAElDrJ,EAAqBoE,8CAI5B,IAAKpE,EAAqBkE,IAAK,CAC3B,IAAIE,EAASpE,EAAqBwE,kBAClCxE,EAAqBkE,IAAME,EAAOkF,WAAW,MAEjD,OAAOtJ,EAAqBkE,WAlUjBpE,IAAUyJ,cCDvBxJ,EAAiBD,IAAUC,eA+DlByJ,cAnDX,SAAAA,EAAYC,EAAYxJ,GAAY,IAAAC,EAGhC,GAHgCC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmJ,GAChCtJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqJ,GAAAhJ,KAAAH,KAAMJ,KAEDyJ,MAAMC,QAAQF,GACf,MAAM,IAAIG,MAAM,kFAJY,OAahC1J,EAAKuJ,WAAaA,EAElBvJ,EAAKgJ,SAAWnJ,EAAeoJ,UAfCjJ,iFAqChC,OAAOsJ,EAAuBK,eAAexJ,gDAM/BQ,uCAxBd,OAAOR,KAAKyJ,0BAGDL,GACX,IAAKC,MAAMC,QAAQF,GACf,MAAM,IAAIG,MAAM,qFAGpBvJ,KAAK0J,kBACL1J,KAAKyJ,YAAcL,EACnBpJ,KAAK6I,SAAWnJ,EAAeoJ,UAC/B9I,KAAK4I,iBAAkB,2CAgBLe,GAClB,OAAOjK,EAAe8J,eAAeG,GAAS,OAASA,EAAMd,gBAtDhClJ,GC6B9B,SAASiK,EAATC,GAAuE,IAArDC,EAAqDD,EAArDC,GAAIC,EAAiDF,EAAjDE,KAAMC,EAA2CH,EAA3CG,KAAMC,EAAqCJ,EAArCI,IAAKC,EAAgCL,EAAhCK,UAAWC,EAAqBN,EAArBM,WAAYC,EAASP,EAATO,MAI3DC,EAAMC,iBAAO,MAJuDC,EAKtCC,mBAAS,MAL6BC,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAKvDI,GALuDF,EAAA,GAAAA,EAAA,IAAAG,EAOpDJ,mBAAS,IAP2CK,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAQhCL,mBAAS,KARuBO,EAAAjL,OAAA4K,EAAA,EAAA5K,CAAAgL,EAAA,GAQnEE,EARmED,EAAA,GAQpDE,EARoDF,EAAA,GAAAG,EAS5BV,mBAAS,IATmBW,EAAArL,OAAA4K,EAAA,EAAA5K,CAAAoL,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAU1CX,mBAAS,CAAC3H,SAAUmH,EAAMrH,UAAWoH,EAAMsB,SAAUpB,EAAKqB,IAAI,GAAIC,YAAa,MAVrCC,EAAA1L,OAAA4K,EAAA,EAAA5K,CAAAsL,EAAA,GAUnEK,EAVmED,EAAA,GAUzDE,EAVyDF,EAAA,GAYpEG,EAAWrB,iBAAO,IAZkDsB,EAc5BpB,mBAAS,IAdmBqB,EAAA/L,OAAA4K,EAAA,EAAA5K,CAAA8L,EAAA,GAclDE,GAdkDD,EAAA,GAAAA,EAAA,IAAAE,EAe9BvB,mBAAS,IAfqBwB,EAAAlM,OAAA4K,EAAA,EAAA5K,CAAAiM,EAAA,GAenEE,EAfmED,EAAA,GAenDE,EAfmDF,EAAA,GAAAG,EAgB5B3B,mBAAS,IAhBmB4B,EAAAtM,OAAA4K,EAAA,EAAA5K,CAAAqM,EAAA,GAgBnEE,EAhBmED,EAAA,GAgBlDE,EAhBkDF,EAAA,GA0P1E,SAASG,EAAeC,GAEpB,IAAK,IAAI/I,EAAI,EAAGA,EAAI4G,EAAIoC,QAAQC,OAAO/I,OAAQF,IAE3C,GADA4D,QAAQC,IAAI,iBAAiB+C,EAAIoC,QAAQC,OAAOjJ,GAAGkJ,aAC/CtC,EAAIoC,QAAQC,OAAOjJ,GAAGkJ,cAAgBH,EAAM,OAAOnC,EAAIoC,QAAQC,OAAOjJ,GAE9E,OAAO,KA8EX,SAASmJ,EAAaC,GAElB,IAAqBC,EAAKC,GAALD,EA8BTD,EAAWG,eAAeC,aA9BZF,GA8ByB,EA7BxC,IAAIG,QAAQ,SAACC,EAASC,GACzB,IAAMzE,EAAM,IAAI0E,MAEhB1E,EAAI2E,OAAS,WACTH,EAAQxE,IAGZA,EAAI4E,QAAU,SAASC,GACnBJ,EAAOI,IAGX7E,EAAI8E,YAAcV,EAAiB,kBAAoB,YACvDpE,EAAI+E,IAAMZ,EACVzF,QAAQC,IAAI,iBAgBqCqG,KAAK,SAAAvN,GAC1D,IAAIwN,EAAiBrB,EAAe,cACpCsB,IACAxG,QAAQC,IAAIuF,EAAWzD,YACvB/B,QAAQC,IAAIuF,EAAWiB,gBAEvB,IAAIC,EAAY,CACZlB,EAAWzD,WAAW,GAAG,GACzByD,EAAWzD,WAAW,GAAG,GACzByD,EAAWzD,WAAW,GAAG,GACzByD,EAAWzD,WAAW,GAAG,IAG7B/B,QAAQC,IAAIyG,GACZ,IAAIC,EAAa,IAAI7E,EAAuB4E,EAAUlB,EAAWjN,YACjEoO,EAAU1N,cAAgB,IAC1B0N,EAAUzN,eAAiB,IAE3ByN,EAAU5N,MAAQA,EAClByN,IACAD,EAAeK,cAAcD,GAE7B3D,EAAIoC,QAAQyB,WAIpB,SAASL,IACLtB,EAAe,cAAc4B,uBAC7B9D,EAAIoC,QAAQyB,SAgDhB,IAAME,EAAiB,WAEnB,IAAIC,EAAKhE,EAAIoC,QAAQ6B,UAAUC,eAAe5L,UAC1C6L,EAAKnE,EAAIoC,QAAQ6B,UAAUC,eAAe1L,SAC1C4L,EAAKpE,EAAIoC,QAAQ6B,UAAUI,MAC3BC,EAAMF,EAAK,IAjZnB,WACI,IAKIG,EASAC,EAdAC,EAAOzE,EAAIoC,QAAQsC,SAEnBC,EAAU,GAId,KACIJ,EAAMvE,EAAIoC,QAAQwC,YAAY5E,EAAIoC,QAAQyC,kBAAkBJ,EAAKpM,EAAGoM,EAAKlM,EAAIkM,EAAK5K,SAASiL,gBAAgBC,UACxGvM,SAAW6B,KAAK2K,MAAoB,IAAdT,EAAG/L,UAAkB,IAC9C+L,EAAGjM,UAAY+B,KAAK2K,MAAqB,IAAfT,EAAGjM,WAAmB,IAEpD,MAAM2M,GAAMV,EAAK,KAIjB,KACIC,EAAKxE,EAAIoC,QAAQwC,YAAY5E,EAAIoC,QAAQyC,kBAAkBJ,EAAKpM,EAAIoM,EAAK9K,MAAO8K,EAAKlM,IAAIuM,gBAAgBC,UACtGvM,SAAW6B,KAAK2K,MAAoB,IAAdR,EAAGhM,UAAkB,IAC9CgM,EAAGlM,UAAY+B,KAAK2K,MAAqB,IAAfR,EAAGlM,WAAmB,IAEpD,MAAM2M,GAAMT,EAAK,KAuBjB,OApBS,MAAND,GAAoB,MAANC,EAEXG,EAAU,IAKGJ,EAAGjM,UACFiM,EAAG/L,SACJgM,EAAGlM,UACHkM,EAAGhM,SAGhBmM,EAAU,YACNJ,EAAGjM,UAAY,IAAMiM,EAAG/L,SAAW,IACnCgM,EAAGlM,UAAY,IAAMiM,EAAG/L,SAAW,IACnCgM,EAAGlM,UAAY,IAAMkM,EAAGhM,SAAW,IACnC+L,EAAGjM,UAAY,IAAMkM,EAAGhM,SAAW,IACnC+L,EAAGjM,UAAY,IAAMiM,EAAG/L,SAAW,MAEtCmM,EAqWgBO,GAAiB,GAExC7D,EAAY,SAACD,GAAe,OAAO3L,OAAA0P,EAAA,EAAA1P,CAAA,GAAI2L,EAAX,CAAqB9I,UAAU0L,EAAIxL,SAAU2L,EAAInD,SAAUoD,EAAIgB,YAAad,OAMtGe,EAAe,SAACC,GAElB,IAAIjN,EAAIiN,EAAWC,QACfhN,EAAI+M,EAAWE,QAGfC,EAAWzF,EAAIoC,QAAQsD,KAAK1F,EAAIoC,QAAQyC,kBAAkBxM,EAAGE,IAEjE,GADAyE,QAAQC,IAAIwI,IACRA,EAASX,gBAkCT,OAHA9H,QAAQC,IAAI,sBACZuG,IA3BA,IAAK,IAAIpK,EAAI,EAAGA,EAAI4G,EAAIoC,QAAQC,OAAO/I,OAAQF,IAC3C,GAAI4G,EAAIoC,QAAQC,OAAOjJ,GAAGkJ,YAAYqD,SAAS,aAC3C,IAAK,IAAIC,EAAI,EAAGA,EAAI5F,EAAIoC,QAAQC,OAAOjJ,GAAGyM,YAAYvM,OAAQsM,IAAK,CAC9C5F,EAAIoC,QAAQC,OAAOjJ,GAAGyM,YAAYD,GACxClP,aAAc,EAOrC,IADA,IAAIwK,EAAc,GACT9H,EAAI,EAAGA,EAAIqM,EAASK,QAAQxM,OAAQF,IACrCqM,EAASK,QAAQ1M,GAAG2M,sBAAsB3Q,IAAUyJ,eACpDqC,EAAY7D,KAAKoI,EAASK,QAAQ1M,GAAG2M,YACrCN,EAASK,QAAQ1M,GAAG2M,WAAWrP,aAAe+O,EAASK,QAAQ1M,GAAG2M,WAAWrP,YAG7E8M,IAEAjB,EAAakD,EAASK,QAAQ1M,GAAG2M,aAGzC/I,QAAQC,IAAIiE,GACZG,EAAY,SAACD,GAAe,OAAO3L,OAAA0P,EAAA,EAAA1P,CAAA,GAAI2L,EAAX,CAAqBF,YAAaA,MAC9DlB,EAAIoC,QAAQyB,UAWdmC,EAAqB,SAACV,GACxBtI,QAAQC,IAAI,gBACZ,IAII8H,EAJA1M,EAAIiN,EAAWC,QACfhN,EAAI+M,EAAWE,QACfC,EAAWzF,EAAIoC,QAAQsD,KAAK1F,EAAIoC,QAAQyC,kBAAkBxM,EAAGE,IAMjE,GAAIkN,EAASX,gBAAiB,CAI1B,IAAI/I,EAAQ,UAHZgJ,EAAWU,EAASX,gBAAgBC,UAGNzM,UAAU,IAAIyM,EAASvM,SAAS,IAE9D6I,EAAY,SAACD,GAAe,OAAO3L,OAAA0P,EAAA,EAAA1P,CAAA,GAAI2L,EAAX,CAAqBH,IAAKlF,WAGpDiB,QAAQC,IAAI,iBACZoE,EAAY,SAACD,GAAe,OAAO3L,OAAA0P,EAAA,EAAA1P,CAAA,GAAI2L,EAAX,CAAqBH,IAAK,QAgHlE,OAjGEgF,oBAAU,WACNjJ,QAAQC,IAAI,wCAAyC4C,EAAU,IAAIC,GAEnEE,EAAIoC,QAAU,IAAIhN,IAAU8Q,YAAYzG,GACxCO,EAAIoC,QAAQ+D,gBAAgB9I,KAAK0G,GAGjC3O,IAAUgR,2BAA2BC,UAAUC,YAAc,WACzDtG,EAAIoC,QAAQ6B,UAAUI,MAAQjP,IAAUmR,OAAOC,MAAMxG,EAAIoC,QAAQ6B,UAAUI,MAAO,IAAM,MAU5F,IAAIoC,EAAkB,IAAIrR,IAAUsR,gBAAgB1G,EAAIoC,QAASiD,GACjEoB,EAAgBE,eAAiB,EACjC,IAAIC,EAAwB,IAAIxR,IAAUsR,gBAAgB1G,EAAIoC,QAAS4D,GACvEY,EAAsBD,eAAiB,EACvCC,EAAsBC,4BAA4BJ,GAClDG,EAAsBE,iBAAmB,IAEzC,IAAIC,EAAgB,IAAI3R,IAAU4R,cAAchH,EAAIoC,QAASiD,GAC7D0B,EAAcE,aAAe,EAC7B,IAAIC,EAAsB,IAAI9R,IAAU4R,cAAchH,EAAIoC,QAAS4D,GACnEkB,EAAoBD,aAAe,EACnCC,EAAoBL,4BAA4BE,GAChDG,EAAoBC,eAAiB,IAKrC,IAAIC,EAAc,CACdC,QAAS,gCACTC,WAAY,mBACZC,MAAO,mBACPC,UAAW,GACXC,OAAQ,YACRC,KAAM,IACNC,OAAQvS,IAAUwS,OAAOC,YACzBC,eAAgB,IAAI1S,IAAU2S,SAAS,GAAI,KAG3CC,EAAiB,CACjBX,QAAS,gCACTC,WAAY,iBACZC,MAAO,iBACPC,UAAW,GACXC,OAAQ,YACRC,KAAM,IACNC,OAAQvS,IAAUwS,OAAOC,YACzBC,eAAgB,IAAI1S,IAAU2S,SAAS,GAAI,KAE/C3S,IAAU6S,cAAcC,QAAU9S,IAAU6S,cAAcC,QAAQC,MAAM,GAAG,GAiB3E,IAhBA,IAAIC,EAAiB,IAAIhT,IAAUiT,eAC/BC,EAAkB,IAAIlT,IAAUmT,gBAAgB,qCAKhDhF,EAAiB,IAAInO,IAAUoT,gBAAgB,cAE/CnG,EAAS,CACT,CAAErJ,MAAO,IAAI5D,IAAUqT,SAASrB,EAAa,IAAKsB,SAAS,GAC3D,CAAE1P,MAAO,IAAI5D,IAAUqT,SAAST,EAAgB,SAAUU,QAAS3I,GACnE,CAAE/G,MAAOoP,EAAgBM,QAAS7I,GAClC,CAAE7G,MAAOsP,EAAiBI,QAAS5I,GACnC,CAAE9G,MAAOuK,EAAgBmF,SAAS,IAG7BC,EAAI,EAAGA,EAAItG,EAAO/I,OAAQqP,IAC/BtG,EAAOsG,GAAG3P,MAAM0P,QAAUrG,EAAOsG,GAAGD,QACpC1I,EAAIoC,QAAQwG,SAASvG,EAAOsG,GAAG3P,OAMnC6I,EAAkBuG,GAClBnG,EAAmBqG,GACnBF,EAAeS,KAAO,IAAIC,KAC1BR,EAAgBO,KAAO,IAAIC,KAC3BC,WAAW,WACP/I,EAAIoC,QAAQ4G,aAAaC,WAAa,IACtCjJ,EAAIoC,QAAQ8G,KAAK,IAAI9T,IAAU+T,SAASxJ,EAAMD,EAAME,IACpDI,EAAIoC,QAAQyB,UACT,KAEP7D,EAAIoC,QAAQyB,SACZ7D,EAAIoC,QAAQgH,aAAc,GAE3B,IAGE,CAAEhI,WAAUiI,cAtcjB,WACIrM,QAAQC,IAAI,4BACZ,IAAI,IAAI7D,EAAE,EAAEA,EAAEuH,EAAcrH,OAAOF,IAC/BuH,EAAcvH,GAAG0K,uBACjB9D,EAAIoC,QAAQkH,YAAY3I,EAAcvH,IACtC4D,QAAQC,IAAI0D,EAAcvH,IAE9BwH,EAAiB,IAEjBU,EAASc,QAAU,GACnBX,EAAmB,IAEnBzB,EAAIoC,QAAQkH,YAAYpH,EAAe,cACvClC,EAAIoC,QAAQyB,UAybgB0F,WA7hBb,SAAC9G,EAAI+G,GA4EpB,IAAIC,EAAkB,IAAIrU,IAAUoT,gBAAgB,aAAa/F,EAAIiH,WAAWC,QAAQtP,KAAKgB,KAAqB,IAAhBhB,KAAKuP,WAEvG5J,EAAIoC,QAAQwG,SAASa,GAIP,IAAIrU,IAAUyU,cAAcpH,GAClCqH,KA9BR,WACI9M,QAAQC,IAAIwM,GACZ7I,EAAiB,SAACD,GAAD,SAAAoJ,OAAAtU,OAAAuU,EAAA,EAAAvU,CAAqBkL,GAArB,CAAmC8I,MAEpD,IADA,IAAIQ,EAAc3I,EAASc,QACnBhJ,EAAI,EAAGA,EAAGqQ,EAAgB5D,YAAYvM,OAAQF,IAElD6Q,EAAY5M,KAAK,CACb6M,MAAOT,EAAgB5D,YAAYzM,GAAGuJ,eAAewH,iBAAiBC,uBAAuB,GAAGC,qBAAqBC,qBAAqBC,UAC1IC,KAAMf,EAAgB5D,YAAYzM,GAAGuJ,eAAewH,iBAAiBC,uBAAuB,GAAGC,qBAAqBI,oBAAoBF,UACxI/H,WAAYiH,EAAgB5D,YAAYzM,KAE5CqQ,EAAgB5D,YAAYzM,GAAGsP,SAAU,EAE7CuB,EAAYS,KAAM,SAACC,EAAEC,GAAH,OAASD,EAAET,MAAQU,EAAEV,QAEvC5I,EAASc,QAAU6H,EACnBjN,QAAQC,IAAIgN,GAGZjK,EAAIoC,QAAQyB,UApEhB,SAAoCgH,EAAUnB,GAC1C,IAAIzB,EAAgB,GACpBA,EAActF,eAAiB+G,EAE/B,IAAIvH,EAAOuH,EAAWvH,MAAQuH,EAAWoB,MAAQpB,EAAWqB,KACxD5I,IAAM8F,EAAc9F,KAAOA,GAE/B,IAAI6I,EAAsB,IAAI5V,IAAU6V,oBAAoB,MAsC5D,OArCAD,EAAoBE,WAAa,GACjCF,EAAoBG,WAAa,IAAI/V,IAAUgW,MAAM,EAAG,EAAG,EAAG,IAC9DJ,EAAoBK,gBAAgBC,OAAS,IAAIlW,IAAUmW,OACvDnW,IAAUoW,gBAAiB,EAC3BpW,IAAUoW,gBAAiB,GAI3BX,EAASY,eAAiBZ,EAASa,mBACnCzD,EAAc1S,WAAa,IAAIH,IAAU6V,oBAAoBD,GAEtDH,EAASc,oBAAsBd,EAASe,yBAC/C3D,EAAc1S,WAAWwB,aAAc,EACvCkR,EAAc1S,WAAWwC,aAAe,IAAI3C,IAAUgW,MAClD,GAAMnD,EAAc1S,WAAWkC,cAAcoU,IAC7C,GAAM5D,EAAc1S,WAAWkC,cAAcqU,MAC7C,GAAM7D,EAAc1S,WAAWkC,cAAcsU,KAC7C,GAEJ9D,EAAc1S,WAAWyB,aAAe,IACjC6T,EAASmB,iBAAmBnB,EAASoB,wBAC5ChE,EAAc1S,WAAa,IAAIH,IAAU8W,gBAAgB,MACzDjE,EAAc1S,WAAWkC,cAAgB,IAAIrC,IAAUgW,MAAM,EAAG,EAAG,EAAG,IACtEnD,EAAc1S,WAAWwC,aAAe,IAAI3C,IAAUgW,MAAM,EAAG,EAAG,EAAG,IAErEnD,EAActR,oBAAsB,IAAIvB,IAAU8W,gBAAgBjE,EAAc1S,YAChF0S,EAActR,oBAAoBoB,aAAe,IAAI3C,IAAUgW,MAAM,EAAG,EAAG,EAAG,IAC9EnD,EAActR,oBAAoBc,cAAgB,IAAIrC,IAAUgW,MAAM,EAAG,EAAG,EAAG,IAU5EnD,GAkCoDwB,IA0cvB0C,OAtb5C,aAsboDC,gBA7lBpD,WACIpP,QAAQC,IAAI,mBAGZ2E,EAAe8G,SAAW9G,EAAe8G,QACzC1I,EAAIoC,QAAQyB,UAwlBqDwI,iBAvmBrE,WACIrP,QAAQC,IAAI,oBAGZ+E,EAAgB0G,SAAW1G,EAAgB0G,QAE3C1I,EAAIoC,QAAQyB,UAimBuEyI,QA9OvF,SAAiB9C,GAGb5H,EAAeiH,KAAO,IAAIC,KAAKU,GAC/BxH,EAAgB6G,KAAO,IAAIC,KAAKU,GAIhCxJ,EAAIoC,QAAQyB,UAsOgF0I,iBAhOhG,WACIjM,EAAe,SAAAkM,GACbxP,QAAQC,IAAI,mBAAmBuP,GAC/B,IAAIC,EAAuB,CAAE,KAAM,kBAAmB,YAClDC,GAAWD,EAAqBE,QAAQH,GAAY,GAAGC,EAAqBnT,OAEhF,OADA0D,QAAQC,IAAI,kBAAkBwP,EAAqBC,IAC3CD,EAAqBC,IAC3B,IAAK,KACD1M,EAAIoC,QAAQwK,MAAMC,WAAa,IAAIzX,IAAU0X,gBAC7C,MACJ,IAAK,kBACD9M,EAAIoC,QAAQwK,MAAMC,WAAa,IAAIzX,IAAU2X,0BAC7C,MACJ,IAAK,WACD/M,EAAIoC,QAAQwK,MAAMC,WAAa,IAAIzX,IAAU4X,mBAC7C,MACJ,IAAK,cACDhN,EAAIoC,QAAQwK,MAAMC,WAAa,IAAIzX,IAAU6X,2BAA2B,SACxE,MACJ,IAAK,cACDjN,EAAIoC,QAAQwK,MAAMC,WAAa,IAAIzX,IAAU6X,2BAA2B,SACxE,MACJ,QACAjN,EAAIoC,QAAQwK,MAAMC,WAAa,IAAIzX,IAAU0X,gBAG/C,OADA9M,EAAIoC,QAAQyB,SACL4I,EAAqBC,MAsMgFQ,YAplBlH,WACIlQ,QAAQC,IAAI,eACZ,IAAIkQ,EAASjL,EAAe,kBAC5BiL,EAAOzE,SAAWyE,EAAOzE,QACzB1I,EAAIoC,QAAQyB,gCC9EL,SAASuJ,EAAcC,GAGlC,SAASC,EAAqBC,GAC1B,SAASC,EAAUC,GAEf,IADA,IAAIC,EAAO,GACHtU,EAAE,EAAGA,EAAIqU,EAAMnU,OAAQF,IAC3BsU,EAAKD,EAAMrU,GAAG+I,MAASsL,EAAMrU,GAAGuU,QAEpC,OAAOD,EAGX,IACI,IAAIE,EAAU,GACXL,EAAKM,MAAMpY,OAAOqY,OAAOF,EAAQJ,EAAUD,EAAKM,OAChDN,EAAKQ,KAAKtY,OAAOqY,OAAOF,EAAQJ,EAAUD,EAAKQ,MAC/CR,EAAKS,QAAQvY,OAAOqY,OAAOF,EAAQJ,EAAUD,EAAKS,SAClDT,EAAKU,KAAKxY,OAAOqY,OAAOF,EAAQJ,EAAUD,EAAKU,MAGlD,IACIC,EADAC,EAAYP,EAAQlG,KAAK0G,MAAM,KAEnC,OAAQD,EAAU,IACd,IAAK,IACDD,EAAc7T,KAAK2K,MAAMqJ,WAAWF,EAAU,KAC9C,MACJ,IAAK,KACDD,EAAc7T,KAAK2K,MAA+B,KAAzBqJ,WAAWF,EAAU,KAC9C,MACJ,IAAK,KACDD,EAAc7T,KAAK2K,MAA+B,KAAzBqJ,WAAWF,EAAU,IAAS,MACvD,MACJ,IAAK,KACDD,EAAc7T,KAAK2K,MAA+B,KAAzBqJ,WAAWF,EAAU,IAAS,KAAK,MAC5D,MACJ,QACID,EAAc7T,KAAK2K,MAAMqJ,WAAWF,EAAU,KAuDtD,MAjDc,CACV1O,GAAI8N,EAAKhG,MACTsD,SAAUyD,IAAUV,EAAQlK,WAC5B6K,KAAM,UACN7E,WAAY,CACRC,QAAS,IAAIb,KAAK8E,EAAQY,eAC1BjH,MAAOgG,EAAKhG,MACZpF,KAAMoL,EAAKhG,MACXkH,KAAMlB,EAAK9N,GACXoO,KAAMD,EAAQc,cAAgB,IAAMd,EAAQe,YAC5CC,YAAarB,EAAKsB,KAAK,GAAGC,KAC1BlM,aAAe2K,EAAKsB,KAAKvV,QAAU,EAAKiU,EAAKsB,KAAK,GAAGC,KAAM,KAM3D3E,iBAAkB,CACd4E,iBAAkB,GAClBC,OAAQ,WACR5E,uBAAwB,CAAC,CACrB6E,SAAU,CACNC,kBAAmBtB,EAAQuB,aAC3BC,yBAA0BxB,EAAQyB,0BAEtCC,OAAQ,CACJC,WAAY3B,EAAQ4B,oBACpBC,gBAAiB7B,EAAQ8B,uBAE7BrF,qBAAsB,CAClBC,qBAAsB,IAAIxB,KAAK8E,EAAQc,eACvCjE,oBAAqB,IAAI3B,KAAK8E,EAAQe,aACtCgB,mBAAoBC,SAAShC,EAAQiC,qBACrCC,YAAaF,SAAShC,EAAQmC,aAC9BC,2BAA4B,KAC5BC,0BAA2B,KAC3BC,eAAgBtC,EAAQuC,kBAIhCC,mBAAoB,CAChBC,YAAazC,EAAQ0C,YAErB5I,KAAMwG,MAOxB,MAAOjJ,GAEL,OADAjI,QAAQC,IAAI,iCAAiCgI,EAAIsL,SAC1C,IAIf,IAAIjP,EAAW,GACf,IACQ+L,EAASmD,KAAKC,MACXzR,MAAMC,QAAQoO,EAASmD,KAAKC,QAC3BzT,QAAQC,IAAI,sBACZqE,EAAW+L,EAASmD,KAAKC,MAAMtY,IAAK,SAAAoV,GAAI,OAAKD,EAAqBC,KAAOzR,OAAO,SAAAyR,GAAI,OAAIA,IAAS,MAEjGjM,EAAW,CAACgM,EAAqBD,EAASmD,KAAKC,QAInDnP,EAAW,GAGjB,MAAO2D,GACLjI,QAAQC,IAAIoQ,GACZrQ,QAAQC,IAAI,WACZD,QAAQC,IAAIgI,GACZ3D,EAAW,GAgBf,MAbc,CACNiN,KAAM,oBACN9O,GAAI,SACJiK,WAAY,CACRgH,aAAcrD,EAASmD,KAAK,2BAC5BG,WAAatD,EAASmD,KAAK,yBAA0BnD,EAASmD,KAAK,yBAAyB,EAC5FI,aAAcvD,EAASmD,KAAK,2BAC5BjJ,MAAO,uBACPoC,QAAS,IAAIb,MAEjBxH,SAAUA,GCjIP,SAASuP,EAAexD,GAmEnC,IAAI/L,EAAW,GACf,IACQ+L,EAAS/L,SACNtC,MAAMC,QAAQoO,EAAS/L,YACtBtE,QAAQC,IAAI,yBACZqE,EAAW+L,EAAS/L,SAASnJ,IAAK,SAAAoV,GAAI,OArElD,SAA8BA,GAE1B,IAuDI,MApDc,CACV9N,GAAI8N,EAAK9N,GACToL,SAAU0C,EAAK1C,SACf0D,KAAM,UACN7E,WAAY,CACRC,QAAS4D,EAAK7D,WAAWC,QACzBpC,MAAOgG,EAAK7D,WAAWnC,MACvBpF,KAAMoL,EAAKhG,MACXkH,KAAMlB,EAAK7D,WAAWoH,WACtBjD,KAAMN,EAAK7D,WAAWmE,KACtBe,YAAa,KACbhM,aAAc,KAMduH,iBAAkB,CACd4E,iBAAkBxB,EAAK7D,WAAWqH,iBAAiBC,iBAAiBC,yBAAyBlC,iBAC7FC,OAAQ,WACR5E,uBAAwB,CAAC,CACrB6E,SAAU,CACNC,kBAAmB3B,EAAK7D,WAAWqH,iBAAiBG,UAAUC,0BAA0BlC,SAASmC,SAASC,UAC1GjC,yBAA0B,MAE9BE,OAAQ,CACJC,WAAYhC,EAAK7D,WAAWqH,iBAAiBG,UAAUC,0BAA0B5B,WAAW+B,WAAWD,UACvG5B,gBAAiBlC,EAAK7D,WAAWqH,iBAAiBG,UAAUC,0BAA0B7B,OAAOiC,OAAO9B,iBAExGpF,qBAAsB,CAClBC,qBAAsB,IAAIxB,KAAKyE,EAAK7D,WAAWqH,iBAAiBS,eAAeC,WAAWC,eAC1FjH,oBAAqB,IAAI3B,KAAKyE,EAAK7D,WAAWqH,iBAAiBS,eAAeC,WAAWE,aACzFhC,mBAAoB,KACpBG,YAAavC,EAAK7D,WAAWqH,iBAAiBG,UAAUC,0BAA0BS,sBAAsBC,YAAY/B,YACpHE,2BAA4B,KAC5BC,0BAA2B,KAC3BC,eAAgB3C,EAAK7D,WAAWqH,iBAAiBG,UAAUC,0BAA0BS,sBAAsBC,YAAY3B,kBAI/HE,mBAAoB,CAChBC,YAAa9C,EAAK7D,WAAWqH,iBAAiBC,iBAAiBC,yBAAyBZ,YAExFzB,YAAarB,EAAKsB,KAAK,GAAG,KAC1BjM,aAAe2K,EAAKsB,KAAKvV,QAAU,EAAKiU,EAAKsB,KAAK,GAAG,KAAM,KAE3DnH,KAAM,SAOxB,MAAOzC,GAEL,OADAjI,QAAQC,IAAI,iCAAiCgI,EAAIsL,SAC1C,IASwCjD,CAAqBC,KAAOzR,OAAO,SAAAyR,GAAI,OAAIA,IAAS,MAInGjM,EAAW,GAGjB,MAAO2D,GACLjI,QAAQC,IAAIoQ,GACZrQ,QAAQC,IAAI,WACZD,QAAQC,IAAIgI,GACZ3D,EAAW,GAgBf,MAbc,CACNiN,KAAM,oBACN9O,GAAI,SACJiK,WAAY,CACRgH,aAAcrD,EAAS3D,WAAWgH,aAClCC,WAAYtD,EAAS3D,WAAWiH,WAChCC,aAAcvD,EAAS3D,WAAWkH,aAClCrJ,MAAO8F,EAAS3D,WAAWnC,MAC3BoC,QAAS0D,EAAS3D,WAAWC,SAEjCrI,SAAUA,wBCxFP,SAASwQ,IAAa,IAAA5R,EAEOC,mBAAS,IAFhBC,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAEzB6R,EAFyB3R,EAAA,GAEZ4R,EAFY5R,EAAA,GAAAG,EAoDWJ,mBAAS,MApDpBK,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAoD1B0R,EApD0BzR,EAAA,GAoDV0R,EApDU1R,EAAA,GAAAC,EAqDHN,oBAAS,GArDNO,EAAAjL,OAAA4K,EAAA,EAAA5K,CAAAgL,EAAA,GAqD1B0R,EArD0BzR,EAAA,GAqDjB0R,EArDiB1R,EAAA,GAAAG,EAsDCV,oBAAS,GAtDVW,EAAArL,OAAA4K,EAAA,EAAA5K,CAAAoL,EAAA,GAsD1BwR,EAtD0BvR,EAAA,GAsDfwR,EAtDexR,EAAA,GAAAyR,EAwDPC,oBAAU,eAA5BC,EAxDyBhd,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,MAAAG,EAyDVF,oBAAU,YAAzBG,EAzDyBld,OAAA4K,EAAA,EAAA5K,CAAAid,EAAA,MAAAE,EA0DXJ,oBAAU,WAAxBK,EA1DyBpd,OAAA4K,EAAA,EAAA5K,CAAAmd,EAAA,MAAAE,EA2DRN,oBAAU,cAA3BO,EA3DyBtd,OAAA4K,EAAA,EAAA5K,CAAAqd,EAAA,MAAAE,ECJtB,WAAyB,IAAAT,EAEVC,oBAAU,eAA5BC,EAF4Bhd,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,MAAAG,EAGFF,oBAAU,YAHRS,EAAAxd,OAAA4K,EAAA,EAAA5K,CAAAid,EAAA,GAG5BC,EAH4BM,EAAA,GAGjBC,EAHiBD,EAAA,GAAAL,EAIXJ,oBAAU,cAA3BO,EAJ4Btd,OAAA4K,EAAA,EAAA5K,CAAAmd,EAAA,MAAAE,EAKdN,oBAAU,WAAxBK,EAL4Bpd,OAAA4K,EAAA,EAAA5K,CAAAqd,EAAA,MAAAK,EAMJX,oBAAU,WANNY,EAAA3d,OAAA4K,EAAA,EAAA5K,CAAA0d,EAAA,GAMnBE,GANmBD,EAAA,GAAAA,EAAA,IAAAE,EAOJd,oBAAU,YAPNe,EAAA9d,OAAA4K,EAAA,EAAA5K,CAAA6d,EAAA,GAOnBE,GAPmBD,EAAA,GAAAA,EAAA,IAAArT,EAaAC,mBAAS,OAbTC,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAa7BuT,EAb6BrT,EAAA,GAAAG,GAAAH,EAAA,GAcAD,mBAAS,KAdTK,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAc7BmT,EAd6BlT,EAAA,GAcjBmT,EAdiBnT,EAAA,GAAAC,EAeEN,mBAAS,GAfXO,EAAAjL,OAAA4K,EAAA,EAAA5K,CAAAgL,EAAA,GAe7BmT,EAf6BlT,EAAA,GAehBmT,EAfgBnT,EAAA,GAmGxC,OAjEIoT,YAAW,IAAI,kBAAMD,EAAe,SAAAE,GAAK,OAAIA,EAAO,MAEpD9N,oBAAU,WACNjJ,QAAQC,IAAI,eAAe8V,GAC3Bc,EAAe,SAAAE,GAAK,OAAIA,EAAO,KAahC,CAAChB,EAAYF,IAEhB5M,oBAAU,WACNjJ,QAAQC,IAAI,sBAAwB2W,GAEjCA,IACCP,GAAW,GACXM,EAAc,IACdH,EAAYnZ,KAAKuP,UAEtB,CAACgK,IAGJ3N,oBAAU,WAEN,IAAI+N,EAAa,IAAIlL,KAAK2J,GAC1BzV,QAAQC,IAAI,gBAAiB+W,EAAWC,UACxC,IAAIC,EAAc,IAAIpL,KAAKA,KAAKqL,IAAIH,EAAWI,iBAAkBJ,EAAWK,cAAeL,EAAWM,eAGlGC,EAAc,IAAIzL,KAAKoL,EAAW3J,WAAY0J,SAC9CO,EAAY,IAAI1L,KAAKoL,EAAW3J,UAAYkJ,EAAa,KAAOQ,SAEpEjX,QAAQC,IAAI,kBAAkBsX,EAAa,KAAOC,GAElD,IAAIC,EAAgBf,EAEhBe,EAAc9H,QAAQ4H,GACtBE,EAAcpX,KAAKkX,GACfE,EAAcnb,OAAS,GAEvB0D,QAAQC,IAAI,mCAEhB0W,EAAcc,GACdvB,EAAY,CACRhJ,MAAOqK,EACPG,IAAKF,IAEThB,EAAYnZ,KAAKuP,SAKtB,CAAC6I,IAKD,CAAEE,GDjCQgC,GA9DoB5T,GAAAtL,OAAA4K,EAAA,EAAA5K,CAAAud,EAAA,MAgEI7S,mBAAS,OAhEbgB,EAAA1L,OAAA4K,EAAA,EAAA5K,CAAAsL,EAAA,GAgEzB6T,EAhEyBzT,EAAA,GAgEd0T,EAhEc1T,EAAA,GA4NjC,OAnJA8E,oBAAU,WACN,IAAM6O,EAAQ,eAAAC,EAAAtf,OAAAuf,EAAA,EAAAvf,CAAAwf,EAAAtK,EAAAuK,KAAG,SAAAC,EAAO1S,EAAI2S,GAAX,IAAAC,EAAAC,EAAAjI,EAAAK,EAAA6H,EAAA,OAAAN,EAAAtK,EAAA6K,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZvD,GAAW,GAEZiD,GADIA,EAAS5S,GACGmT,QAAQ,eAAeR,GACvCpY,QAAQC,IAAI,WAAWoY,GACnBC,EAAS,CAACO,aAAa,EAAGC,WAAW,EAAGC,aAAa,GAL5CN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAQcK,MAAMX,EAAQ,CAACY,KAAM,OAAQC,YAAa,YARxD,cAQH7I,EARGoI,EAAAU,KAAAV,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAWctI,EAASK,OAXvB,QAWCA,EAXD+H,EAAAU,KAYCZ,EAAuB,YAAZ1C,EAAwBhC,EAAenD,GAAQN,EAAcM,GAE9E4H,EAAS,CACLO,aAAiD,MAAnCN,EAAQ7L,WAAWgH,aAAuB,EAAIpT,OAAOiY,EAAQ7L,WAAWgH,cACtFoF,WAAaxY,OAAOiY,EAAQ7L,WAAWiH,YACvCoF,aAAezY,OAAOiY,EAAQ7L,WAAWkH,eAE7C5T,QAAQC,IAAIqY,GAGTA,EAAOO,aAAa,GAAG3D,EAAkBqD,GAExCD,EAAOQ,WAAaR,EAAOS,aAAe1b,KAAKC,IAAIgb,EAAOO,aAhD5D,OAiDE7Y,QAAQC,IAAI,mBACZqV,GAAa,GACbwC,EAASrS,EAAK6S,EAAOQ,WAAaR,EAAOS,eAEzC3D,GAAW,GA7BVqD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAiCLzY,QAAQC,IAAI,2BACZD,QAAQC,IAARwY,EAAAW,IACAhE,GAAW,GAnCN,QAAAqD,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAY,GAAAZ,EAAA,SAsCTzY,QAAQC,IAAI,8BACZD,QAAQC,IAARwY,EAAAY,IACAjE,GAAW,GAxCF,yBAAAqD,EAAAjL,SAAA2K,EAAA,yBAAH,gBAAAmB,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA7gB,KAAA8gB,YAAA,GA4CX7B,GAECE,EAASF,EAAU7C,EAAYc,GAAS6D,mBAE7C,CAAC9B,IAGJ3O,oBAAU,WACNjJ,QAAQC,IAAI,kBAAkB4V,GAC9B,IAoDI8D,EAAkB,GApDH,CACf,CACIC,KAAM,KAENC,YAAa,mPACb1U,KAAM,qBACNuU,iBAAkB,EAClBI,QAAS,wCACTC,QAAU,0CAEd,CACIH,KAAM,MACNC,YAAa,wPACb1U,KAAM,0BACNuU,iBAAkB,EAClBI,QAAS,wCACTC,QAAU,0CAEd,CACIH,KAAM,MACNC,YAAa,wPACb1U,KAAM,0BACNuU,iBAAkB,EAClBI,QAAS,wCACTC,QAAU,0CAEd,CACIH,KAAM,KACNC,YAAa,mTACb1U,KAAM,kCACNuU,iBAAkB,EAClBI,QAAS,wCACTC,QAAU,0CAEd,CACIH,KAAM,MACNC,YAAa,oUACb1U,KAAM,iBACNuU,iBAAkB,EAClBI,QAAS,wCACTC,QAAU,0CAEd,CACIH,KAAM,UACNC,YAAa,4IACbH,iBAAkB,EAClBvU,KAAM,iBACN2U,QAAS,oCACTC,QAAU,uCAKL5e,IAAI,SAACoV,GAAQoJ,EAAgBpJ,EAAKqJ,MAAMrJ,IACrDyE,EAAe2E,IAGhB,IAIH1Q,oBAAU,WAIN,GAHAjJ,QAAQC,IAAI,YAAY4V,GACxB7V,QAAQC,IAAI,YAAY4V,EAAS,eAAgBF,EAASzI,MAAM,IAAMyI,EAAS+B,IAAM,gBAAgB3B,GAElGF,GAAWJ,EAGN,IACI,IAAIhQ,EA/LH,SAAAjD,GAA6C,IAA3CoX,EAA2CpX,EAA3CoX,KAAMjS,EAAqCnF,EAArCmF,QAASuF,EAA4B1K,EAA5B0K,MAAOwK,EAAqBlV,EAArBkV,IASjCsC,GATsDxX,EAAhBsW,WAS7B/D,EAAY6E,IACrBvB,EAAS2B,EAAOH,YA+BpB,OApBIxB,EAND1Q,EAAQrL,OAAS,GAKhB+b,EAASA,EAAOO,QAAQ,YAAajR,IACrBiR,QAAQoB,EAAOF,QAAS,KAYxCzB,GADAA,EAASA,EAAOO,QAAQoB,EAAOD,QAAS,KACxBnB,QAAQ,UAAW1L,IACnB0L,QAAQ,QAASlB,GA6JfuC,CAAS,CACfL,KAAM/D,EACNlO,QAASoO,EACT7I,MAAOyI,EAASzI,MAChBwK,IAAK/B,EAAS+B,MAKlBpC,GAAa,GACbuC,EAAapS,GAEf,MAAMU,GACJnG,QAAQC,IAAI,uBACZD,QAAQC,IAAIkG,KAQzB,CAAC0P,EAASE,EAAYJ,EAASzI,QAE3B,CAAC+H,iBAAgBE,UAASE,aE/NtB,SAAS6E,EAAT1X,GAAoE,IAArDC,EAAqDD,EAArDC,GAAIE,EAAiDH,EAAjDG,KAAMD,EAA2CF,EAA3CE,KAAME,EAAqCJ,EAArCI,IAAKC,EAAgCL,EAAhCK,UAAWC,EAAqBN,EAArBM,WAAYC,EAASP,EAATO,MAASoX,EAY/E5X,EAAO,CACPE,GAAIA,EACJE,KAAMA,EACND,KAAMA,EACNE,IAAKA,EACLC,UAAWA,EACXC,WAAYA,EACZC,MAAOA,IAhBPqB,EAH+E+V,EAG/E/V,SACAmI,EAJ+E4N,EAI/E5N,WACAF,EAL+E8N,EAK/E9N,cAEAkD,GAP+E4K,EAM/EhL,OAN+EgL,EAO/E5K,kBACAF,EAR+E8K,EAQ/E9K,iBACAD,EAT+E+K,EAS/E/K,gBACAc,EAV+EiK,EAU/EjK,YACAZ,EAX+E6K,EAW/E7K,QAYFwH,YAAW,IAAIvH,GACfuH,YAAW,IAAIzH,GACfyH,YAAW,IAAI1H,GACf0H,YAAW,IAAI5G,GACf4G,YAAW,IAAIzK,GACfyK,YAAW,IAAI,SAACsD,GAAD,OAAS/D,GAAY+D,KA5B6C,IAAAC,EA+BnCvF,IAAtCG,EA/ByEoF,EA+BzEpF,eAAgBE,EA/ByDkF,EA+BzDlF,QAASE,EA/BgDgF,EA+BhDhF,UA/BgDE,EAgCvDC,oBAAU,eAhC6CE,GAAAjd,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,MAiC1DC,oBAAU,aAjCgDI,GAAAnd,OAAA4K,EAAA,EAAA5K,CAAAid,EAAA,MAoCjDF,oBAAU,YApCuC8E,EAAA7hB,OAAA4K,EAAA,EAAA5K,CAAAmd,EAAA,GAoCzEgD,EApCyE0B,EAAA,GAoC/DjE,EApC+DiE,EAAA,GAAAxE,EAqC3DN,oBAAU,WAAxB+E,EArCyE9hB,OAAA4K,EAAA,EAAA5K,CAAAqd,EAAA,MAAAK,EAsCvCX,oBAAU,gBAtC6BY,EAAA3d,OAAA4K,EAAA,EAAA5K,CAAA0d,EAAA,GAsCzEqE,EAtCyEpE,EAAA,GAsC1DqE,EAtC0DrE,EAAA,GAAAE,EAuCrCd,oBAAU,iBAvC2Be,EAAA9d,OAAA4K,EAAA,EAAA5K,CAAA6d,EAAA,GAuCzEoE,EAvCyEnE,EAAA,GAuCzDoE,EAvCyDpE,EAAA,GAAAqE,EAwC/CpF,oBAAU,YAxCqCqF,EAAApiB,OAAA4K,EAAA,EAAA5K,CAAAmiB,EAAA,GAwCzEE,EAxCyED,EAAA,GAwC9DE,EAxC8DF,EAAA,GAAAG,EA0CpDxF,oBAAU,eAA7ByF,EA1CuExiB,OAAA4K,EAAA,EAAA5K,CAAAuiB,EAAA,MAAAE,EA2CpD1F,oBAAU,eAA7B2F,EA3CuE1iB,OAAA4K,EAAA,EAAA5K,CAAAyiB,EAAA,MAAAE,EA4CnD5F,oBAAU,gBAA9B6F,EA5CuE5iB,OAAA4K,EAAA,EAAA5K,CAAA2iB,EAAA,MAAAE,EA6C3C9F,oBAAU,cA7CiC+F,GAAA9iB,OAAA4K,EAAA,EAAA5K,CAAA6iB,EAAA,GA6C7DE,IA7C6DD,GAAA,GAAAA,GAAA,IAAAE,GA8CnCjG,oBAAU,kBA9CyBkG,GAAAjjB,OAAA4K,EAAA,EAAA5K,CAAAgjB,GAAA,GA8CzDE,IA9CyDD,GAAA,GAAAA,GAAA,IAmDjFzS,oBAAU,WACR,GAAGgM,EAAgB,CACdI,GAAWhJ,IACdrM,QAAQC,IAAI,kBACVD,QAAQC,IAAIgV,GACZ,IACE1I,EAAW0I,EAAesF,GAC1B,MAAOtS,GACPjI,QAAQC,IAAI,4BACZD,QAAQC,IAAIgI,MAIlB,CAACgN,EAAgBI,IAEnBpM,oBAAU,WACRjJ,QAAQC,IAAI,YAAc2Y,IAC1B,CAACA,IAEH3P,oBAAU,WAERoG,EAAiBqL,IACjB,CAACA,IAEHzR,oBAAU,WACRmG,EAAgBoL,IAChB,CAACA,IAEHvR,oBAAU,WACRiH,EAAY4K,IACZ,CAACA,IAGH7R,oBAAU,WACRoN,EAAWlB,IACX,CAACA,IAEHlM,oBAAU,WACRgS,EAAe7W,EAASJ,UACxBqX,EAAgBjX,EAAS9I,WACzB6f,EAAe/W,EAAS5I,WACxB,CAAC4I,EAAS9I,UAAU8I,EAAS5I,SAAU4I,EAASJ,WAUlDiF,oBAAU,WACRuS,GAAcpX,EAASH,MAEvB,CAACG,EAASH,MAEZgF,oBAAU,WAGR0S,GAAkBvX,EAASF,cAC3B,CAACE,EAASF,cAIZ+E,oBAAU,WAERqG,EAAQiL,IACR,CAACA,IAEHtR,oBAAU,WACR0R,EAAiB7X,GACjB2X,EAAgB5X,GAChBkY,EAAYhY,IAEZ,IAWJ,OACI6Y,EAAAjO,EAAAhM,cAAA,UAAQc,GAAIA,EAAIoZ,MATH,CACbC,WAAY,UACZ/T,SAAU,QACVpL,MAAO,UACPE,OAAQ,oBCrGGkf,MA9Bf,WAA2B,IAAAxG,EAGSC,oBAAU,WAHnBwG,EAAAvjB,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,GAGN0G,GAHMD,EAAA,GAAAA,EAAA,IAgBvB,OAZAlF,YAAW,IAAI,WAAKmF,EAAW,QAC/BnF,YAAW,IAAI,WAAKmF,EAAW,SAC/BnF,YAAW,IAAI,WAAKmF,EAAW,QAC/BnF,YAAW,IAAI,WAAKmF,EAAW,SAC/BnF,YAAW,IAAI,WAAKmF,EAAW,aAS3BC,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,mBACXD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,UAASD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,cAAcC,UAAU,QAAQ/V,IAAI,wBAAwBzD,IAAI,GAAGyZ,QAAS,kBAAMJ,EAAW,UACpIC,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,UAASD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,cAAcC,UAAU,QAAQ/V,IAAI,wBAAwBzD,IAAI,GAAGyZ,QAAS,kBAAMJ,EAAW,WACpIC,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,UAASD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,cAAcC,UAAU,QAAQ/V,IAAI,wBAAwBzD,IAAI,GAAGyZ,QAAS,kBAAMJ,EAAW,WACpIC,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,UAASD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,cAAcC,UAAU,QAAQ/V,IAAI,wBAAwBzD,IAAI,GAAGyZ,QAAS,kBAAMJ,EAAW,UACpIC,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,UAASD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,cAAcC,UAAU,QAAQ/V,IAAI,yBAAyBzD,IAAI,GAAGyZ,QAAS,kBAAMJ,EAAW,WACrIC,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,UAASD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,cAAcC,UAAU,QAAQ/V,IAAI,yBAAyBzD,IAAI,GAAGyZ,QAAS,kBAAMJ,EAAW,wBCKlIK,MA5Bf,WAAuB,IAAA/G,EAGyBC,oBAAU,iBAHnCwG,EAAAvjB,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,GAGXmF,EAHWsB,EAAA,GAGIrB,EAHJqB,EAAA,GAAAtG,EAIuBF,oBAAU,gBAJjCS,EAAAxd,OAAA4K,EAAA,EAAA5K,CAAAid,EAAA,GAIX8E,EAJWvE,EAAA,GAIGwE,EAJHxE,EAAA,GAAAL,EAKeJ,oBAAU,YALzB8E,EAAA7hB,OAAA4K,EAAA,EAAA5K,CAAAmd,EAAA,GAKXkF,EALWR,EAAA,GAKDS,EALCT,EAAA,GAkBnB,OACIsB,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,eACXP,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,gBAAeP,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,UAAUC,UAAU,QAAO/V,IAAI,0BAA0BzD,IAAI,GAAGyZ,QAAS,kBAAM1B,GAAkBD,OAC9IkB,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,gBAAeP,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,UAAUC,UAAU,QAAO/V,IAAI,yBAAyBzD,IAAI,GAAGyZ,QAAS,kBAAM5B,GAAiBD,OAC5IoB,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,gBAAeP,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,UAAUC,UAAU,QAAO/V,IAAI,qBAAqBzD,IAAI,GAAGyZ,QAAS,kBAAMtB,GAAaD,mGCwBjIyB,MA/Cf,WAAyB,IAAAhH,EAEKC,oBAAU,eAA5BgH,EAFa/jB,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,MAAAG,EAGyBF,oBAAU,kBAHnCS,EAAAxd,OAAA4K,EAAA,EAAA5K,CAAAid,EAAA,GAGb+G,EAHaxG,EAAA,GAAA/S,GAAA+S,EAAA,GAKK9S,mBAAS,KALdC,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAKdwZ,EALctZ,EAAA,GAKPuZ,EALOvZ,EAAA,GAAAG,EAMOJ,oBAAS,GANhBK,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAMdqZ,EANcpZ,EAAA,GAMNqZ,EANMrZ,EAAA,GAiCrB,OAzBAsT,YAAW,IAAI,WAAK+F,EAAU,SAAAD,GAAM,OAAKA,MAEzC3T,oBAAU,WAYN0T,EAASF,IACT,CAACA,IAWDb,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,iBACXP,EAAAjO,EAAAhM,cAAA,OAAKka,MAAO,CAACiB,SAAU,KAClBJ,EAAMvhB,IAAK,SAAAoV,GAAI,OAAIqL,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,WAAWY,IAAKxM,EAAK5K,eAAeR,MAAOoL,EAAK5K,eAAeR,KAAKyW,EAAAjO,EAAAhM,cAAA,OAAKwa,UAAU,YAAYN,MAAO,CAACmB,QAASJ,EAAO,SAAS,QAASvW,IAAKkK,EAAK5K,eAAeC,aAAchD,IAAI,SAE3NgZ,EAAAjO,EAAAhM,cAAA,WAAOtE,KAAKgB,KAAKme,EAAc,KAAO,gBCxBnCS,MAjBf,SAAAza,GAAgD,IAA5BqO,EAA4BrO,EAA5BqO,KAAMqM,EAAsB1a,EAAtB0a,UAAWC,EAAW3a,EAAX2a,SAGjC,OACIjB,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,kBACXD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,QACXD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAuB,QAAZe,GAAiC,SAAZA,EAAmB,WAAW,qBAAuBH,IAAI,OAASK,IAAWvM,EAAK,WACvHqL,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,aACXD,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAuB,UAAZe,GAAmC,SAAZA,EAAmB,cAAc,wBAA0BH,IAAI,SAAUK,IAAWvM,EAAK,WAAWwM,eAC3InB,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAuB,SAAZe,GAAkC,SAAZA,EAAmB,aAAa,sBAAwBH,IAAI,QAASlM,EAAKuG,oBAGxH8E,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAWgB,EAAS,oBAAoB,OAAQJ,IAAI,SACzDb,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAuB,SAAZe,GAAkC,SAAZA,EAAmB,aAAa,sBAAuBH,IAAI,QAASK,IAAWvM,EAAK,0BC8CvHyM,MAxDf,SAAA9a,GAAmD,IAA1B+a,EAA0B/a,EAA1B+a,UAAWC,EAAehb,EAAfgb,aAAeC,ECD5C,SAAAjb,GAAqD,IAAjCkb,EAAiClb,EAAjCkb,UAAqBC,GAAYnb,EAAtBob,SAAsBpb,EAAZmb,UAAYza,EAKhCC,mBAASwa,GALuBva,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAKjD2N,EALiDzN,EAAA,GAK3Cya,EAL2Cza,EAAA,GAAAG,EAM1BJ,oBAAS,GANiBK,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAMjDua,EANiDta,EAAA,GAMxCua,EANwCva,EAAA,GAUlDxK,EAAOiK,mBACP+a,EAAc/a,mBAEpB+a,EAAY5Y,QAAU,IAEtB,IAAM6Y,EAAQhb,mBAGRib,EAAcjb,mBACdkb,EAAalb,mBAuCnB,SAASiK,IACLlN,QAAQC,IAAI,eACRjH,EAAKoM,UAASpM,EAAKoM,QAAU,MACjC8Y,EAAY9Y,QAAUgZ,YAAa,WAC/BH,EAAM7Y,SAAWpM,EAAKoM,QACtByY,EAAQ,IAAI/R,KAAKmS,EAAM7Y,WACzB4Y,EAAY5Y,SACd2Y,GAAW,GAGf,SAASvQ,IACLxN,QAAQC,IAAI,cACTke,EAAW/Y,SAASiZ,aAAaF,EAAW/Y,SAC3C8Y,EAAY9Y,SAASkZ,cAAcJ,EAAY9Y,SACnD2Y,GAAW,GAiDjB,OA1BE9U,oBAAU,WACNjJ,QAAQC,IAAI,uBAAuB0d,EAAS1G,UAEvC6G,GACGtQ,IACJyQ,EAAM7Y,QAAUuY,EAASpQ,UACzBL,KAEA+Q,EAAM7Y,QAAUuY,EAASpQ,WAE9B,CAACoQ,IAKJ1U,oBAAU,WACNjJ,QAAQC,IAAI,mBAEZge,EAAM7Y,SAAU,IAAI0G,MAAOyB,UACvBmQ,GACAxQ,KAGL,IAGE,CAAE2D,OAAMiN,UAASS,YAvEtB,WACQT,EACAtQ,IAEAN,KAmE2BsR,MA7CnC,WACIhR,IACAyQ,EAAM7Y,SAAU,IAAI0G,MAAOyB,UAC3BsQ,EAAQ,IAAI/R,KAAKmS,EAAM7Y,WA0CeqZ,cArF1C,WAEIzlB,EAAKoM,QAAWpM,EAAKoM,QAAU,EAAIpM,EAAKoM,SAAW,EAAEpM,EAAKoM,SAAW,EAClE/H,KAAKkB,IAAIvF,EAAKoM,SAAW4Y,EAAY5Y,UAASpM,EAAKoM,QAAU4Y,EAAY5Y,SAC5EpF,QAAQC,IAAI,SAASjH,EAAKoM,UAiF2BsZ,cA7EzD,WACI1lB,EAAKoM,QAAWpM,EAAKoM,QAAU,EAAIpM,EAAKoM,SAAW,EAAEpM,EAAKoM,SAAW,EAClE/H,KAAKkB,IAAIvF,EAAKoM,SAAW4Y,EAAY5Y,UAASpM,EAAKoM,SAAW,EAAI4Y,EAAY5Y,UA2EbuZ,UArCxE,SAAmBC,GACf5e,QAAQC,IAAI,uBAAuB2e,EAAQ3H,UACxC6G,GACCtQ,IACAyQ,EAAM7Y,QAAUwZ,EAAQrR,UACxBL,KAEA+Q,EAAM7Y,QAAUwZ,EAAQrR,YDhF5BsR,CAAS,CACTnB,WAAW,EACXE,SAAU,IACVD,SAAUJ,IAVV1M,EAH2C4M,EAG3C5M,KAEA0N,EAL2Cd,EAK3Cc,YACAC,EAN2Cf,EAM3Ce,MACAC,EAP2ChB,EAO3CgB,cACAC,EAR2CjB,EAQ3CiB,cAUJ5H,YAAW,IAAIyH,GACfzH,YAAW,IAAI,WAAK0H,MACpB1H,YAAW,IAAI2H,GACf3H,YAAW,IAAI4H,GAKfzV,oBAAU,WAENuU,EAAa3M,IAGf,CAACA,IAEH5H,oBAAU,aAKR,CAACsU,IAtC4C,IAAAra,EAwCjBC,qBAxCiBC,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAwCxC4b,EAxCwC1b,EAAA,GAwC/B2b,EAxC+B3b,EAAA,GAoD/C,OACI8Y,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,iBAAiBE,QAZZ,WACpB,IAAM2C,EAAMlT,KAAKkT,MACbF,GAAYE,EAAMF,EAAW,IAC/BN,KAEEO,EAAWC,GACXT,eEkGGU,MApJf,SAAAzc,GAA0D,IAA9BqO,EAA8BrO,EAA9BqO,KAAMqO,EAAwB1c,EAAxB0c,WAAYC,EAAY3c,EAAZ2c,UAEpCC,EAAQnc,mBAFwCC,EAG5BC,mBAAS0N,GAHmBzN,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAAAK,GAAAH,EAAA,GAAAA,EAAA,GAI1BD,oBAAS,IAJiBK,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAKpBL,mBAAS,KALWO,EAAAjL,OAAA4K,EAAA,EAAA5K,CAAAgL,EAAA,GAK/C4b,EAL+C3b,EAAA,GAKpC4b,EALoC5b,EAAA,GAahD6b,EAAY,SAACC,EAAQC,GAEvB,GAAIL,EAAMha,QAAV,CAmBA,IAjBA,IAIIsa,EAAKC,EAAOC,EAJVC,EAAY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAI/DC,EAAO,EACzBC,EAAS,EACTC,EAAY,EACZC,EAAW,EACXC,EAAW,EACXC,EAAO,GACPC,EAAWX,EAAQ,OACnBY,EAAYZ,EAAQ,MACpBa,EAAUb,EAAQ,KAClBc,EAAed,EAAQ,KACvBe,EAAWf,EAAQ,KAGbrjB,EAAE,EAAIA,EAAIgjB,EAAMha,QAAQqb,aAAerkB,GAAG,EAAI,CACpD,IAAIskB,EAAU,IAAI5U,MAAO1P,EAAGgjB,EAAMha,QAAQqb,aAAa,GAAKhB,EAAQD,EAAOjS,WAC3EmS,EAAMgB,EAAQpJ,aACdqI,EAAQE,EAAUa,EAAQrJ,eAC1BuI,EAAOc,EAAQC,cACfb,EAAOY,EAAQtJ,iBAEXmJ,EACGX,GAAQM,IACK,GAARN,GAAsBA,EAzBR,GAAM,IAyBWY,EAGnB,GAARZ,IACAO,EAAK9f,KAAK,CAACugB,MAAM,SAAUC,IAAKzkB,EAAG0kB,MAAOpB,IAC1CS,EAAK9f,KAAK,CAACugB,MAAM,WAAYC,IAAKzkB,EAAG0kB,MAAOnB,IAC5CQ,EAAK9f,KAAK,CAACugB,MAAM,UAAWC,IAAKzkB,EAAG0kB,MAAOhB,KAL/CK,EAAK9f,KAAK,CAACugB,MAAM,UAAWC,IAAKzkB,EAAG0kB,MAAOlB,KAU5CU,EACJZ,IAAQK,IACI,GAAPL,EACAS,EAAK9f,KAAK,CAACugB,MAAM,SAAUC,IAAKzkB,EAAG0kB,MAAOpB,KAE1CS,EAAK9f,KAAK,CAACugB,MAAM,SAAUC,IAAKzkB,EAAG0kB,MAAOpB,IAC1CS,EAAK9f,KAAK,CAACugB,MAAM,WAAYC,IAAKzkB,EAAG0kB,MAAOnB,IAC5CQ,EAAK9f,KAAK,CAACugB,MAAM,UAAWC,IAAKzkB,EAAG0kB,MAAOhB,MAK5CO,EACJV,IAAUK,GAAsB,GAATD,GAAcM,IACtB,QAAVV,EACAQ,EAAK9f,KAAK,CAACugB,MAAM,WAAYC,IAAKzkB,EAAG0kB,MAAOnB,KAE5CQ,EAAK9f,KAAK,CAACugB,MAAM,WAAYC,IAAKzkB,EAAG0kB,MAAOnB,IAC5CQ,EAAK9f,KAAK,CAACugB,MAAM,UAAWC,IAAKzkB,EAAG0kB,MAAOhB,MAI5CM,GACJN,IAASG,GAA0B,IAAdD,IACN,QAAVL,EACAQ,EAAK9f,KAAK,CAACugB,MAAM,WAAYC,IAAKzkB,EAAG0kB,MAAOnB,IAG5CQ,EAAK9f,KAAK,CAACugB,MAAM,UAAWC,IAAKzkB,EAAG0kB,MAAOhB,KAMvDC,EAAUL,EACVO,EAAWH,EACXE,EAAYL,EACZO,EAAWN,EAGf,OAAOO,EAAKhlB,IAAI,SAAAoV,GAAI,OAAiB2L,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAW5L,EAAKqQ,MAAO7D,IAAKxM,EAAKqQ,MAAMrQ,EAAKsQ,IAAKhF,MAAO,CAACrc,IAAI+Q,EAAKsQ,MAAOtQ,EAAKuQ,WA9FtEC,EAsGrBC,YAAU,iBAAO,CAAEC,MAAOpQ,EAAKtD,UAAW2T,OAAQhC,KAtG7BiC,EAAA1oB,OAAA4K,EAAA,EAAA5K,CAAAsoB,EAAA,GAAAK,EAAAD,EAAA,GAsG7CF,EAtG6CG,EAsG7CH,MAAOC,EAtGsCE,EAsGtCF,OAAUG,EAtG4BF,EAAA,GA8ItD,OAvCAG,0BAAgB,WAGZD,EAAI,CACAE,GAAI,CACAL,OAAQhC,EACR+B,MAAOpQ,EAAKtD,WAEhBiU,OAAQ,CAAG5D,SAAU,KACrBuB,WAAW,EACXsC,QAAS,WAGLnC,EAAaC,EAAU,IAAIzT,KAAKmV,EAAMS,OAAOR,EAAOQ,YAI9D,CAAExC,IAEJoC,0BAAgB,WAGZD,EAAI,CACAE,GAAI,CACAL,OAAQhC,EACR+B,MAAOpQ,EAAKtD,WAEhBiU,OAAQ,CAAG5D,SAAU,KACrBuB,UAAWA,EACXsC,QAAS,WAGLnC,EAAaC,EAAU,IAAIzT,KAAKmV,EAAMS,OAAOR,EAAOQ,YAI9D,CAAC7Q,IAICqL,EAAAvO,EAAAhM,cAACggB,EAAA,EAASC,IAAV,CAAcC,IAAKzC,EAAOjD,UAAU,qBAC/BkD,ICUEyC,MArJf,SAAAtf,GAAoE,IAA7C+a,EAA6C/a,EAA7C+a,UAAWC,EAAkChb,EAAlCgb,aAAcuE,EAAoBvf,EAApBuf,kBACtCC,EAAW,CAAE,KAAc,MAAe,QAC1CC,EAAa,CAAE,KAAa,IAAY,MAAa,KAAS,OAG9DC,EAAWjf,mBACXqL,EAASrL,mBACXqL,EAAOlJ,UAASkJ,EAAOlJ,QAAU,CAAC,EAAG,IAEhBnC,mBAAzB,IACMkf,EAAelf,mBAV2CC,EAc7BC,mBAASoa,GAdoBna,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAczDkf,EAdyDhf,EAAA,GAc9Cif,EAd8Cjf,EAAA,GAAAG,EAepBJ,mBAASoa,GAfW/Z,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAezD+e,EAfyD9e,EAAA,GAe1C+e,EAf0C/e,EAAA,GAAAC,EAiB/BN,mBAASoa,GAjBsB7Z,EAAAjL,OAAA4K,EAAA,EAAA5K,CAAAgL,EAAA,GAiBzD+e,EAjByD9e,EAAA,GAiB/C+e,EAjB+C/e,EAAA,GAAAG,EAoBnCV,oBAAS,GApB0BW,EAAArL,OAAA4K,EAAA,EAAA5K,CAAAoL,EAAA,GAoBzD6e,EApByD5e,EAAA,GAoBjD6e,EApBiD7e,EAAA,GAAAC,EAuB3BZ,mBAAS6e,EAAS,IAvBS7d,EAAA1L,OAAA4K,EAAA,EAAA5K,CAAAsL,EAAA,GAuBzDmb,EAvByD/a,EAAA,GAuB7Cye,EAvB6Cze,EAAA,GAAAI,EAwB7BpB,mBAAS+b,GAxBoB1a,EAAA/L,OAAA4K,EAAA,EAAA5K,CAAA8L,EAAA,GAAAG,GAAAF,EAAA,GAAAA,EAAA,GAyB7BrB,oBAAS,IAzBoBwB,EAAAlM,OAAA4K,EAAA,EAAA5K,CAAAiM,EAAA,GAAAqc,GAAApc,EAAA,GAAAA,EAAA,GA4B1Cqc,YAAU,iBAAO,CAAE6B,GAAI,CAAC,EAAE,OA5BgB1B,EAAA1oB,OAAA4K,EAAA,EAAA5K,CAAAsoB,EAAA,GA4BvD8B,EA5BuD1B,EAAA,GA4BvD0B,GAAMxB,EA5BiDF,EAAA,GA8B5DgB,EAAa/c,UACb+c,EAAa/c,QAAUmY,GAG3B,IAAMuF,EAAOC,YAAW,CAEpBC,OAAQ,SAAAjL,GAKF,IAIEkL,EACAC,EAVIC,EAKNpL,EALMoL,MAAOC,EAKbrL,EALaqL,MAAOC,EAKpBtL,EALoBsL,KAAMC,EAK1BvL,EAL0BuL,MAAOC,EAKjCxL,EALiCwL,SAAUC,EAK3CzL,EAL2CyL,UAK3CC,EAAA1L,EALsD2L,YAKtD,IAAAD,EAL6D,CAC/DZ,GAAIA,EAAGc,WACPC,aAAc,EACdC,YAAa,CAAC,EAAE,IAEdJ,EACEK,EAAU5B,EAAS9c,QAAQ2e,cAAcC,aAAeb,EAAMc,MAAMd,EAAMc,MAAM/B,EAAS9c,QAAQ2e,cAAcC,aAyEnH,OAxEeb,EAAMe,MAAMf,EAAMe,MAAMhC,EAAS9c,QAAQ2e,cAActD,cAAgByB,EAAS9c,QAAQqb,aAAa,EAKvG,GACTwC,EAAW5lB,KAAKC,IAAI0kB,EAAS1lB,OAAO,EAAEe,KAAK8mB,OAAOL,EAAQ5B,EAAS9c,QAAQ4e,aAAa,GAAG,IAG3Fd,EAAOlB,EADPiB,GADAA,EAAYA,EAAWjB,EAAS1lB,OAAO,EAAG0lB,EAAS1lB,OAAO2mB,GACnC,EAAG,EAAEA,KAG5BA,EAAW5lB,KAAKC,IAAI2kB,EAAW3lB,OAAO,EAAEe,KAAK8mB,OAAOL,EAAQ5B,EAAS9c,QAAQ4e,aAAa,GAAG,IAG7Fd,EAAOjB,EADPgB,GADAA,EAAYA,EAAWhB,EAAW3lB,OAAO,EAAG2lB,EAAW3lB,OAAO2mB,GACvC,EAAG,EAAEA,IAc5BA,IAAaS,EAAKE,eAElBhB,EAAcM,GACdT,EAAYL,GACZsB,EAAKE,aAAeX,EACpBS,EAAKb,GAAK,CAAC,EAAE,GACba,EAAKG,YAAcP,GAInBF,GAAOT,GAAU,GAErBY,EAAYlmB,KAAKkB,IAAIglB,GAAU,GAAI,EAAEA,EAGrClC,EAAI,CAEAwB,GAAIuB,cAAIhF,gBAAMgF,cAAIC,cAAIf,EAAMI,EAAKG,aAAavV,EAAOlJ,SA1B9C,GA0B8Dse,EAAKb,IAC1E1D,UAAWkE,EACX7B,OAAQ,CAAE+B,SAAUnE,gBAAMoE,EA5BnB,EA4B8BD,GAAgBe,OAAO,GAK5D7C,QAAS,WACL,IAAI7C,EAAU,IAAI9S,KAAK0W,EAASjV,UAAYsV,EAAGc,WAAW,GAAKzE,GAC/D1B,EAAaoB,GACbyD,EAAazD,GACb2D,EAAkB3D,GAClBuD,EAAa/c,QAAUwZ,GAK3B2F,OAAQ,WACJ,IAAKlB,EAAM,CAEPV,GAAU,GACV,IAAI/D,EAAU,IAAI9S,KAAK0W,EAASjV,UAAYsV,EAAGc,WAAW,GAAKzE,GAC/D6C,EAAkBnD,GAClBtQ,EAAOlJ,QAAU,CAAC,EAAE,OAKzBse,KAkBf,OAbAza,oBAAU,WAGFyZ,IACApU,EAAOlJ,QAAQ,KAAOmY,EAAUhQ,UAAY+U,EAAc/U,WAAc2R,EAExEmD,EAAa9E,GACbgF,EAAkBhF,GAClBC,EAAaD,KAEnB,CAACA,IAICrB,EAAAvO,EAAAhM,cAACggB,EAAA,EAASC,IAAVnpB,OAAAqY,OAAA,GAAkBgS,IAAlB,CAA0B3G,UAAU,eAAe0F,IAAKK,IACpDhG,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,QAEXD,EAAAvO,EAAAhM,cAAC6iB,EAAD,CAAmBrI,UAAU,QAAQtL,KAAMuR,EAAWlD,WAAYA,EAAYC,UAAWuD,IAEzFxG,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,qBACXD,EAAAvO,EAAAhM,cAAA,OAAK9E,OAAO,KAAKF,MAAM,KAAKwf,UAAU,YAClCD,EAAAvO,EAAAhM,cAAA,WAASzG,OAAO,0BCzGzBupB,MAvCf,SAAAjiB,GAA8E,IAAxD+a,EAAwD/a,EAAxD+a,UAAWC,EAA6Chb,EAA7Cgb,aAAcuE,EAA+Bvf,EAA/Buf,kBAAmB2C,EAAYliB,EAAZkiB,UAAYxhB,EAExBC,mBAASoa,GAFena,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAEnEyhB,EAFmEvhB,EAAA,GAEhDwhB,EAFgDxhB,EAAA,GAAAG,EAGpBJ,mBAASoa,GAHW/Z,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAGnEshB,EAHmErhB,EAAA,GAG9CshB,EAH8CthB,EAAA,GAAAC,EAIxCN,mBAASoa,GAJ+B7Z,EAAAjL,OAAA4K,EAAA,EAAA5K,CAAAgL,EAAA,GAInEshB,EAJmErhB,EAAA,GAIxDshB,EAJwDthB,EAAA,GA+B1E,OAPAuF,oBAAU,WAEN2b,EAAqBrH,IACvB,CAACA,IAKCrB,EAAAvO,EAAAhM,cAAA,WACEua,EAAAvO,EAAAhM,cAACsjB,EAAD,CAAgB1H,UAAWsH,EAAqBrH,aAdnB,SAAC3M,GAEhC+T,EAAqB/T,MAanBqL,EAAAvO,EAAAhM,cAACujB,EAAD,CAAWrU,KAAMkU,EAAW7H,UAAU,OAAOC,SAAUuH,IACvDxI,EAAAvO,EAAAhM,cAACwjB,EAAD,CAAc5H,UAAWoH,EAAmBnH,aA7BjB,SAAC3M,GAE9BmU,EAAanU,GACb2M,EAAa3M,IA0ByEkR,kBAtBpD,SAAClR,GAEnCiU,EAAuBjU,GACvBkR,EAAkBlR,eCkCXuU,MAhDf,WAAiB,IAAA7P,EAEeC,oBAAU,SAFzBwG,EAAAvjB,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,GAEL8P,EAFKrJ,EAAA,GAEEsJ,EAFFtJ,EAAA,GAAA9Y,EAGiBC,oBAAS,GAH1BC,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAGLwf,EAHKtf,EAAA,GAGGuf,EAHHvf,EAAA,GAAAG,EAIuBJ,mBAAS,IAJhCK,EAAA/K,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,GAILgiB,EAJK/hB,EAAA,GAIMgiB,EAJNhiB,EAAA,GAoCb,OA7BAsT,YAAW,IAAI,WAAK6L,EAAU,SAAAD,GAAM,OAAKA,MAEzCzZ,oBAAU,WACNjJ,QAAQC,IAAI,yBACb,IAEHgJ,oBAAU,WACN,GAAGyZ,EAAQ,CACP1iB,QAAQC,IAAI,eACZD,QAAQC,IAAIolB,GACZ,IAAII,EAAQF,EACZE,EAAMJ,EAAM,IAAMA,EAAM,GACxBG,EAAcC,GACdzlB,QAAQC,IAAIwlB,KAEjB,CAACJ,IAGJpc,oBAAU,WACNqc,EAAU,CAAC,KAAK,KACjB,IAUCpJ,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,QAAQN,MAAO,CAACmB,QAAU0F,EAAQ,SAAS,OAAQ/lB,MAAO,OAAQE,OAAO,SAEpFqf,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,aACXD,EAAAvO,EAAAhM,cAAA,UACK4jB,EAAUpqB,IAAI,SAAAoV,GAAI,OAAE2L,EAAAvO,EAAAhM,cAAA,MAAIob,IAAKxM,EAAKA,EAAK,GAAG,IAAKA,GAAU,qBC1C/D,SAASmV,EAAWC,GAAO,IAAApQ,EAEfC,oBAAU,SAAvB8P,EAF4B7sB,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,MAAArS,EAIRC,oBAAS,GAJDC,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAI/B0iB,EAJ+BxiB,EAAA,GAItByiB,EAJsBziB,EAAA,GAAA2d,EAKhBC,YAAU,iBAAO,CAAE6B,GAAI,CAAC,EAAG,MALX1B,EAAA1oB,OAAA4K,EAAA,EAAA5K,CAAAsoB,EAAA,GAK7B8B,EAL6B1B,EAAA,GAK7B0B,GAAMxB,EALuBF,EAAA,GAOhC2E,EAAa7iB,mBAEb8iB,EAAS,WACXT,EAAS,CAAC,gBAAgBM,EAAQ,IAAIE,EAAW1gB,QAAQ4e,YAAY,IACrE3C,EAAI,CAAEwB,GAAK+C,EAAc,CAACE,EAAW1gB,QAAQ4e,YAAY,GAAtC,CAAC,EAAE,GAAuC7E,WAAW,IACxE0G,EAAW,SAAAD,GAAO,OAAKA,KAG3B3c,oBAAU,WACNqc,EAAS,CAAC,YAAYM,EAAQ,KAEhC,CAACA,IAEH3c,oBAAU,WACN8C,WAAWga,EAAO,MAEpB,IAEF,IAAMjD,EAAOC,YAAW,CACpBC,OAAQ,SAAAxgB,GAA0G,IAAtG4gB,EAAsG5gB,EAAtG4gB,MAAQD,EAA8F3gB,EAA9F2gB,MAAOK,EAAuFhhB,EAAvFghB,UAAWD,EAA4E/gB,EAA5E+gB,SAAUF,EAAkE7gB,EAAlE6gB,KAAOC,EAA2D9gB,EAA3D8gB,MAAO0C,EAAoDxjB,EAApDwjB,KAAoDC,EAAAzjB,EAA9CkhB,YAA8C,IAAAuC,EAAzC,CAACC,WAAY,GAAIrD,GAAIA,EAAGc,YAAiBsC,EAI9G,GADG7C,IAAOM,EAAKwC,WAAa/C,EAAMnJ,OAAOmM,aAAa,UAChC,gBAAnBzC,EAAKwC,WAAR,CACA,GAAG7C,EACChC,EAAI,CAAEwB,GAAIuB,cAAIV,EAAKb,GAAGS,GAAQnE,WAAW,SAGzC,GAAG6G,EAAK,GAAK,GAAK,CACY5G,gBAAMoE,EAAWD,GAC3C+B,EAAS,CAAC,YAAYM,EAAQ,IAC9BvE,EAAI,CAAEwB,GAAI,CAACiD,EAAW1gB,QAAQ4e,YAAY,GAAI7E,WAAW,IACzD0G,GAAW,QAEXxE,EAAI,CAAEwB,GAAIa,EAAKb,GAAI1D,WAAW,IAGtC,OAAOuE,KAmBX,CAAEP,MAAO,CAAEiD,SAAS,KAGxB,OACIlK,EAAAvO,EAAAhM,cAAA,WACIua,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,OAAOC,UAAU,QAAQ/V,IAAKsf,EAAMU,SAAUzjB,IAAI,GAAIyZ,QAAS0J,IAE9E7J,EAAAvO,EAAAhM,cAACggB,EAAA,EAASC,IAAVnpB,OAAAqY,OAAA,GAAkBgS,IAAlB,CAA0BjB,IAAKiE,EAAY3J,UAAU,eAAeN,MAAO,CAAEyK,UAAWzD,EAAG0D,YAAY,SAAClrB,EAAGE,GAAJ,qBAAAwR,OAAyB1R,EAAzB,gBAC9FsqB,EAAMa,+BC5CZC,MAzBf,WAAuB,IAAAlR,EAGeC,oBAAU,YAHzBwG,EAAAvjB,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,GAGXmR,EAHW1K,EAAA,GAenB,OAfmBA,EAAA,GAgBfE,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,iBACXD,EAAAvO,EAAAhM,cAACglB,EAAA,UAAD,CAAWC,MAAOF,EAAUG,iBARP,SAACD,GAC1BllB,SAASolB,gBAAgBjL,MAAMkL,YAAY,UAAWH,EAAMI,UCiIrDC,GA7HH,WAAM,IAAA/jB,EAEeC,oBAAS,GAFxBC,EAAA3K,OAAA4K,EAAA,EAAA5K,CAAAyK,EAAA,GAETgkB,EAFS9jB,EAAA,GAEG+jB,EAFH/jB,EAAA,GAIZua,EAAW,IAAI7R,KAJHvI,EAKMJ,mBAASwa,GAAxBJ,EALS9kB,OAAA4K,EAAA,EAAA5K,CAAA8K,EAAA,MAAAgS,EAOOC,oBAAU,aAAzBkP,EAPQjsB,OAAA4K,EAAA,EAAA5K,CAAA8c,EAAA,MAAAG,EAUgBF,oBAAU,WAV1BS,EAAAxd,OAAA4K,EAAA,EAAA5K,CAAAid,EAAA,GAUC0R,GAVDnR,EAAA,GAAAA,EAAA,IAAAL,EAWUJ,oBAAU,eAA3B6R,EAXO5uB,OAAA4K,EAAA,EAAA5K,CAAAmd,EAAA,MAAAE,EAgBgBN,oBAAU,WAhB1B8R,EAAA7uB,OAAA4K,EAAA,EAAA5K,CAAAqd,EAAA,GAgBRD,EAhBQyR,EAAA,GAAAA,EAAA,GAiBdre,oBAAU,WACNjJ,QAAQC,IAAI,uBAAwB4V,IACrC,CAACA,IAEJ,IArBcpS,EAgCgBN,oBAAS,GAhCzBO,EAAAjL,OAAA4K,EAAA,EAAA5K,CAAAgL,EAAA,GAgCC8jB,GAhCD7jB,EAAA,GAAAA,EAAA,IAkChBoT,YAAW,IAAI,WACbyQ,EAAY,SAAAC,GACR,OAASA,MAKfve,oBAAU,WAER,IAAMwe,EAAU,WACd,OAAO,IAAI5hB,QAAQ,SAAAC,GACjBiG,WAAW,WACT,IAAM2b,EAAYrqB,KAAKgB,KAAqB,GAAhBhB,KAAKuP,UACjC5M,QAAQC,IAAI,gBACZ6F,EAAQ4hB,IACP,QARO,SAAAC,IAAA,OAAAA,EAAAlvB,OAAAuf,EAAA,EAAAvf,CAAAwf,EAAAtK,EAAAuK,KAYd,SAAAC,IAAA,OAAAF,EAAAtK,EAAA6K,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACOuO,EADP,CAAAzO,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAE8B8O,IAF9B,OAAAhP,EAAAU,KAGIgO,GAAS,GAHb,wBAAA1O,EAAAjL,SAAA2K,OAZcqB,MAAA7gB,KAAA8gB,YAAA,WAAAkO,EAAAnO,MAAA7gB,KAAA8gB,WAmBdmO,IACC,IA7Da,IAAA/jB,EAkEWV,oBAAS,GAlEpBW,EAAArL,OAAA4K,EAAA,EAAA5K,CAAAoL,EAAA,GAkETgkB,EAlES/jB,EAAA,GAkEFgkB,EAlEEhkB,EAAA,GAAAikB,EAmE2BC,YAAcC,OAAOvmB,SAASwmB,MAAnDC,GAnENJ,EAmERK,aAnEQL,EAmEMI,kBAOtB,OAJArR,YAAW,IAAIqR,GAKbjM,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,OACbD,EAAAvO,EAAAhM,cAAC0mB,EAAA1a,EAAD,CAAYjC,QAASmc,EAAQS,SAAU,WAAYT,GAAQC,GAAU,KAWnE5L,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,SACbD,EAAAvO,EAAAhM,cAACuY,EAAD,CAAKzX,GAAG,QAAQI,UAAU,OAAOC,WAAW,OAAOJ,KAAK,MAAMC,KAAK,KAAKI,MAAM,UAEhFmZ,EAAAvO,EAAAhM,cAAC4mB,EAAD,CAAahL,UAAWA,EAAYmH,UAAWA,EAAWlH,aArE3C,SAACoB,GAElBwI,EAAWxI,EAAQrR,YAmEmEwU,kBAjEhE,SAACnD,GAEvByI,EAAczI,EAAQrR,cAiEpB2O,EAAAvO,EAAAhM,cAAA,OAAKwa,UAAU,gBAAgBtG,GAC/BqG,EAAAvO,EAAAhM,cAAC6mB,EAAD,MACAtM,EAAAvO,EAAAhM,cAAC+jB,EAAD,CAAYhD,OAAO,QAAQ2D,SAAS,+BAClCnK,EAAAvO,EAAAhM,cAAC8mB,EAAD,MACAvM,EAAAvO,EAAAhM,cAAC+mB,EAAD,MACAxM,EAAAvO,EAAAhM,cAACgnB,EAAD,OAGFzM,EAAAvO,EAAAhM,cAACinB,EAAD,CAAOC,OAAO,eCjHtB,IAAMC,GAAcC,QACa,cAA7Bd,OAAO7sB,SAAS4tB,UAEe,UAA7Bf,OAAO7sB,SAAS4tB,UAEhBf,OAAO7sB,SAAS4tB,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBliB,UAAUmiB,cACPC,SAASF,GACT7iB,KAAK,SAAAgjB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpP,QACfnT,UAAUmiB,cAAcO,WAK1B3pB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB2pB,MAAM,SAAAC,GACL7pB,QAAQ6pB,MAAM,4CAA6CA,KClE/D7pB,QAAQC,IAAI,iBAAiB,IAAI6L,MAAQyB,WAazCuc,oBAAU,CACNvP,SAAU,IAAIzO,MAAQyB,UACtBkI,aAAc,IAAI3J,MAAQyB,UAC1BsI,QAAS,KACT6O,WAAW,EACX3O,WAAY,GACZ6C,SAAS,EACTjD,SAAU,CAACzI,MAAM,EAAGwK,IAAI,GACxB+E,eAAgB,KCdxBsN,iBACE7N,EAAAvO,EAAAhM,cAACqoB,GAAD,MAIAtoB,SAASuoB,eAAe,SFIT,WACb,GAA6C,kBAAmBhjB,UAAW,CAGzE,GADkB,IAAIijB,IAAIC,YAAwBlC,OAAO7sB,UAC3CgvB,SAAWnC,OAAO7sB,SAASgvB,OAIvC,OAGFnC,OAAOoC,iBAAiB,OAAQ,WAC9B,IAAMlB,EAAK,GAAApc,OAAMod,YAAN,sBAEPrB,GAwCV,SAAiCK,GAE/BnQ,MAAMmQ,GACH7iB,KAAK,SAAA+J,GAGkB,MAApBA,EAAS2B,SACuD,IAAhE3B,EAASia,QAAQC,IAAI,gBAAgB5a,QAAQ,cAG7C1I,UAAUmiB,cAAcoB,MAAMlkB,KAAK,SAAAgjB,GACjCA,EAAamB,aAAankB,KAAK,WAC7B2hB,OAAO7sB,SAASsvB,aAKpBxB,GAAgBC,KAGnBS,MAAM,WACL5pB,QAAQC,IACN,mEA5DA0qB,CAAwBxB,GAGxBD,GAAgBC,MErB1ByB","file":"static/js/main.4ae84c5e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { useClock } from \"./useClock\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\n\n\n\n\nfunction ClockController({ duration }) {\n\n    const [ appdate, setAppdate ] = useGlobal('appdate');\n\n    const {\n        date,\n        playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        autoStart: false,\n        duration: duration,\n        startdate: appdate\n    })\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",reset)\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    //const dateLabel = (new Date(date) ).toUTCString()\n\n\n\n    useEffect(() => {\n        //console.log(\"useEffect (date) in ClockController\")\n        setAppdate(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (appdate) in ClockController\")\n        //setAppdate(date)\n        forceDate(appdate)\n        //setAppdate({appdate: new Date(date)})\n    },[appdate]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (init) in ClockController\")\n        //console.log(\"appdate changed\")\n        forceDate(appdate)\n    },[]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        console.log('pressed')\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 300) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n    \n    return (\n/*\n        <div {...handlers} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width:\"100%\", height: \"100%\"}}>\n            {(new Date(date) ).toUTCString()}\n        </div>\n\n<div onClick={togglePause}><img className='Buttons' src={playing?pauseImage:playImage} alt=''/></div>\n*/\n\n    <div className= 'ClockController' onClick={handleDoubleTap} ></div>\n    );\n}\n\nexport default ClockController;\n","import WorldWind from 'webworldwind-esa';\n\nconst PickedObject = WorldWind.PickedObject,\n    SurfacePolygon = WorldWind.SurfacePolygon,\n    SurfaceShape = WorldWind.SurfaceShape;\n\n/**\n * If no image is set, it behaves the same as a SurfaceShape.\n * To set an image pass it to the shape .image property (myShape.image = myImg;)\n *\n * Limitations with an image:\n * The boundaries have to define a quadrilateral (can be defined by 4 corners)\n * If the edges arc over the globe, the interior will not be filled properly\n * Shapes that cross the anti-meridian will not use the image\n * Performance is lower\n *\n * When used with an image it will divide the image in cells (based on the step, maxImageWidth, maxImageHeight values)\n * and draw each image cell to the canvas\n * This is a slow operation, try to keep the number of cells \"low\"\n * For example:\n * step = 1, maxImageWidth = 64, maxImageHeight = 64\n * will produce 4096 (64 * 64 * 1) cells\n */\nclass TexturedSurfaceShape extends SurfaceShape {\n    constructor(attributes) {\n        super(attributes);\n\n        /**\n         * Image to draw on the surface of the shape.\n         * @type {Image}\n         */\n        this.image = null;\n\n        /**\n         * Determines the division step of the image\n         * Lower numbers produce better textures at the expense of performance\n         * @type {Number}\n         */\n        this.step = 1;\n\n        /**\n         * Resizes the image\n         * Higher numbers produce better textures at the expense of performance\n         * @type {Number}\n         */\n        this.maxImageWidth = 64;\n        this.maxImageHeight = 64;\n    }\n\n    get image() {\n        return this._image;\n    }\n\n    set image(img) {\n        this._image = img;\n        this.stateKeyInvalid = true;\n        this._stateId = SurfacePolygon.stateId++;\n    }\n\n    renderToTexture(dc, ctx2D, xScale, yScale, dx, dy) {\n        let attributes = (this.highlighted ? (this.highlightAttributes || this._attributes) : this._attributes);\n        let drawInterior = (!this._isInteriorInhibited && attributes.drawInterior);\n        let drawOutline = (attributes.drawOutline && attributes.outlineWidth > 0);\n        let pickColor;\n\n        if (!drawInterior && !drawOutline) {\n            return;\n        }\n\n        if (dc.pickingMode && !this.pickColor) {\n            this.pickColor = dc.uniquePickColor();\n        }\n\n        if (dc.pickingMode) {\n            pickColor = this.pickColor.toHexString();\n        }\n\n        if (this.crossesAntiMeridian || this.containsPole) {\n            if (drawInterior) {\n                this.draw(this._interiorGeometry, ctx2D, xScale, yScale, dx, dy);\n                ctx2D.fillStyle = dc.pickingMode ? pickColor : attributes.interiorColor.toCssColorString();\n                ctx2D.fill();\n            }\n            if (drawOutline) {\n                this.draw(this._outlineGeometry, ctx2D, xScale, yScale, dx, dy);\n                ctx2D.lineWidth = attributes.outlineWidth;\n                ctx2D.strokeStyle = dc.pickingMode ? pickColor : attributes.outlineColor.toCssColorString();\n                ctx2D.stroke();\n            }\n        } else {\n            if (this.image && !dc.pickingMode) {\n                ctx2D.save();\n            }\n            let points = this._interiorGeometry[0].map(location => ({\n                x: location.longitude * xScale + dx,\n                y: location.latitude * yScale + dy\n            }));\n            this.drawPoints(points, ctx2D);\n            if (drawInterior) {\n                if (this.image && !dc.pickingMode) {\n                    ctx2D.clip();\n                    this.drawImageToPolygon(ctx2D, this.image, points);\n                    ctx2D.restore();\n                }\n                else {\n                    ctx2D.fillStyle = dc.pickingMode ? pickColor : attributes.interiorColor.toCssColorString();\n                    ctx2D.fill();\n                }\n            }\n            if (drawOutline) {\n                ctx2D.lineWidth = attributes.outlineWidth;\n                ctx2D.strokeStyle = dc.pickingMode ? pickColor : attributes.outlineColor.toCssColorString();\n                ctx2D.stroke();\n            }\n        }\n\n        if (dc.pickingMode) {\n            let po = new PickedObject(this.pickColor.clone(), this.pickDelegate ? this.pickDelegate : this,\n                null, this.layer, false);\n            dc.resolvePick(po);\n        }\n    }\n\n    drawPoints(points, ctx2D) {\n        ctx2D.beginPath();\n        ctx2D.moveTo(points[0].x, points[0].y);\n        for (let i = 1, len = points.length; i < len; i++) {\n            ctx2D.lineTo(points[i].x, points[i].y);\n        }\n    }\n\n    drawImageToPolygon(ctx, image, points) {\n        let canvasWidth = ctx.canvas.width;\n        let canvasHeight = ctx.canvas.height;\n\n        let offScreenCanvas = TexturedSurfaceShape.offScreenCanvas();\n        let offScreenCtx = TexturedSurfaceShape.offScreenCtx();\n\n        let corners = this.getCorners(points);\n        let axesDim = this.getAxesDimensions(corners);\n\n        let offScreenWidth = Math.min(axesDim.distX, this.maxImageWidth);\n        let offScreenHeight = Math.min(axesDim.distY, this.maxImageHeight);\n\n        offScreenCanvas.width = offScreenWidth;\n        offScreenCanvas.height = offScreenHeight;\n        offScreenCtx.drawImage(image, 0, 0, offScreenWidth, offScreenHeight);\n\n        let step = this.step;\n        let width = offScreenWidth - 1;\n        let height = offScreenHeight - 1;\n        let topLeft, topRight, bottomRight, bottomLeft, y1Current, y2Current, y1Next, y2Next;\n\n        for (let y = 0; y < height; y += step) {\n            y1Current = this.lerp(corners[0], corners[3], y / height);\n            y2Current = this.lerp(corners[1], corners[2], y / height);\n            y1Next = this.lerp(corners[0], corners[3], (y + step) / height);\n            y2Next = this.lerp(corners[1], corners[2], (y + step) / height);\n\n            for (let x = 0; x < width; x += step) {\n                topLeft = this.lerp(y1Current, y2Current, x / width);\n                topRight = this.lerp(y1Current, y2Current, (x + step) / width);\n                bottomRight = this.lerp(y1Next, y2Next, (x + step) / width);\n                bottomLeft = this.lerp(y1Next, y2Next, x / width);\n\n                let dWidth = Math.ceil(Math.max(step, Math.abs(topRight.x - topLeft.x), Math.abs(bottomLeft.x - bottomRight.x))) + 1;\n                let dHeight = Math.ceil(Math.max(step, Math.abs(topLeft.y - bottomLeft.y), Math.abs(topRight.y - bottomRight.y))) + 1;\n\n                if (this.isRectInsideCanvas(topLeft, dWidth, dHeight, canvasWidth, canvasHeight)) {\n                    ctx.drawImage(offScreenCanvas, x, y, step, step, topLeft.x, topLeft.y, dWidth, dHeight);\n                }\n            }\n        }\n    }\n\n    getCorners(points, bbox) {\n        bbox = bbox || this.getBbox(points);\n\n        let edgePoints = points.filter(point => this.isEdgePoint(point, bbox));\n\n        if (edgePoints.length === 5 &&\n            this.arePointsEqual(edgePoints[0], edgePoints[edgePoints.length - 1])) {\n            edgePoints.length = 4;\n        }\n\n        if (edgePoints.length > 4) {\n            let leftPoints = edgePoints.filter(point => point.x === bbox.minX);\n            let rightPoints = edgePoints.filter(point => point.x === bbox.maxX);\n\n            let {top: topLeft, bottom: bottomLeft} = this.getTopBottom(leftPoints);\n            let {top: topRight, bottom: bottomRight} = this.getTopBottom(rightPoints);\n\n            return [topLeft, topRight, bottomRight, bottomLeft];\n        }\n\n        let slope1 = this.getSlope(edgePoints[0], edgePoints[2]);\n        let slope2 = this.getSlope(edgePoints[1], edgePoints[3]);\n        let topLeftPoint = this.getTopLeftPoint(slope1, edgePoints[0], edgePoints[2]) ||\n            this.getTopLeftPoint(slope2, edgePoints[1], edgePoints[3]);\n\n        if (!topLeftPoint) {\n            console.log('Could not determine top left corner with the slope method');\n            return edgePoints;\n        }\n\n        let topLeftIndex = edgePoints.findIndex(point => point.x === topLeftPoint.x && point.y === topLeftPoint.y);\n        let newCorners = [];\n        for (let i = topLeftIndex; i < edgePoints.length + topLeftIndex; i++) {\n            newCorners.push(edgePoints[i % edgePoints.length]);\n        }\n\n        return newCorners;\n    }\n\n    getBbox(points) {\n        let bbox = {\n            minX: Number.MAX_SAFE_INTEGER,\n            maxX: Number.MIN_SAFE_INTEGER,\n            minY: Number.MAX_SAFE_INTEGER,\n            maxY: Number.MIN_SAFE_INTEGER,\n        };\n\n        return points.reduce((bbox, point) => {\n            bbox.minX = Math.min(bbox.minX, point.x);\n            bbox.maxX = Math.max(bbox.maxX, point.x);\n            bbox.minY = Math.min(bbox.minY, point.y);\n            bbox.maxY = Math.max(bbox.maxY, point.y);\n\n            return bbox;\n        }, bbox);\n    }\n\n    getTopBottom(points) {\n        return points.reduce((acc, point) => {\n            if (point.y < acc.top.y) {\n                acc.top = point;\n            }\n\n            if (point.y > acc.bottom.y) {\n                acc.bottom = point;\n            }\n\n            return acc;\n        }, {top: points[0], bottom: points[0]});\n    }\n\n    distance(p1, p2) {\n        let dx = p1.x - p2.x;\n        let dy = p1.y - p2.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    isEdgePoint(point, bbox) {\n        return (\n            point.x === bbox.minX || point.x === bbox.maxX ||\n            point.y === bbox.minY || point.y === bbox.maxY\n        );\n    }\n\n    arePointsEqual(p1, p2) {\n        return p1.x === p2.x && p1.y === p2.y;\n    }\n\n    getSlope(p1, p2) {\n        return (p1.y - p2.y) / (p1.x - p2.x);\n    }\n\n    getTopLeftPoint(slope, point1, point2) {\n        if (slope <= 0) {\n            return null;\n        }\n\n        if (point1.y < point2.y) {\n            return point1;\n        }\n\n        return point2;\n    }\n\n    getAxesDimensions(corners) {\n        let dx = Math.abs(corners[0].x - corners[1].x);\n        let dy = Math.abs(corners[0].y - corners[1].y);\n\n        let distX = 0;\n        let distY = 0;\n\n        if (dx > dy) {\n            distX = this.distance(corners[0], corners[1]);\n            distY = this.distance(corners[0], corners[3]);\n        }\n        else {\n            distX = this.distance(corners[0], corners[3]);\n            distY = this.distance(corners[0], corners[1]);\n        }\n\n        return {distX, distY};\n    }\n\n    lerp(p1, p2, t) {\n        return {\n            x: p1.x + (p2.x - p1.x) * t,\n            y: p1.y + (p2.y - p1.y) * t\n        };\n    }\n\n    isRectInsideCanvas(point, width, height, canvasWidth, canvasHeight) {\n        return (\n            point.x + width >= 0 &&\n            point.x <= canvasWidth &&\n            point.y + height >= 0 &&\n            point.y < canvasHeight\n        );\n    }\n\n    static offScreenCanvas() {\n        if (!TexturedSurfaceShape.canvas) {\n            TexturedSurfaceShape.canvas = document.createElement('canvas');\n        }\n        return TexturedSurfaceShape.canvas;\n    }\n\n    static offScreenCtx() {\n        if (!TexturedSurfaceShape.ctx) {\n            let canvas = TexturedSurfaceShape.offScreenCanvas();\n            TexturedSurfaceShape.ctx = canvas.getContext('2d');\n        }\n        return TexturedSurfaceShape.ctx;\n    }\n}\n\nexport default TexturedSurfaceShape;","import WorldWind from 'webworldwind-esa';\nimport TexturedSurfaceShape from './TexturedSurfaceShape';\n\nconst SurfacePolygon = WorldWind.SurfacePolygon;\n\n/**\n * @exports TexturedSurfacePolygon\n */\nclass TexturedSurfacePolygon extends TexturedSurfaceShape {\n    /**\n     * Constructs Textured Surface Polygon. The polygon is drawn using the standard attributes. Unlike the standard\n     * surface polygon it draws associated image on the area of the polygon.\n     * @param boundaries {Location[]} Array of locations enclosing the surface polygon.\n     * @param attributes {ShapeAttributes} Attributes used for the styling of the Surface Polygon\n     */\n    constructor(boundaries, attributes) {\n        super(attributes);\n\n        if (!Array.isArray(boundaries)) {\n            throw new Error('TexturedSurfacePolygon - constructor - The specified boundary is not an array.');\n        }\n\n        /**\n         * Boundaries relevant for the current polygon.\n         * @type {Location[]}\n         * @memberof TexturedSurfacePolygon.prototype\n         * @public\n         */\n        this.boundaries = boundaries;\n\n        this._stateId = SurfacePolygon.stateId++;\n    }\n\n    get boundaries() {\n        return this._boundaries;\n    }\n\n    set boundaries(boundaries) {\n        if (!Array.isArray(boundaries)) {\n            throw new Error('TexturedSurfacePolygon - set boundaries - The specified boundary is not an array.');\n        }\n\n        this.resetBoundaries();\n        this._boundaries = boundaries;\n        this._stateId = SurfacePolygon.stateId++;\n        this.stateKeyInvalid = true;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    computeStateKey() {\n        return TexturedSurfacePolygon.staticStateKey(this);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    computeBoundaries(dc) {\n    }\n\n    static staticStateKey(shape) {\n        return SurfacePolygon.staticStateKey(shape) + \" pg \" + shape._stateId;\n    }\n}\n\nexport default TexturedSurfacePolygon;","import React, { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\nimport TexturedSurfacePolygon from './wwwx/shapes/TexturedSurfacePolygon'\n\n\n// BasicWorldWindowController.prototype.applyLimits = function () {\n//     var navigator = this.wwd.navigator;\n\n//     // Clamp latitude to between -90 and +90, and normalize longitude to between -180 and +180.\n//     navigator.lookAtLocation.latitude = WWMath.clamp(navigator.lookAtLocation.latitude, -90, 90);\n//     navigator.lookAtLocation.longitude = Angle.normalizedDegreesLongitude(navigator.lookAtLocation.longitude);\n\n//     // Clamp range to values greater than 1 in order to prevent degenerating to a first-person navigator when\n//     // range is zero.\n//     navigator.range = WWMath.clamp(navigator.range, 1, Number.MAX_VALUE);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.heading = Angle.normalizedDegrees(navigator.heading);\n\n//     // Clamp tilt to between 0 and +90 to prevent the viewer from going upside down.\n//     navigator.tilt = WWMath.clamp(navigator.tilt, 0, 90);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.roll = Angle.normalizedDegrees(navigator.roll);\n\n//     // Apply 2D limits when the globe is 2D.\n//     if (this.wwd.globe.is2D() && navigator.enable2DLimits) {\n//         // Clamp range to prevent more than 360 degrees of visible longitude. Assumes a 45 degree horizontal\n//         // field of view.\n//         var maxRange = 2  Math.PI  this.wwd.globe.equatorialRadius;\n//         navigator.range = WWMath.clamp(navigator.range, 1, maxRange);\n\n//         // Force tilt to 0 when in 2D mode to keep the viewer looking straight down.\n//         navigator.tilt = 0;\n//     }\n// };\n\nexport function useEww({ id, clon, clat, alt, starfield, atmosphere, names }) {\n    //console.log('useEww renders')\n    \n  \n    const eww = useRef(null)\n    const [projection, setProjection] = useState(\"3D\")\n    // const [aoi, setAoi] = useState({type: null, value: null})\n    const [aoi, setAoi] = useState('')\n    const [geojsonlayers, setGeojsonlayers] = useState([])\n    const [quicklooklayers, setQuicklooklayers] = useState([])\n    const [ewwstate, setEwwState] = useState({latitude: clat, longitude: clon, altitude: alt, aoi:'', pickedItems: []})\n    // const [features, setFeatures] = useState([])\n    const features = useRef([])\n\n    const [enabledfeatures, setEnabledfeatures] = useState([])\n    const [starfieldlayer, setstarfieldlayer] = useState([])\n    const [atmospherelayer, setatmospherelayer] = useState([])\n\n\n    //toggle atmosphere\n    function toggleAtmosphere() {\n        console.log('toggleAtmosphere')\n        // let _layer = getLayerByName('Atmosphere')\n        // _layer.enabled = !_layer.enabled\n        atmospherelayer.enabled = !atmospherelayer.enabled\n\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield() {\n        console.log('toggleStarfield')\n        // let _layer = getLayerByName('StarField')\n        // _layer.enabled = !_layer.enabled\n        starfieldlayer.enabled = !starfieldlayer.enabled\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames() {\n        console.log('toggleNames')\n        let _layer = getLayerByName('overlay_bright')\n        _layer.enabled = !_layer.enabled\n        eww.current.redraw();\n    }\n\n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n    \n    const addGeojson = (url,epoch) => {\n\n        // console.log('replace: '+replace)\n\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n\n            let name = properties.name || properties.Name || properties.NAME\n            if (name) configuration.name = name\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.4);\n                configuration.highlightAttributes.interiorColor = new WorldWind.Color(1, 0, 0, 0);\n                // configuration.attributes.outlineWidth = 0.3;\n\n                // configuration.attributes.applyLighting = true;\n                // configuration.attributes.enableLighting = true;\n                // configuration.attributes.imageSource = properties.quicklookUrl\n\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        \n        function loadCompleteCallback() {\n            console.log(renderableLayer)\n            setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n            let newfeatures = features.current\n            for(let i = 0; i< renderableLayer.renderables.length; i++) {\n                \n                newfeatures.push({\n                    start: renderableLayer.renderables[i].userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime.getTime(),\n                    stop: renderableLayer.renderables[i].userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStopTime.getTime(), \n                    renderable: renderableLayer.renderables[i]\n                })\n                renderableLayer.renderables[i].enabled = true\n            }\n            newfeatures.sort( (a,b) => a.start - b.start )\n            // setFeatures(newfeatures)\n            features.current = newfeatures\n            console.log(newfeatures)\n            //console.log(new Date(epoch).getTime())\n            //enableRenderables(epoch) // uncomment to disable renderables\n            eww.current.redraw();\n        }\n    \n        // if (replace) removeGeojson()\n        let renderableLayer = new WorldWind.RenderableLayer('Products: '+url.properties.updated+Math.ceil(Math.random() * 10000))\n        \n        eww.current.addLayer(renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers(eww.current.layers)\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])        \n    }\n\n    function removeGeojson() {\n        console.log('removing geojson layers:')\n        for(let i=0;i<geojsonlayers.length;i++) {\n            geojsonlayers[i].removeAllRenderables()\n            eww.current.removeLayer(geojsonlayers[i])\n            console.log(geojsonlayers[i])\n        }\n        setGeojsonlayers([])\n        // setFeatures([])\n        features.current = []\n        setEnabledfeatures([])\n        // console.log(geojsonlayers)\n        eww.current.removeLayer(getLayerByName('quicklook') )\n        eww.current.redraw();\n      }\n\n    function addWMS() {\n    }\n\n    function addQuicklookWMS(renderable) {\n        console.log(renderable.userProperties.earthObservation.productInformation.productType)\n        console.log(renderable.computeSectors(eww.current.drawContext))\n        console.log(WorldWind.Sector.FULL_SPHERE)\n\n        let QL_LUT = {\n            'GRD':'S1_IW_GRDH_FullResolution',\n            'S2MSI1C':'S2L1C_TRUE_COLOR',\n\n        }\n\n        // for S2:  \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S2L1C_TRUE_COLOR&styles=&format=image/png&transparent=true&version=1.1.1&width=1500&height=1000&srs=EPSG:4326&bbox=12.357903,41.800495,12.625694,41.984760\n\n        \n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n        let wmsConfigQL = {\n            service: \"https://view.onda-dias.eu/instance00/ows\",\n            // layerNames: renderable.userProperties.title,\n            // layerNames: 'S2L1C_TRUE_COLOR',\n            // layerNames: 'S1_IW_GRDH_FullResolution',\n            layerNames: QL_LUT[renderable.userProperties.earthObservation.productInformation.productType],\n            // title: renderable.userProperties.title,\n            title: 'quicklook',\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: renderable.computeSectors(eww.current.drawContext)[0],\n            // sector: renderable.sector,\n            // sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n\n        // let wmsConfigQL = {\n        //     service: \"https://tiles.maps.eox.at/wms\",\n        //     layerNames: \"overlay_bright\",\n        //     title: \"overlay_bright\",\n        //     numLevels: 19,\n        //     format: \"image/png\",\n        //     size: 256,\n        //     sector: WorldWind.Sector.FULL_SPHERE,\n        //     levelZeroDelta: new WorldWind.Location(90, 90)\n        // }\n        eww.current.removeLayer(getLayerByName('quicklook') )\n        let qllayer =  new WorldWind.WmsLayer(wmsConfigQL, renderable.userProperties.date)\n        eww.current.addLayer(qllayer)\n        eww.current.redraw()\n        console.log(eww.current.layers)\n    }\n\n    function getLayerByName(name) {\n        // console.log('Searching layer: '+ name)\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            console.log('display name: '+eww.current.layers[i].displayName)\n            if (eww.current.layers[i].displayName === name) return eww.current.layers[i]\n        }\n        return null\n    }\n\n    function enableRenderables(time) {\n\n        if(features.length <= 0 ) return\n        let timeOffset = 1000 * 60 * 60 * 3 // 3 hours\n\n        // disable all enabled features\n        for(let i = 0; i < enabledfeatures.length; i++) {\n            enabledfeatures[i].renderable.enabled = false\n            console.log(' disabling features')\n        }\n        setEnabledfeatures([])\n\n        // enable features within view time window (current time +/- timeOffset/2)\n        let newenabledfeatures = []\n        // console.log(time - timeOffset/2)\n        let first = features.findIndex( (a) => a.start >= (time - timeOffset/2) )\n        // console.log(features)\n        // console.log(first)\n        if(first < 0) return\n\n        while ( first < features.length && features[first].start <= (time + timeOffset/2)) {\n            // console.log(features[first])\n            console.log(' enabling features')\n            features[first].renderable.enabled = true\n            newenabledfeatures.push(features[first])\n            first += 1\n        }\n\n        // for(let i = first; i < features.length; i++) {\n        //     features[i].renderable.enabled = true\n        //     newenabledfeatures.push(features[i])\n        // }\n        setEnabledfeatures(newenabledfeatures)\n\n\n\n    }\n\n\n\n    function enableRenderables_slow(time) {\n        let timeOffset = 1000 * 60 * 60 * 3 // 3 hours\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            if (eww.current.layers[i].displayName.includes('Products:')) {\n                \n                for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                    let renderable = eww.current.layers[i].renderables[j]\n                    console.log('enabling')\n                    if (time != 0) {\n                        let renderableStartDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime)).getTime()\n                        let renderableStopDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStopTime)).getTime()\n                        renderable.enabled = (renderableStartDate <= time+timeOffset/2 && renderableStopDate >= time-timeOffset/2) ? true : false   \n                        // console.log('enabling: '+ renderable.displayName  )\n                        // if(renderable.enabled) {\n                        //     let transparency = 1 - (Math.abs(renderableStartDate - time) / (timeOffset/2))\n                        //     renderable.attributes.interiorColor.set(\n                        //         renderable.attributes.interiorColor.red -transparency,\n                        //         renderable.attributes.interiorColor.green,\n                        //         transparency,\n                        //         renderable.attributes.interiorColor.alpha) \n                                // renderable.render(eww.current.drawContext)\n\n                        // }\n                    } else {\n                        renderable.enabled = false\n                    }         \n                }\n            }\n            if (eww.current.layers[i].displayName === 'quicklook') {\n                // eww.current.layers[i].enabled = \n            }\n        }\n\n    }\n\n    function addQuicklook(renderable) {\n\n        function imageLoader(url, useCredentials) {\n            return new Promise((resolve, reject) => {\n                const img = new Image();\n        \n                img.onload = function() {\n                    resolve(img);\n                };\n        \n                img.onerror = function(e){\n                    reject(e);\n                };\n        \n                img.crossOrigin = useCredentials ? 'Use-Credentials' : 'Anonymous';\n                img.src = url;\n                console.log(' adding QL')\n            });\n        }\n\n\n        // console.log(' adding QL')\n        //  console.log(renderable.attributes)\n        // let quicklook =  new TexturedSurfacePolygon(renderable.sector)\n        // let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n        // // quicklookLayer.addRenderable(quicklook)\n        // // setQuicklooklayers((quicklooklayers)=>[...quicklooklayers,quicklookLayer])\n        // // eww.current.addLayer(quicklookLayer)\n        // let ql = new Image()\n        // ql.src = renderable.userProperties.quicklookUrl\n        // quicklook.image = ql\n        \n        imageLoader(renderable.userProperties.quicklookUrl,true).then(image => {\n            let quicklookLayer = getLayerByName('Quicklooks')\n            removeQuicklooks()\n            console.log(renderable.boundaries)\n            console.log(renderable.boundingSector)\n            // \n            let footprint = [\n                renderable.boundaries[0][0],\n                renderable.boundaries[0][3],\n                renderable.boundaries[0][2],\n                renderable.boundaries[0][1]\n            ]\n            // footprint[0].pop()\n            console.log(footprint)\n            let quicklook =  new TexturedSurfacePolygon(footprint,renderable.attributes)\n            quicklook.maxImageWidth = 256\n            quicklook.maxImageHeight = 256\n            \n            quicklook.image = image\n            removeQuicklooks()\n            quicklookLayer.addRenderable(quicklook)\n            // eww.current.addLayer(quicklookLayer)\n            eww.current.redraw()\n        })\n    }\n\n    function removeQuicklooks() {\n        getLayerByName('Quicklooks').removeAllRenderables()\n        eww.current.redraw()\n    }\n\n    function setTime(epoch) {\n        // getLayerByName('StarField').time =  new Date(epoch)\n        // getLayerByName('Atmosphere').time = new Date(epoch)\n        starfieldlayer.time = new Date(epoch)\n        atmospherelayer.time = new Date(epoch)\n        // enableRenderables(epoch)\n        // console.log('display name: ')\n        // console.log(getLayerByName('StarField').displayName)\n        eww.current.redraw();\n        \n\n     }\n\n\n    function toggleProjection() {\n        setProjection( prevProj => {\n          console.log(\"prevProjection: \"+prevProj)\n          let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n          let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n          console.log(\"newProjection: \"+supportedProjections[newProj])\n          switch (supportedProjections[newProj]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n            }\n          eww.current.redraw();\n          return supportedProjections[newProj]\n          })      \n      }\n\n    // callback from eww   \n    const setGlobeStates = () => {\n        \n        let lo = eww.current.navigator.lookAtLocation.longitude\n        let la = eww.current.navigator.lookAtLocation.latitude\n        let al = eww.current.navigator.range\n        let vp = (al < 2000000?getViewPolygon():'')\n\n        setEwwState((ewwstate) => { return {...ewwstate, longitude:lo, latitude: la, altitude: al, viewpolygon: vp}}) \n\n    }\n\n    // handler for tap/click\n\n    const handleClick  = (recognizer) => {\n        // console.log('click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n        console.log(pickList)\n        if (pickList.terrainObject()) {\n            // position = pickList.terrainObject().position;\n            // store list of selected footprints in a string for later comparison\n            // eww.current.removeLayer(getLayerByName('quicklook') )\n            // de-highlight all rendereables\n            for (let i = 0; i < eww.current.layers.length; i++) {\n                if (eww.current.layers[i].displayName.includes('Products:')) {                    \n                    for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                        let renderable = eww.current.layers[i].renderables[j]\n                        renderable.highlighted = false\n                    }\n                }\n            }\n    \n            // ... and now highlight all picked rendereables\n            let pickedItems = []\n            for (let i = 0; i < pickList.objects.length; i++) {\n                if (pickList.objects[i].userObject instanceof WorldWind.SurfaceShape) {\n                    pickedItems.push(pickList.objects[i].userObject) \n                    pickList.objects[i].userObject.highlighted = !pickList.objects[i].userObject.highlighted\n                    \n                    // addQuicklookWMS(pickList.objects[i].userObject)\n                    removeQuicklooks()\n                    // addQuicklookWMS(pickList.objects[i].userObject)\n                    addQuicklook(pickList.objects[i].userObject)\n                }\n            }\n            console.log(pickedItems)\n            setEwwState((ewwstate) => { return {...ewwstate, pickedItems: pickedItems}})\n            eww.current.redraw()\n        } else {\n            console.log('No position !');\n            removeQuicklooks()\n\n            return;\n        }\n\n\n    }\n\n    const handleDoubleClick  = (recognizer) => {\n        console.log('double click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n\n        let position;\n  \n  \n        // Get coordinates of clicked point and list of selected footprints. Do nothing if click done outside the globe.\n        if (pickList.terrainObject()) {\n            position = pickList.terrainObject().position;\n            // eww.current.goTo(new WorldWind.Location(position.latitude, position.longitude));\n\n            let point = \"POINT(\"+position.longitude+' '+position.latitude+\")\"\n            \n            setEwwState((ewwstate) => { return {...ewwstate, aoi: point}}) \n    \n        } else {\n              console.log('No position !');\n              setEwwState((ewwstate) => { return {...ewwstate, aoi: ''}})\n        }\n  \n        \n\n       \n    }\n\n    // useEffect(() => {\n    //     console.log(\"useEffect aoi: \" + aoi)\n    //     let newewwstate = {...ewwstate, aoi: aoi}\n    //     setEwwState(newewwstate)\n    // }, [aoi]); \n\n    // didMount effect\n    useEffect(() => {\n        console.log(\"useEffect (mount) in Eww  star/atmo: \"+ starfield+'/'+atmosphere)\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n        eww.current = new WorldWind.WorldWindow(id);\n        eww.current.redrawCallbacks.push(setGlobeStates)\n\n        // Define a min/max altitude limit\n        WorldWind.BasicWorldWindowController.prototype.applyLimits = function () {\n            eww.current.navigator.range = WorldWind.WWMath.clamp(eww.current.navigator.range, 2000, 300000000);\n        }\n\n        // define click/tap recognisers\n        // let tapRecognizer = new WorldWind.TapRecognizer(eww.current, handleClick);\n        // tapRecognizer.numberOfTaps = 1;\n        // let doubleTapRecognizer = new WorldWind.TapRecognizer(eww.current, handleDoubleClick);\n        // doubleTapRecognizer.numberOfTaps = 2;\n        // doubleTapRecognizer.recognizeSimultaneouslyWith(tapRecognizer);\n\n        let clickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleClick);\n        clickRecognizer.numberOfClicks = 1;\n        let doubleClickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleDoubleClick);\n        doubleClickRecognizer.numberOfClicks = 2;\n        doubleClickRecognizer.recognizeSimultaneouslyWith(clickRecognizer);\n        doubleClickRecognizer.maxClickInterval = 200;\n\n        let tapRecognizer = new WorldWind.TapRecognizer(eww.current, handleClick);\n        tapRecognizer.numberOfTaps = 1;\n        let doubleTapRecognizer = new WorldWind.TapRecognizer(eww.current, handleDoubleClick);\n        doubleTapRecognizer.numberOfTaps = 2;\n        doubleTapRecognizer.recognizeSimultaneouslyWith(tapRecognizer);\n        doubleTapRecognizer.maxTapInterval = 200;\n\n\n\n        //setWwd(eww);\n        let wmsConfigBg = {\n            service: \"https://tiles.maps.eox.at/wms\",\n            layerNames: \"s2cloudless-2018\",\n            title: \"s2cloudless-2018\",\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n    \n        let wmsConfigNames = {\n            service: \"https://tiles.maps.eox.at/wms\",\n            layerNames: \"overlay_bright\",\n            title: \"overlay_bright\",\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n        WorldWind.configuration.baseUrl = WorldWind.configuration.baseUrl.slice(0,-3)\n        let starFieldLayer = new WorldWind.StarFieldLayer();\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        // let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_3km.jpg');\n        \n        //atmosphereLayer.minActiveAltitude = 5000000\n\n        let quicklookLayer = new WorldWind.RenderableLayer('Quicklooks')\n    \n        let layers = [\n            { layer: new WorldWind.WmsLayer(wmsConfigBg, \"\"), enabled: true },\n            { layer: new WorldWind.WmsLayer(wmsConfigNames, \"Names\"), enabled: names },\n            { layer: starFieldLayer, enabled: starfield },\n            { layer: atmosphereLayer, enabled: atmosphere },\n            { layer: quicklookLayer, enabled: true }\n        ];\n    \n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            eww.current.addLayer(layers[l].layer);\n        }\n\n        // quicklookLayer.maxActiveAltitude = 4000000\n\n        //let date = new Date();\n        setstarfieldlayer(starFieldLayer)\n        setatmospherelayer(atmosphereLayer)\n        starFieldLayer.time = new Date();\n        atmosphereLayer.time = new Date();\n        setTimeout(() => {\n            eww.current.goToAnimator.travelTime = 1000;\n            eww.current.goTo(new WorldWind.Position(clat, clon, alt));\n            eww.current.redraw();\n            }, 2000)\n    \n        eww.current.redraw();\n        eww.current.deepPicking = true;\n        // eww.current.orderedRenderingFilters.push(declutterByTime)\n    }, []); // effect runs only once\n        \n  \n  return { ewwstate, removeGeojson, addGeojson, addWMS, toggleStarfield, toggleAtmosphere, setTime, toggleProjection, toggleNames };\n}\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(hubItem.footprint),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    uuid: item.id,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    downloadUrl: item.link[0].href,\n                    quicklookUrl: (item.link.length >= 2) ? item.link[2].href: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            size: sizeInBytes\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            if(Array.isArray(response.feed.entry)) {\n                console.log('entry is an  array')\n                features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } else {\n                features = [mapFromHubOpenSearch(response.feed.entry)]\n            }\n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import wellknown from 'wellknown';\n\nexport default function eocatToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n\n        try {\n            \n\n            var newItem = {\n                id: item.id,\n                geometry: item.geometry,\n                type: \"Feature\",\n                properties: {\n                    updated: item.properties.updated,\n                    title: item.properties.title,\n                    name: item.title,\n                    uuid: item.properties.identifier,\n                    date: item.properties.date,\n                    downloadUrl: null,\n                    quicklookUrl: null,\n                    // links: {\n                    //     data: [{\n                    //         href: item.link[0].href,\n                    //     }]\n                    // },\n                    earthObservation: {\n                        parentIdentifier: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.parentIdentifier,\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: item.properties.EarthObservation.procedure.EarthObservationEquipment.platform.Platform.shortName,\n                                platformSerialIdentifier: null\n                            },\n                            sensor: {\n                                instrument: item.properties.EarthObservation.procedure.EarthObservationEquipment.instrument.Instrument.shortName,\n                                operationalMode: item.properties.EarthObservation.procedure.EarthObservationEquipment.sensor.Sensor.operationalMode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.beginPosition),\n                                acquisitionStopTime: new Date(item.properties.EarthObservation.phenomenonTime.TimePeriod.endPosition),\n                                relativePassNumber: null,\n                                orbitNumber: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitNumber,\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: item.properties.EarthObservation.procedure.EarthObservationEquipment.acquisitionParameters.Acquisition.orbitDirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: item.properties.EarthObservation.metaDataProperty.EarthObservationMetaData.productType,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            downloadUrl: item.link[0]['@'],\n                            quicklookUrl: (item.link.length >= 2) ? item.link[2]['@']: null,\n        \n                            size: null\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.features ) {\n            if(Array.isArray(response.features)) {\n                console.log('features is an  array')\n                features = response.features.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } \n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.properties.totalResults,\n                startIndex: response.properties.startIndex,\n                itemsPerPage: response.properties.itemsPerPage,\n                title: response.properties.title,\n                updated: response.properties.updated\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import { useState, useEffect } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport eocatToGeojson from \"./eocatToGeojson\"\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\nimport SearchManager from './searchmanager'\n\n\n\n\nexport default function useDatahub() {\n\n    const [ collections, setCollections ] = useState([])\n\n\n    const buildUrl = ({code, polygon, start, end, startindex}) => {\n\n\n        \n\n        // const getTargetCollection= (mission) => {\n        //     return collections.find( (collection) => {return collection.code == mission} )\n        // }\n        // console.log(getTargetCollection(mission))\n        let target = collections[code]\n        let newurl = target.templateUrl\n        //let start, end, \n        // let windowSize\n        \n\n        if(polygon.length > 0) {\n            // windowSize = 1000 * 60 * 60 * 24 * 30 // 1 month time window\n            // start = dateFormat(new Date(date - windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n            // end =  dateFormat(new Date(date + windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n            // console.log('|'+polygon.length+'|')\n            newurl = newurl.replace(\"{polygon}\", polygon)\n            newurl = newurl.replace(target.dateOff, '')\n            // newurl = newurl.replace(\"{start}\", start)\n            // newurl = newurl.replace(\"{end}\", end)\n\n        } else {\n            // windowSize = 1000 * 60 * 60 * 24  // 3 hours time window\n            // windowSize = 1000 * 60 * 60 * 24 * 30 // 1 month time window\n\n            // start = dateFormat(new Date(date - windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n            // end =  dateFormat(new Date(date + windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n\n            newurl = newurl.replace(target.areaOff, '')\n            newurl = newurl.replace(\"{start}\", start)\n            newurl = newurl.replace(\"{end}\", end)\n        }\n        \n        // startindex = startindex == 0 ? startindex : startindex + target.startIndexOrigin\n        // newurl = newurl.replace(\"{startindex}\",target.startIndexOrigin)\n\n\n        return newurl\n    }\n\n    \n    const MAX_ITEMS = 13000\n\n    const [geojsonResults, setGeojsonResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [firstpage, setFirstpage] = useState(false)\n    \n    const [ searchepoch,  ] = useGlobal('searchepoch');\n    const [ startend,  ] = useGlobal('startend');\n    const [ mission,  ] = useGlobal('mission');\n    const [ apppolygon,  ] = useGlobal('apppolygon');\n\n\n    const [se] = SearchManager();\n\n    const [ searchUrl, setSearchurl  ] = useState(null);\n    // const [ searchtimeout, setSearchtimeout ] = useState(null);\n\n//{totalresults,startindex}\n\n// fetch('https://...')\n//   .then(response => response.json())\n//   .then(data => console.log('data is', data))\n//   .catch(error => console.log('error is', error));\n    useEffect(() => {\n        const fetchURL = async (url,index) => {\n             setLoading(true)\n            let newurl = url\n            newurl = newurl.replace(\"{startindex}\",index)\n            console.log('Search: '+newurl)\n            let paging = {totalresults:0, startindex:0, itemsperpage:0}\n            try {\n                \n                const response = await fetch(newurl, {mode: 'cors', credentials: 'include'})\n                // console.log( response.text())\n                try {\n                    const json = await response.json()\n                    const geoJson = (mission === 'ENVISAT')? eocatToGeojson(json) : dhusToGeojson(json)\n                    // console.log('totalResults: ' + geoJson.properties.totalResults)\n                    paging = {\n                        totalresults: geoJson.properties.totalResults == null ? 0 : Number(geoJson.properties.totalResults) ,\n                        startindex:  Number(geoJson.properties.startIndex), \n                        itemsperpage:  Number(geoJson.properties.itemsPerPage)\n                    }\n                    console.log(paging)\n\n                    // setPagination(paging)\n                    if(paging.totalresults>0) setGeojsonResults(geoJson) \n\n                    if (paging.startindex + paging.itemsperpage < Math.min(paging.totalresults,MAX_ITEMS) ) {\n                        console.log(\"There's More...\")  \n                        setFirstpage(false)\n                        fetchURL(url,(paging.startindex + paging.itemsperpage))\n                    } else {\n                        setLoading(false)  \n                    }\n\n                } catch (err) {\n                    console.log(\"Didn't recieve a json !\")\n                    console.log(err)\n                    setLoading(false);\n                }\n            } catch(err) {\n                console.log(\"Error contacting server...\")\n                console.log(err)\n                setLoading(false)   \n            }\n        }\n\n        if(searchUrl) {\n            // setLoading(true)\n            fetchURL(searchUrl,collections[mission].startIndexOrigin)\n        }\n    }, [searchUrl]);\n    \n\n    useEffect(() => {\n        console.log('DataHub ready. '+mission)\n        let _collections = [\n            {\n                code: 'S1',\n                //templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                templateUrl: 'https://scihub.copernicus.eu/apihub/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-1 A/B GRD' ,\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S2A',\n                templateUrl: 'https://scihub.copernicus.eu/apihub/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:S2A_MSIL1C*)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-2 A/B Level 1C',\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S2B',\n                templateUrl: 'https://scihub.copernicus.eu/apihub/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND filename:S2B_MSIL1C*)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-2 A/B Level 1C',\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S3',\n                templateUrl: 'https://scihub.copernicus.eu/apihub/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:OL_1_ERR___ OR producttype:SL_1_RBT___ OR producttype:SR_1_SRA___))&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-3 A/B, OLCI/SLSTR/SRAL' ,\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S5P',\n                templateUrl: 'https://scihub.copernicus.eu/apihub/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-5 precursor AND (producttype:L1B_RA_BD1 OR (producttype:L2__NO2___ AND processingmode:Near real time)))&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-1 A/B',\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'ENVISAT',\n                templateUrl: 'https://eocat.esa.int/api/catalogue/EOCAT-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&format=json&count=50&startIndex={startindex}',\n                startIndexOrigin: 1,\n                name: 'Sentinel-1 A/B',\n                dateOff: ' beginposition:[{start} TO {end}]',\n                areaOff:  ' footprint:\"Intersects({polygon})\"'\n            }\n        ]\n    \n        let collectionArray = []\n        _collections.map((item)=>{collectionArray[item.code]=item})\n        setCollections(collectionArray)\n        \n    \n    }, []);\n\n\n\n    useEffect(() => {\n        console.log('mission: '+mission)\n        console.log('mission: '+mission+ ' start/end: '+ startend.start+'/' + startend.end + ' apppolygon: '+apppolygon)\n\n        if(mission && searchepoch) {\n            // clearTimeout(searchtimeout)\n            // let timeout = setTimeout(() => {\n                try {\n                    let url = buildUrl({\n                        code: mission,\n                        polygon: apppolygon, \n                        start: startend.start,\n                        end: startend.end\n                    })\n\n                    // setLoading(true)\n                    // console.log('start: '+collections[mission].startIndexOrigin)\n                    setFirstpage(true)\n                    setSearchurl(url)\n            \n                } catch(e) {\n                    console.log('Not a JULIAN date !')\n                    console.log(e)\n                }\n\n            // },500)\n            // setSearchtimeout(timeout)\n            \n        }\n        \n    }, [mission, apppolygon, startend.start]);\n\n    return {geojsonResults, loading, firstpage}\n}\n","import { useState, useEffect } from \"react\"\nimport { useGlobal } from 'reactn'\nimport { useHotkeys } from 'react-hotkeys-hook'\n\n\n\nexport default function SearchManager() {\n\n    const [ searchepoch,  ] = useGlobal('searchepoch');\n    const [ startend,  setStartend] = useGlobal('startend');\n    const [ apppolygon,  ] = useGlobal('apppolygon');\n    const [ mission,  ] = useGlobal('mission');\n    const [ replace, setReplace ] = useGlobal('replace')\n    const [gosearch, setGosearch] = useGlobal('gosearch')\n\n\n    // const { geojsonResults, loading} = useDatahub();\n\n\n    const [windowSize, setWindowSize] = useState(1000 * 60 * 60 * 24)\n    const [searchList, setSearchList] = useState([])\n    const [replacemode, setReplacemode] = useState(0)\n    \n\n    // const [replacemode, toggleReplacemode] = useToggle(false)\n\n    // const [ startend, setStartend ] = useState({start:0, end:0});\n\n    // const toggleReplace = () => {\n    //     console.log('toggle replace from: '+replacemode)\n    //     if(replacemode == true) {\n    //         setReplacemode(false)\n    //     } else {\n    //         setReplacemode(true)\n    //     }\n\n    // }\n    // // replace => { setReplace(!replace); return !replace }\n    // useHotkeys('ctrl+k', () => setCount(prevCount => prevCount + 1));\n    // useHotkeys(\"z\",() => setReplacemode(state => !state))\n    useHotkeys(\"z\",() => setReplacemode(count => count+=1))\n\n    useEffect(() => {\n        console.log('apppolygon: '+apppolygon)\n        setReplacemode(count => count+=1)\n        // if(apppolygon == '') {\n        //     setWindowSize(1000 * 60 * 60 * 24)\n        //     // setStartend({\n        //     //     start: null,\n        //     //     end: null\n        //     // })    \n            \n\n        // } else {\n        //     setWindowSize(1000 * 60 * 60 * 24 * 7)\n        // }\n        // // setGosearch(Math.random)\n    }, [apppolygon, mission]);\n\n    useEffect(() => {\n        console.log(\"cleaning searches: \" + replacemode)\n        // setReplace(replacemode)\n        if(replacemode) {\n            setReplace(true)\n            setSearchList([])\n            setGosearch(Math.random)\n        }\n    }, [replacemode]);\n\n\n    useEffect(() => {\n        // console.log('searchepoch: '+(new Date(searchepoch)).toJSON())\n        let SearchDate = new Date(searchepoch)\n        console.log('searchepoch: '+ SearchDate.toJSON())\n        let startepoch = (new Date(Date.UTC(SearchDate.getUTCFullYear(), SearchDate.getUTCMonth(), SearchDate.getUTCDate())))\n\n        // Catalogue search time window is discreet, set from 00:00:00 to 23:59:59 of the selected day \n        let _startdate = (new Date(startepoch.getTime())).toJSON()\n        let _enddate = (new Date(startepoch.getTime() + windowSize - 1000)).toJSON()\n\n        console.log('new start/end: '+_startdate + '/ ' + _enddate)\n\n        let newSearchList = searchList\n\n        if (newSearchList.indexOf(_startdate) < 0 || true) {\n            newSearchList.push(_startdate)\n            if (newSearchList.length > 5) {\n                // newSearchList.shift()\n                console.log('should now remove geojson layer')\n            }\n            setSearchList(newSearchList)\n            setStartend({\n                start: _startdate,\n                end: _enddate\n            })    \n            setGosearch(Math.random)\n        } else {\n            console.log('Search already done !')\n            \n        }\n    }, [searchepoch]);\n\n\n\n\nreturn [ startend ]\n\n}\n","import React, { useGlobal, useState, useEffect, useLayoutEffect } from \"reactn\"\nimport { useEww } from \"./useEww\"\n// import { useGlobal } from 'reactn'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport useDatahub from \"./useDatahub\"\n\n\nexport default function Eww({ id, clat, clon, alt, starfield, atmosphere, names }) {\n\nconst {\n    ewwstate,\n    addGeojson,\n    removeGeojson,\n    addWMS,\n    toggleProjection,\n    toggleAtmosphere,\n    toggleStarfield,\n    toggleNames,\n    setTime\n} = useEww({\n    id: id,\n    clat: clat,\n    clon: clon,\n    alt: alt,\n    starfield: starfield,\n    atmosphere: atmosphere,\n    names: names\n})\n\n  // toogle projection\n  useHotkeys(\"p\",toggleProjection)  \n  useHotkeys(\"a\",toggleAtmosphere)  \n  useHotkeys(\"s\",toggleStarfield)  \n  useHotkeys(\"n\",toggleNames)  \n  useHotkeys(\"c\",removeGeojson)\n  useHotkeys(\"z\",(state)=>setReplace(!state))\n  \n\n  const { geojsonResults, loading, firstpage} = useDatahub();\n  const [ searchepoch,  ] = useGlobal('searchepoch');\n  const [ startend,  ] = useGlobal('startend');\n  // const [ replace, setReplace ] = useGlobal('replace');\n\n  const [ replace,  setReplace] = useGlobal('replace');\n  const [ appdate,  ] = useGlobal('appdate')\n  const [ appstarfield,  setAppstarfield] = useGlobal('appstarfield')\n  const [ appatmosphere,  setAppatmosphere] = useGlobal('appatmosphere')\n  const [ appnames,  setAppnames] = useGlobal('appnames')\n  // const [ , setSearching ] = useGlobal('searching')\n  const [ , setAppaltitude ] = useGlobal('appaltitude')\n  const [ , setApplatitude ] = useGlobal('applatitude')\n  const [ , setApplongitude ] = useGlobal('applongitude')\n  const [ apppolygon, setApppolygon ] = useGlobal('apppolygon')\n  const [ apppickeditems, setApppickeditems ] = useGlobal('apppickeditems')\n  // const [ replace, setReplace ] = useState(true)\n\n  // useHotkeys(\"z\",()=>setReplace(state=>!state))\n\n  useEffect(() => {\n    if(geojsonResults) {\n      if(firstpage) removeGeojson()\n      console.log('datahub in use')\n        console.log(geojsonResults)\n        try {\n          addGeojson(geojsonResults,appdate)\n        } catch (err) {\n          console.log(\"error on geojson parsing\")\n          console.log(err)\n        }\n      }\n      \n  },[geojsonResults, firstpage]);\n\n  useEffect(() => {\n    console.log('replace: ' + replace)\n  },[replace]);\n\n  useEffect(() => {\n    // console.log('atmosphere')\n    toggleAtmosphere(appatmosphere)\n  },[appatmosphere])\n\n  useEffect(() => {\n    toggleStarfield(appstarfield)\n  },[appstarfield])\n\n  useEffect(() => {\n    toggleNames(appnames)\n  },[appnames])\n\n\n  useEffect(() => {\n    setReplace(loading)\n  },[loading]);\n\n  useEffect(() => {\n    setAppaltitude(ewwstate.altitude)\n    setApplongitude(ewwstate.longitude)\n    setApplatitude(ewwstate.latitude)\n  },[ewwstate.longitude,ewwstate.latitude, ewwstate.altitude ]);\n\n  // useEffect(() => {\n  //   // uncomment to search via polygon at low lats\n  //   // console.log(' could use polygon:')\n  //   // console.log(ewwstate.viewpolygon)\n  //   // setApppolygon(ewwstate.viewpolygon)\n\n  // },[ewwstate.viewpolygon ]);\n\n  useEffect(() => {\n    setApppolygon(ewwstate.aoi)\n    // setApppolygon('')\n  },[ewwstate.aoi]);\n\n  useEffect(() => {\n    // console.log(ewwstate.pickedItems.length + ' items picked')\n    // setApppolygon('')\n    setApppickeditems(ewwstate.pickedItems)\n  },[ewwstate.pickedItems]);\n\n\n\n  useEffect(() => {\n    // console.log('app date: '+appdate)\n    setTime(appdate)\n  },[appdate]);\n\n  useEffect(() => {\n    setAppatmosphere(atmosphere)\n    setAppstarfield(starfield)\n    setAppnames(names)\n    \n  },[]);\n\n\nlet globeStyle = {\n    background: 'inherit',\n    position: \"fixed\",\n    width: 'inherit',\n    height: 'inherit'\n  };\n\n\nreturn (\n    <canvas id={id} style={globeStyle} />\n)\n\n}\n","import React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './missionselector.css'\n\n\n// should use a prop\n\nfunction MissionSelector() {\n\n\n    const [ mission, setMission ] = useGlobal('mission');\n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2A')}) \n    useHotkeys(\"3\",()=>{setMission('S3')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MissionSelector'>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s2_black.png' alt='' onClick={() => setMission('S2A')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s2_black.png' alt='' onClick={() => setMission('S2B')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s5p_black.png' alt='' onClick={() => setMission('ENVISAT')} /></div>\n           \n            \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, { useEffect, useGlobal } from \"reactn\";\n// import { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './mapselector.css'\n\n\n// should use a prop\n\nfunction MapSelector() {\n\n\n    const [ appatmosphere, setAppatmosphere ] = useGlobal('appatmosphere');\n    const [ appstarfield, setAppstarfield ] = useGlobal('appstarfield');\n    const [ appnames, setAppnames ] = useGlobal('appnames');\n    // useHotkeys(\"1\",()=>{setMission('S1')}) \n    // useHotkeys(\"2\",()=>{setMission('S2')}) \n    // useHotkeys(\"3\",()=>{setMission('S3')}) \n    // useHotkeys(\"5\",()=>{setMission('S5P')}) \n    // useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelector'>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/atmosphere.png' alt='' onClick={() => setAppatmosphere(!appatmosphere)} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/starfield.png' alt='' onClick={() => setAppstarfield(!appstarfield)} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/names.png' alt='' onClick={() => setAppnames(!appnames)} /></div>\n           \n        </div>\n    )\n}\n\nexport default MapSelector\n","import React, { useEffect, useState, useLayoutEffect, useGlobal } from \"reactn\";\n// import { useGlobal } from 'reactn';\nimport \"./mapstatelabel.css\"\nimport { useHotkeys } from 'react-hotkeys-hook';\n\n\n\nfunction MapStateLabel() {\n\n    const [ appaltitude,  ] = useGlobal('appaltitude')\n    const [ apppickeditems, setApppickeditems ] = useGlobal('apppickeditems')\n    // let item = 'toto'\n    const [items, setItems] = useState([])\n    const [showQL, setShowQL] = useState(false)\n\n    useHotkeys(\"q\",()=>{setShowQL(showQL => !showQL)}) \n\n    useEffect(() => {\n        // console.log(apppickeditems)\n        // if (apppickeditems.length != 0) {\n        //     if (apppickeditems.length > 1) {\n        //         setItem(apppickeditems.length + ' items selected')\n        //     } else {\n        //         setItem(apppickeditems[0].userProperties.name)\n        //     }\n        //     // console.log(apppickeditems.length + ' items picked')\n        // } else {\n        //     setItem([])\n        // }\n        setItems(apppickeditems)\n      },[apppickeditems])\n    \n    // const [altitude, setAltitude] = useState()\n\n\n    // useLayoutEffect(() => {    \n    //     console.log('Altitude changed') \n    //     setAltitude(Math.ceil(appaltitude / 1000))\n    // },[appaltitude])\n\n    return (\n        <div className='MapStateLabel' >\n            <div style={{fontSize: 10}}>\n                {items.map( item => <div className='metadata' key={item.userProperties.name}>{item.userProperties.name}<img className='Quicklook' style={{display: showQL?'inline':'none'}} src={item.userProperties.quicklookUrl} alt=''/></div>)} \n            </div>\n            <div >{Math.ceil(appaltitude / 1000)+ ' Km'}</div>\n        </div>\n    )\n    // <div className='MonthLabel' key='month' style={highlight=='month'?{color: 'rgba(120,0,0,1)'}:{}} >{month}</div>\n\n\n    \n}\n\nexport default MapStateLabel;\n","import React from 'react';\nimport dateFormat from \"dateformat\"\nimport './DateLabel.css';\n\nfunction DateLabel({date, highlight, animated}) {\n\n\n    return (\n        <div className='LabelContainer' >\n            <div className='Date'>\n                <div className={highlight==='day' || highlight==='none'?'DayLabel':'DayLabel Greyedout'}  key='day'  >{dateFormat(date,'UTC:dd')}</div>\n                <div className='YearMonth'>\n                    <div className={highlight==='month' || highlight==='none'?'MonthLabel ':'MonthLabel  Greyedout'}  key='month' >{dateFormat(date,'UTC:mmm').toUpperCase()}</div>\n                    <div className={highlight==='year' || highlight==='none'?'YearLabel ':'YearLabel Greyedout'}  key='year' >{date.getUTCFullYear()}</div>\n                </div>\n            </div>\n            <div className={animated?'Line  Line-active':'Line'} key='line' ></div>\n            <div className={highlight==='time' || highlight==='none'?'TimeLabel ':'TimeLabel Greyedout'} key='time' >{dateFormat(date,'UTC:HH:MM:ss')}</div>\n        </div>\n    )\n}\nexport default DateLabel\n","import React, {useEffect, useState} from 'react';\nimport { useClock } from \"./useClock\"\nimport { useHotkeys } from 'react-hotkeys-hook'\n\n\nimport './DateController.css';\n\nfunction DateController({startdate, onDateChange}) {\n\n    const {\n        date,\n        // playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        // forceDate\n    } = useClock({\n        autoStart: false,\n        duration: 600000,\n        initdate: startdate\n    })\n\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",()=>{reset() })\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    \n\n\n    useEffect(() => {\n        // console.log(\"date from useClock: \"+new Date(date).toJSON())\n        onDateChange(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n\n    useEffect(() => {\n        // console.log(\"date from datemanager: \"+new Date(date).toJSON())\n        // forceDate(startdate)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[startdate]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 300) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n\n\n    return (\n        <div className='DateController' onClick={handleDoubleTap}/>\n    )\n}\nexport default DateController\n","// A refaire!!!\n\n\nimport { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, duration, initdate }) {\n    //console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    // let initDate = startdate\n    const [date, setDate] = useState(initdate)\n    const [playing, setPlaying] = useState(false)\n    // const [stepstate, setStepstate] = useState(1000*60*60)\n    // const [refreshrate, setrefreshrate] = useState(200)\n    \n    const step = useRef() \n    const refreshrate = useRef() \n    // step.current = 1000*60*60\n    refreshrate.current = 200\n    \n    const ldate = useRef()\n\n      // Control functions\n    const intervalRef = useRef()\n    const timeoutRef = useRef()\n    \n\n    // function increaseSpeed() {\n    //     setStep ( () => {\n    //         let newstate = (step > 0)? step * 2:step / 2\n    //         if(Math.abs(newstate) < refreshrate) newstate = refreshrate\n    //         return newstate\n    //     })\n    // }\n    // function decreaseSpeed() {\n    //     setStep (() => {\n    //         let newstate = (step > 0)? step / 2:step * 2\n    //         if(Math.abs(newstate) < refreshrate) newstate = refreshrate\n    //         return newstate\n    //     })\n    // }\n    function increaseSpeed() {\n        // stop()\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = refreshrate.current\n        console.log('step: '+step.current)\n        // setStepstate((st)=>st*2)\n        // start()\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshrate.current) step.current = -1 * refreshrate.current\n        // setStepstate((st)=>st/2)\n    }\n\n    function togglePause() {\n        if (playing) {\n            stop()\n        } else {\n            start()\n        }\n    }\n    \n    function start() {\n        console.log('start clock')\n        if(!step.current) step.current = 1000*60*60\n        intervalRef.current = setInterval( ()=>{\n            ldate.current += step.current\n            setDate(new Date(ldate.current))\n        },refreshrate.current)\n        setPlaying(true)\n    }\n    \n    function stop() {\n        console.log('stop clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        setPlaying(false)\n    }\n    \n\n    function reset() {\n        stop()\n        ldate.current = new Date().getTime()\n        setDate(new Date(ldate.current))\n\n    }\n\n     \n    function forceDate(newdate) {\n        console.log('forcedate useclock: '+newdate.toJSON())\n        if(playing) {\n            stop()\n            ldate.current = newdate.getTime()\n            start()    \n        } else {\n            ldate.current = newdate.getTime()\n        }\n    }\n\n    useEffect(() => {\n        console.log('init start useclock '+initdate.toJSON())\n        // if ( !playing )  ldate.current = initdate.getTime()\n        if ( playing ) {\n                stop()\n            ldate.current = initdate.getTime()\n            start()\n        } else {\n            ldate.current = initdate.getTime()\n        }  \n    }, [initdate])\n\n\n\n    // didMount effect\n    useEffect(() => {\n        console.log('render useclock')\n        // setDate((new Date()).getTime())\n        ldate.current = new Date().getTime()\n        if (autoStart) {\n            start();\n        }\n        //return reset;\n    }, []);\n\n  \n  return { date, playing, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, {useState, useEffect,useLayoutEffect, useRef} from 'react';\nimport {useSpring, animated} from 'react-spring'\nimport './DateSelector.css';\n\nfunction DateSelectorScale({date, zoomfactor, immediate}) {\n\n    const scale = useRef()\n    const [start, setStart] = useState(date)    \n    const [active, setActive] = useState(false)    \n    const [timescale, setTimescale] = useState('')    \n    // const [zoom, setZoom] = useState(zoomfactor)    \n\n\n    // useEffect(() => {     \n    //     setStart(date)\n    // },[date])\n        \n    const scaleText = (_start, _zoom) => {\n        // console.log('_start: '+_start.toJSON()+'  zoom: '+_zoom)\n        if(!scale.current) return\n            \n        const monthcode = ['JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC']\n        const isEven = num => ((num % 2) == 0) ? true : false;\n\n\n        let day, month, hour, year = 0\n        let lastday =0\n        let lastmonth = 0\n        let lastyear = 0\n        let lasthour = 0\n        let tics = []    \n        let putyear = (_zoom < 1000*60*60*24*30*10)\n        let putmonth = (_zoom < 1000*60*60*24*5)\n        let putday = (_zoom < 1000*60*60*2)\n        let putevenhour = (_zoom < 1000*60*20)\n        let puthour = (_zoom < 1000*60*8)\n        // console.log('  zoom: '+((_zoom*10)/(1000*60*60*24) ) +'  puthour: '+puthour+'  putday: '+putday+'  putmonth: '+putmonth+'  putevenhour: '+putevenhour)\n        let lastpos = 0\n        for ( let i=0 ; i < scale.current.offsetHeight ; i+=1 ) {\n            let refdate = new Date( (i- scale.current.offsetHeight/2) * _zoom + _start.getTime()  )\n            day = refdate.getUTCDate()\n            month = monthcode[refdate.getUTCMonth()]\n            hour = refdate.getUTCHours()\n            year = refdate.getUTCFullYear()\n\n            if (putevenhour) {\n                if(hour != lasthour) {\n                    if (hour != 0 &&  (isEven(hour) || puthour)) {\n                        tics.push({class:'HourTic', pos: i, label: hour})\n                    } else  {\n                        if (hour == 0) {\n                            tics.push({class:'DayTic', pos: i, label: day})\n                            tics.push({class:'MonthTic', pos: i, label: month})\n                            tics.push({class:'YearTic', pos: i, label: year})            \n                        }\n                    }\n                }\n    \n            } else if (putday) {\n                if(day !== lastday) {\n                    if (day != 1) {\n                        tics.push({class:'DayTic', pos: i, label: day})\n                    } else {\n                        tics.push({class:'DayTic', pos: i, label: day})\n                        tics.push({class:'MonthTic', pos: i, label: month})\n                        tics.push({class:'YearTic', pos: i, label: year})\n                     }\n                    \n                }\n    \n            } else if (putmonth) {\n                if(month !== lastmonth && lastday!=0 && putmonth) {\n                    if (month !== 'JAN') {\n                        tics.push({class:'MonthTic', pos: i, label: month})\n                    } else {\n                        tics.push({class:'MonthTic', pos: i, label: month})\n                        tics.push({class:'YearTic', pos: i, label: year})\n                    }\n                }\n    \n            } else if (putyear) {\n                if(year !== lastyear && lastmonth !== 0 ) {\n                    if (month !== 'JAN') {\n                        tics.push({class:'MonthTic', pos: i, label: month})\n                    } else {\n                        // tics.push({class:'MonthTic', pos: i, label: month})\n                        tics.push({class:'YearTic', pos: i, label: year})\n                    }\n                }\n    \n            }\n\n            lastday = day\n            lastyear = year\n            lastmonth = month\n            lasthour = hour\n        }\n        \n        return tics.map(item => (            <div className={item.class} key={item.class+item.pos} style={{top:item.pos}}>{item.label}</div>))\n    }\n\n    // useLayoutEffect(() => {\n    //     setTimescale(scaleText(date,zoomfactor))\n    // },[date,zoomfactor])\n\n\n    const [{ dater, zoomer }, set] = useSpring(() => ({ dater: date.getTime(), zoomer: zoomfactor}))\n    useLayoutEffect(() => {\n        // console.log('zoomfactor: '+zoomfactor+'  to: '+date.toJSON())\n        \n        set({ \n            to: {\n                zoomer: zoomfactor, \n                dater: date.getTime()\n            },\n            config: {  duration: 400},\n            immediate: false,\n            onFrame: ()=>{\n                // console.log(zoomer.value+'/ '+(new Date(dater.value)).toJSON())\n                // setTimescale(scaleText(new Date(dater.value),zoomer.value))\n                setTimescale(scaleText(new Date(dater.value),zoomer.value))\n            }\n        })\n\n    },[ zoomfactor])\n\n    useLayoutEffect(() => {\n        // console.log('zoomfactor: '+zoomfactor+'  to: '+date.toJSON())\n        \n        set({ \n            to: {\n                zoomer: zoomfactor, \n                dater: date.getTime()\n            },\n            config: {  duration: 400},\n            immediate: immediate,\n            onFrame: ()=>{\n                // console.log(zoomer.value+'/ '+(new Date(dater.value)).toJSON())\n                // setTimescale(scaleText(new Date(dater.value),zoomer.value))\n                setTimescale(scaleText(new Date(dater.value),zoomer.value))\n            }\n        })\n\n    },[date])\n\n\n    return (\n        <animated.div ref={scale} className='DateSelectorScale' >\n            {timescale}\n        </animated.div>\n    )\n}\nexport default DateSelectorScale\n","import React, {useState, useEffect, useLayoutEffect, useRef} from 'react'\nimport {useSpring, animated, config} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport { add, sub, scale } from 'vec-la'\nimport DateSelectorScale from './DateSelectorScale'\n\nimport './DateSelector.css';\n// import { start } from 'repl';\n\nfunction DateSelector({startdate, onDateChange, onFinalDateChange}) {\n    const STEPS_UP = [ 1000*60*60 ,  1000*60*60*24, 1000*60*60*24*15]\n    const STEPS_DOWN = [ 1000*60*60 , 1000*60*10, 1000*60*1.8, 1000*27, 1000*60*60*24]\n    \n\n    const selector = useRef()\n    const offset = useRef()\n    if(!offset.current) offset.current = [0, 0 ]\n    // offset.current = [0, 0 ]\n    const reflastscaledate = useRef()\n    const refscaledate = useRef()\n    // refscaledate.current = startdate\n    // offset.current=[0,0]\n    \n    const [scaledate, setScaledate ] = useState(startdate)\n    const [lastStartdate, setlLastStartdate ] = useState(startdate)\n    \n    const [newstart, setNewstart ] = useState(startdate)\n    // const [offset, setOffset ] = useState([0,0])\n    // const [step, setStep ] = useState(1)\n    const [active, setActive ] = useState(false)\n\n    // zoomfactor: how long is a pixel in ms\n    const [zoomfactor, setZoomfactor ] = useState(STEPS_UP[0])\n    const [scalezoom, setScalezoom ] = useState(zoomfactor)\n    const [immediate, setImmediate ] = useState(false)\n\n\n    const [{ xy }, set] = useSpring(() => ({ xy: [0,0] }))\n    // console.log('just defined spring: '+ offset.current)\n    if(!refscaledate.current) {\n        refscaledate.current = startdate\n    }\n\n    const bind = useGesture({\n\n        onDrag: ({  event, first, down, delta, velocity, direction, temp = {\n            xy: xy.getValue(),\n            laststeparea: 0,\n            deltaoffset: [0,0]\n            }\n        }) => {\n            let Xoffset = selector.current.parentElement.offsetWidth - (event.pageX?event.pageX:selector.current.parentElement.offsetWidth)\n            let Yoffset = (event.pageY?event.pageY:selector.current.parentElement.offsetHeight) - selector.current.offsetHeight/2\n\n            let steparea\n            let zoom\n\n            if(Yoffset > 0) {\n                steparea = Math.min(STEPS_UP.length-1,Math.floor((Xoffset-selector.current.offsetWidth)/60+1))\n                steparea = (steparea > STEPS_UP.length-1)?STEPS_UP.length:steparea\n                steparea = (steparea < 0)?0:steparea\n                zoom = STEPS_UP[steparea]\n            } else {\n                steparea = Math.min(STEPS_DOWN.length-1,Math.floor((Xoffset-selector.current.offsetWidth)/60+1))\n                steparea = (steparea > STEPS_DOWN.length-1)?STEPS_DOWN.length:steparea\n                steparea = (steparea < 0)?0:steparea\n                zoom = STEPS_DOWN[steparea]\n            }\n\n            // console.log(steparea)\n            let step = 1\n            // console.log(offset.current)\n            // if (Xoffset > selector.current.offsetWidth) steparea = 1\n            // if (Xoffset > selector.current.offsetWidth + 100) steparea = 2\n            \n            // for ( let i = 0 ; i < STEPS.length ; i++ ) {\n\n            // }\n            \n            if (steparea !== temp.laststeparea) {\n                \n                setZoomfactor(zoom)\n                setNewstart(scaledate)\n                temp.laststeparea = steparea\n                temp.xy = [0,0]\n                temp.deltaoffset = delta\n                \n            } \n\n            if (first) setActive(true)\n\n            velocity = (Math.abs(velocity)<.2)?0:velocity  \n            // console.log('velocity '+velocity) \n            \n            set({ \n                // xy: add(scale(sub(delta,temp.deltaoffset),step), temp.xy), \n                xy: add(scale(add(sub(delta,temp.deltaoffset),offset.current),step), temp.xy), \n                immediate: down, \n                config: { velocity: scale(direction, velocity*step), decay: true},\n                // config: { mass: 10, tension: 20 , friction: 40, precision: 1 },\n                // onFrame: ()=>{console.log('xy: '+xy.getValue())},\n                // config: config.gentle,\n                // config: {},\n                onFrame: ()=>{\n                    let newdate = new Date(newstart.getTime() - xy.getValue()[1] * zoomfactor)\n                    onDateChange(newdate)\n                    setScaledate(newdate)\n                    setlLastStartdate(newdate)\n                    refscaledate.current = newdate\n                    // offset.current = [0,0]\n                },\n                // onFrame: ()=>{onDateChange( olddate => new Date(olddate.getTime() + xy.getValue()[1] * 1000))},\n                // onFrame: setLiveDate(),\n                onRest: ()=>{\n                    if (!down) {\n                        // setTimeout(()=>setActive(false),1)\n                        setActive(false)\n                        let newdate = new Date(newstart.getTime() - xy.getValue()[1] * zoomfactor)\n                        onFinalDateChange(newdate)\n                        offset.current = [0,0]\n\n                    }\n                }\n            })\n            return temp\n        }\n    })\n\n\n    useEffect(() => {\n        // if(!active) onFinalDateChange(scaledate)  \n        \n        if(!active) {\n            offset.current[1] -= (startdate.getTime() - lastStartdate.getTime())  / zoomfactor\n            // console.log(offset.current[1]+ ' /  '+ (startdate.getTime() - lastStartdate.getTime()))\n            setScaledate(startdate)\n            setlLastStartdate(startdate)\n            onDateChange(startdate)\n        }\n    },[startdate])\n\n\n    return (\n        <animated.div {...bind()} className='DateSelector' ref={selector} >\n            <div className=\"Mask\"  >\n\n                <DateSelectorScale className='scale' date={scaledate} zoomfactor={zoomfactor} immediate={active}></DateSelectorScale>\n                \n                <div className=\"TriangleContainer\" >\n                    <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                        <polygon points=\"20,5 20,35 12,20\" />   \n                    </svg> \n                </div>        \n            </div>\n\n        </animated.div>\n                                  )\n}\nexport default DateSelector\n","import React, {useState, useEffect, useRef} from 'react';\nimport DateLabel from './components/datelabel'\nimport DateController from './components/datecontroller'\nimport DateSelector from './components/dateselector'\n\n\nfunction DateManager({startdate, onDateChange, onFinalDateChange, searching}) {\n\n    const [selectorStartdate, setselectorStartdate] = useState(startdate)\n    const [controllerStartdate, setcontrollerStartdate] = useState(startdate)\n    const [labeldate, setLabelDate] = useState(startdate)\n\n    const handleSelectorDateChange = (date) => {\n        // console.log('handleSelectorDateChange:' + date.toJSON())\n        setLabelDate(date)\n        onDateChange(date)\n        // setscontrollerStartdate(date)\n    }\n\n    const handleSelectorFinalDateChange = (date) => {\n        // console.log('handleSelectorFinalDateChange:' + date.toJSON())\n        setcontrollerStartdate(date)\n        onFinalDateChange(date)\n    }\n    \n    const handleControllerDateChange = (date) => {\n        // console.log('handleControllerDateChange' + date.toJSON())\n        setselectorStartdate(date)\n    }\n\n    useEffect(() => {\n        // console.log('startdate in date manager: '+startdate.toJSON())\n        setselectorStartdate(startdate)\n    },[startdate])\n\n\n\n    return (\n        <div >\n          <DateController startdate={controllerStartdate} onDateChange={handleControllerDateChange}/>\n          <DateLabel date={labeldate} highlight='none' animated={searching}/>\n          <DateSelector startdate={selectorStartdate} onDateChange={handleSelectorDateChange} onFinalDateChange={handleSelectorFinalDateChange}/>\n        </div>\n    ) \n}\nexport default DateManager","import React, { useEffect, useState } from \"react\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './debug.css'\n\n\n\n\nfunction Debug() {\n\n    const [ debug, setDebug ] = useGlobal('debug')\n    const [ active, setActive ] = useState(false)\n    const [ debugkeys, setDebugkeys ] = useState([])\n    \n\n    useHotkeys(\"d\",()=>{setActive(active => !active)}) \n\n    useEffect(() => {\n        console.log('Debug Overlay Key: d')\n    }, []);\n\n    useEffect(() => {\n        if(active) {\n            console.log('debug txt: ')\n            console.log(debug)\n            let lines = debugkeys\n            lines[debug[1]] = debug[0]\n            setDebugkeys( lines )\n            console.log(lines)\n        }\n    }, [debug]);\n\n\n    useEffect(() => {\n        setDebug( ['Hi',0])\n    }, []);\n\n//     const listItems = numbers.map((number) =>\n//     <li>{number}</li>\n//   );\n//   return (\n//     <ul>{listItems}</ul>\n//   )\n\n    return (\n        <div className='Debug' style={{display: (active)?'inline':'none', width: '100%', height:'100%'}}>\n            {/* <div className='ContinuousScroll' style={{position: 'relative', top: '70%', right:0, width: 60, height:'100%', background:  'rgba(22, 22, 20, 0.24)'}}/> */}\n            <div className='DebugBox1'>\n                <ul>\n                    {debugkeys.map(item=><li key={item?item[1]:''}>{item?item:'free'}</li>)}\n                </ul>\n            </div> \n        </div>\n    )\n}\n\nexport default Debug\n","import React, {useState, useLayoutEffect, useEffect, useRef } from \"react\";\nimport {useSpring, animated} from 'react-spring';\nimport { useGesture } from 'react-use-gesture'\nimport { useGlobal } from 'reactn'\nimport { add, sub, scale } from 'vec-la'\nimport \"./controlpanel.css\"\n\nexport default function SlidePanel(props) {\n\n    const [ , setDebug ] = useGlobal('debug')\n\n    const [visible, setVisible] = useState(true)\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\n\n    const slidePanel = useRef()\n\n    const toggle = () =>  {\n        setDebug(['toggle from: '+visible+' '+slidePanel.current.offsetWidth,2])\n        set({ xy: !visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n        setVisible(visible => !visible)\n    }\n\n    useEffect(() => {\n        setDebug(['visible: '+visible,1])\n        // set({ xy: visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n    },[visible])\n\n    useEffect(() => {\n        setTimeout(toggle,1000)\n        // set({ xy: visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n    },[])\n\n    const bind = useGesture({\n        onDrag: ({  first , event, direction, velocity, down,  delta, vxvy, temp={initTarget: '', xy: xy.getValue()}}) => {\n            // setDebug('tempX: '+add(temp.xy,delta)[0],1)\n            // setDebug('down: '+down,2)\n            if(first) temp.initTarget = event.target.getAttribute(\"class\")\n            if(temp.initTarget != 'ControlPanel') return\n            if(down) {\n                set({ xy: add(temp.xy,delta), immediate: true })\n                // set({ xy: newxy })\n            } else {\n                if(vxvy[0] > 0.2) {\n                    let config = {  velocity: scale(direction, velocity), decay: true, precision: 1 }\n                    setDebug(['visible: '+visible,1])\n                    set({ xy: [slidePanel.current.offsetWidth,0], immediate: false})\n                    setVisible(false)\n                } else {\n                    set({ xy: temp.xy, immediate: false })\n                }\n            }\n            return temp\n\n\n            // if(!down && vxvy[0] > 0.2) {\n            //     setVisible(state => !state)\n            // } else {\n\n            //     let newxy = add(temp.xy,delta)\n            //     setDebug('offsetWidth: '+slidePanel.current.offsetWidth)\n            //     // if(!down && vxvy[0] > 0.2) {\n            //     //     newxy = [slidePanel.current.offsetWidth,0]\n            //     // }\n                \n            //     set({ xy: newxy, immediate: down })\n            //     return temp\n\n            // }\n        }\n        },\n        { event: { passive: false } })\n\n\n    return (\n        <div>\n            <img className='Logo' draggable=\"false\" src={props.imageSrc} alt=''  onClick={toggle} />\n\n            <animated.div {...bind()} ref={slidePanel} className='ControlPanel' style={{ transform: xy.interpolate((x, y) => `translate3d(${x}px,0,0)`) }}>\n                    {props.children}\n            </animated.div>\n        </div>\n\n    )\n}","import React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\n\nimport { HuePicker, AlphaPicker } from 'react-color';\nimport './colorpicker.css'\n\n\n// should use a prop\n\nfunction ColorPicker() {\n\n\n    const [ appcolor, setAppcolor ] = useGlobal('appcolor');\n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    const handleChangeComplete = (color) => {\n        document.documentElement.style.setProperty('--color', color.hex);\n        //setAppcolor(color.hex );\n      };\n    \n    //console.log('mission rendering')\n    return (\n        <div className='ColorSelector'>\n            <HuePicker color={appcolor} onChangeComplete={handleChangeComplete }/>\n            \n            \n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default ColorPicker;\n","import React, { useState, useEffect } from \"react\";\nimport ClockController from \"./clockController\";\nimport Eww from \"./eww\";\nimport MissionSelector from \"./missionselector\";\nimport MapSelector from \"./mapselector\";\nimport Fullscreen from \"react-full-screen\";\nimport { useFullscreen } from '@straw-hat/react-fullscreen';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useGlobal } from 'reactn';\n\nimport \"./styles.css\"\nimport TimeSelector from \"./timeselector2\";\nimport TimeLabel from \"./timelabel\";\nimport MapStateLabel from \"./mapstatelabel\";\nimport DateManager from './datemanager'\n\nimport Debug from \"./debug\";\nimport SlidePanel from \"./slidepanel\";\nimport StepMask from './stepmask'\nimport ColorPicker from './colorpicker'\n\n\n\nconst App = () => {\n  //const [count, setCount] = useState(1000);\n  const [hasFetched, setFetch] = useState(false)\n\n  let initdate = new Date()\n  const [startdate, ] = useState(initdate)\n  // const [searching, ] = useState(false)\n  const [ searching, ] = useGlobal('searching')\n\n\n  const [ appdate, setAppdate ] = useGlobal('appdate')\n  const [, setSearchdate] = useGlobal('searchepoch')\n\n\n\n  \n  const [ mission, setMission ] = useGlobal('mission');\n    useEffect(() => {\n        console.log('Mission changed to: '+ mission)\n    }, [mission]);\n \n    const changeDate = (newdate) => {\n      // console.log('App changeDate callback: ' + newdate.toJSON())\n      setAppdate(newdate.getTime())\n    }\n    const changeFinalDate = (newdate) => {\n      // console.log('App final changeDate callback: ' + newdate.toJSON())\n      setSearchdate(newdate.getTime())\n    }\n    \n\n  \n  const [vertical, setVertical] = useState(true)\n  \n  useHotkeys(\"h\",() => {\n    setVertical(prevVertical => {\n        return (!prevVertical)\n      })\n    })\n\n\n  useEffect(() => {\n\n    const mockApi = () => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const randomInt = Math.ceil(Math.random() * 10)\n          console.log(\"mockApi done\")\n          resolve(randomInt)\n        }, 2000)\n      })\n    }\n    \n    async function doFetch() {\n      if (!hasFetched) {\n        const apiResponse = await mockApi();\n        setFetch(true);\n      }\n    }\n\n    doFetch()\n  }, []);\n  \n\n\n\n  const [isFull,setIsfull] = useState(false)\n  const { isFullscreen, toggleFullscreen } = useFullscreen(window.document.body);\n  // const [isControlPanel, setIscontrolpanel] = useState(false)\n  \n  useHotkeys(\"f\",toggleFullscreen )  \n  \n  //const [ appdate, setAppdate ] = useGlobal('appdate');\n  // const [ myname,  ] = useGlobal('appnames');\n  return (\n    <div className=\"App\">\n      <Fullscreen enabled={isFull} onChange={() =>  {if(!isFull) setIsfull(false)} }>\n\n      \n        {/* <div className=\"DateTimeLabel\" >\n          <TimeLabel vertical={vertical} />\n        </div>\n        \n        <div className=\"ClockController\">\n          <ClockController duration=\"600000\"/>\n        </div>  */}\n\n        <div className=\"Globe\">\n          <Eww id=\"globe\" starfield=\"true\" atmosphere='true' clon='0.5' clat='40' names='true'/>\n        </div>\n        <DateManager startdate={startdate}  searching={searching} onDateChange={changeDate} onFinalDateChange={changeFinalDate} />\n        \n        <div className='MissionLabel'>{mission}</div>\n        <MapStateLabel></MapStateLabel>\n        <SlidePanel active='false' imageSrc='./images/ESA_logo_white.png' >\n          <MissionSelector></MissionSelector>\n          <MapSelector></MapSelector>\n          <ColorPicker />\n        </SlidePanel>\n\n        <Debug action='Bonjour'/>\n\n      </Fullscreen>\n   </div>\n  );\n}\n\n\n        // <ControlPanel active='false' imageSrc='./images/EOi_logo.png' >\n        //         <MissionSelector></MissionSelector>\n        //         <MapSelector></MapSelector>\n        // </ControlPanel>\n\n// <ColorPicker />\n//         <StepMask/>\n\n        // <div className='MiniGlobe' >\n        //   <Eww id='miniglobe' clon='0.5' clat='40' myname={myname}/>  \n        // </div>  \n\n                // <img className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>setIscontrolpanel((isControlPanel => !isControlPanel))} />\n\n\n\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()).getTime())\n\n    // Set current time as global state\n    // setGlobal({appdate: ((new Date()).getTime())})\n    // setGlobal({searchepoch: ((new Date()).getTime())})\n    // setGlobal({mission: 'S1'})\n    // setGlobal({searching: false})\n    // setGlobal({apppolygon: ''})\n    // setGlobal({replace: true})\n    // setGlobal({startend: {start:0, end:0}})\n    // setGlobal({setApppickeditems: []})\n\n\n    setGlobal({\n        appdate: (new Date()).getTime(),\n        searchepoch: (new Date()).getTime(),\n        mission: 'S1',\n        searching: false,\n        apppolygon: '',\n        replace: true,\n        startend: {start:0, end:0},\n        apppickeditems: []\n    })\n    \n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./app\";\nimport {initGlobalStates} from \"./initglobalstates\"\nimport registerServiceWorker from './registerServiceWorker';\n\n// if you're in create-react-app import the files as:\n// import store from \"./js/store/index\";\n// import App from \"./js/components/App.jsx\";\ninitGlobalStates()\n\nrender(\n  <App />,\n  // The target element might be either root or app,\n  // depending on your development environment\n  // document.getElementById(\"app\")\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();"],"sourceRoot":""}