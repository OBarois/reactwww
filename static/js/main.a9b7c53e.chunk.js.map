{"version":3,"sources":["../node_modules/typescript/lib sync","useClock.js","clockController.js","dhusToGeojson.js","useDatahub.js","eww.js","useEww.js","missionselector.js","timeselector.js","timelabel.js","mapstatelabel.js","debug.js","mapselector.js","controlpanel.js","app.js","registerServiceWorker.js","initglobalstates.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useClock","_ref","autoStart","duration","initDate","startdate","_useState","useState","_useState2","Object","slicedToArray","date","setDate","_useState3","_useState4","playing","setPlaying","ldate","useRef","refreshRate","intervalRef","step","timeoutRef","start","console","log","current","setInterval","incrementDate","setTimeout","togglePause","clearTimeout","clearInterval","undefined","useEffect","Date","getTime","reset","increaseSpeed","Math","abs","decreaseSpeed","forceDate","newdate","ClockController","_useGlobal","useGlobal","_useGlobal2","appdate","setAppdate","_useClock","useHotkeys","lastTap","setLasttap","react_default","a","createElement","className","onClick","now","dhusToGeojson","response","features","feed","entry","map","item","reshuffle","array","json","i","length","name","content","hubItem","assign","int","double","str","sizeInBytes","sizeArray","size","split","round","parseFloat","title","geometry","wellknown","footprint","type","properties","updated","ingestiondate","beginposition","endposition","links","data","href","link","earthObservation","parentIdentifier","status","acquisitionInformation","platform","platformShortName","platformname","platformSerialIdentifier","platformserialidentifier","sensor","instrument","instrumentshortname","operationalMode","sensoroperationalmode","acquisitionParameter","acquisitionStartTime","acquisitionStopTime","relativePassNumber","parseInt","relativeorbitnumber","orbitNumber","orbitnumber","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","orbitdirection","productInformation","productType","producttype","err","message","mapFromHubOpenSearch","filter","totalResults","startIndex","itemsPerPage","useDatahub","searchURLs","geojsonResults","setGeojsonResults","loading","setLoading","_useState5","_useState6","isfirstpage","setIsfirstPage","searchdate","_useGlobal3","mission","_useState7","_useState8","searchUrl","setSearchurl","_useState9","totalresults","startindex","itemsperpage","_useState10","pagination","setPagination","asyncToGenerator","regenerator_default","mark","_callee","geoJson","wrap","_context","prev","next","fetch","mode","credentials","sent","Number","t0","stop","apply","this","arguments","fetchURL","url","replace","dateFormat","windowSize","_unused2","_unused3","Eww","clat","clon","alt","starfield","atmosphere","names","_useEww","eww","setProjection","geojsonlayers","setGeojsonlayers","latitude","longitude","altitude","ewwstate","setEwwState","setGlobeStates","lo","navigator","lookAtLocation","la","al","range","WorldWind","WorldWindow","redrawCallbacks","push","wmsConfigBg","service","layerNames","numLevels","format","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","wmsConfigNames","configuration","baseUrl","slice","starFieldLayer","StarFieldLayer","atmosphereLayer","AtmosphereLayer","minActiveAltitude","layers","layer","WmsLayer","enabled","l","addLayer","time","goToAnimator","travelTime","goTo","Position","redraw","deepPicking","removeGeojson","removeLayer","addGeojson","renderableLayer","RenderableLayer","ceil","random","GeoJSONParser","load","concat","toConsumableArray","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","Color","labelAttributes","offset","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","attributes","isLineStringType","isMultiLineStringType","drawOutline","outlineColor","interiorColor","red","green","blue","outlineWidth","isPolygonType","isMultiPolygonType","ShapeAttributes","addWMS","config","toggleStarfield","toggleAtmosphere","setTime","epoch","toggleProjection","prevProj","supportedProjections","newProj","indexOf","globe","projection","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","toggleNames","useEww","_useDatahub","_useGlobal5","_useGlobal7","_useGlobal8","appstarfield","setAppstarfield","_useGlobal9","_useGlobal10","appatmosphere","setAppatmosphere","_useGlobal11","_useGlobal12","appnames","setAppnames","_useGlobal13","setSearching","_useGlobal15","setAppaltitude","_useGlobal17","setApplatitude","_useGlobal19","setApplongitude","reactn_default","style","background","position","width","height","MissionSelector","setMission","src","TimeSelector","props","wid","zoomfactor","max","min","hei","vertical","setSearchdate","setHighlight","livePosition","setLiveposition","active","setActive","setStep","myvertical","timecontainer","_useSpring","useSpring","xy","_useSpring2","set","bind","useGesture","onDrag","down","delta","velocity","direction","_ref$temp","wheeling","first","last","temp","getValue","deltaOffset","lastNewxy","deltaFactor","lastStep","lastIncrement","lastDown","scale","parentElement","offsetHeight","div","sub","newxy","add","pow","minX","offsetTop","maxX","mass","tension","friction","precision","immediate","onRest","_ref3","onFrame","_ref2","timescale","setTimescale","useLayoutEffect","day","month","lastday","monthcode","year","lastmonth","tics","dayclass","monthclass","yearclass","getUTCDate","getUTCMonth","getUTCHours","getUTCFullYear","class","pos","label","key","top","left","scaleText","offsetWidth","zoom","points","ref","web","transform","interpolate","x","y","TimeLabel","highlight","searching","setYear","setMonth","setDay","MapStateLabel","appaltitude","Debug","action","debug","setDebug","display","right","MapSelector","_useGlobal4","_useGlobal6","ControlPanel","styleOn","opacity","marginRight","styleOff","renderprops","from","to","src_missionselector","src_mapselector","App","hasFetched","setFetch","setVertical","prevVertical","mockApi","Promise","randomInt","_doFetch","doFetch","isFull","setIsfull","_useFullscreen","useFullscreen","window","document","body","toggleFullscreen","isFullscreen","_useState11","_useState12","isControlPanel","setIscontrolpanel","dist_default","onChange","src_timelabel","clockController","src_timeselector","src_mapstatelabel","src_controlpanel","src_debug_0","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","setGlobal","render","app","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6PAAA,SAAAA,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,yRCLO,SAASC,EAATC,GAAsD,IAAlCC,EAAkCD,EAAlCC,UAAWC,EAAuBF,EAAvBE,SAI9BC,EAJqDH,EAAbI,UAAaC,EAKjCC,mBAASH,GALwBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAKlDK,EALkDH,EAAA,GAK5CI,EAL4CJ,EAAA,GAAAK,EAM3BN,oBAAS,GANkBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAMlDE,EANkDD,EAAA,GAMzCE,EANyCF,EAAA,GAOnDG,EAAQC,mBAGRC,EAAc,GAWpB,IAAMC,EAAcF,mBACdG,EAAOH,iBAAOC,GACdG,EAAaJ,mBAYnB,SAASK,IACLC,QAAQC,IAAI,mCAAmCtB,EAAS,IAAK,SACxDiB,EAAYM,UACbN,EAAYM,QAAUC,YAAY,kBA1B1C,SAAuBN,GAEnBJ,EAAMS,SAAWL,EAEjBT,EAAQK,EAAMS,SAsB8BE,CAAcP,EAAKK,UAAUP,GACrEH,GAAW,IAEfM,EAAWI,QAAUG,WAAW,WAC5BC,KAEC3B,GAGT,SAAS2B,IACLN,QAAQC,IAAI,gBACTH,EAAWI,SAASK,aAAaT,EAAWI,SAC3CN,EAAYM,SACZV,GAAW,GACXgB,cAAcZ,EAAYM,SAC1BN,EAAYM,aAAUO,GACnBV,IAiCb,OAVEW,oBAAU,WACNtB,GAAS,IAAIuB,MAAQC,WACrBnB,EAAMS,QAAUf,EACZT,GACAqB,KAGL,IAGE,CAAEZ,OAAMI,UAASe,cAAaO,MA9BnC,WACIb,QAAQC,IAAI,SACRL,EAAYM,UACZM,cAAcZ,EAAYM,SAC1BN,EAAYM,aAAUO,EACtBjB,GAAW,IAEf,IAAIZ,GAAY,IAAI+B,MAAQC,UAC5Bf,EAAKK,QAAUP,EACfP,EAAQR,GACRa,EAAMS,QAAUtB,GAoBsBkC,cA7D1C,WACIjB,EAAKK,QAAWL,EAAKK,QAAU,EAAIL,EAAKK,SAAW,EAAEL,EAAKK,SAAW,EAClEa,KAAKC,IAAInB,EAAKK,SAAWP,IAAaE,EAAKK,QAAUP,IA2DHsB,cAzDzD,WACIpB,EAAKK,QAAWL,EAAKK,QAAU,EAAIL,EAAKK,SAAW,EAAEL,EAAKK,SAAW,EAClEa,KAAKC,IAAInB,EAAKK,SAAWP,IAAaE,EAAKK,SAAW,EAAIP,IAuDOuB,UAhBxE,SAAmBC,GACf1B,EAAMS,QAAUiB,+BCOTC,MAzEf,SAAA3C,GAAuC,IAAZE,EAAYF,EAAZE,SAAY0C,EAEHC,oBAAU,WAFPC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAE3BG,EAF2BD,EAAA,GAElBE,EAFkBF,EAAA,GAAAG,EAY/BlD,EAAS,CACTE,WAAW,EACXC,SAAUA,EACVE,UAAW2C,IAVXrC,EAL+BuC,EAK/BvC,KAEAmB,GAP+BoB,EAM/BnC,QAN+BmC,EAO/BpB,aACAO,EAR+Ba,EAQ/Bb,MACAC,EAT+BY,EAS/BZ,cACAG,EAV+BS,EAU/BT,cACAC,EAX+BQ,EAW/BR,UAQJS,YAAW,IAAIrB,GACfqB,YAAW,IAAId,GACfc,YAAW,IAAIb,GACfa,YAAW,IAAIV,GAMfP,oBAAU,WAENe,EAAWtC,IAGb,CAACA,IAEHuB,oBAAU,WAGNQ,EAAUM,IAEZ,CAACA,IAEHd,oBAAU,WAGNQ,EAAUM,IACZ,IA9CiC,IAAA1C,EAgDLC,qBAhDKC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAgD5B8C,EAhD4B5C,EAAA,GAgDnB6C,EAhDmB7C,EAAA,GA4DnC,OASA8C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,kBAAkBC,QApBV,WACpBlC,QAAQC,IAAI,WACZ,IAAMkC,EAAMxB,KAAKwB,MACbP,GAAYO,EAAMP,EAAW,IAC/Bf,KAEEgB,EAAWM,GACX7B,kDC/DG,SAAS8B,EAAcC,GA+FlC,IAAIC,EAAW,GACf,IAEQA,EADAD,EAASE,KAAKC,MACHH,EAASE,KAAKC,MAAMC,IAAK,SAAAC,GAAI,OA/FhD,SAA8BA,GAC1B,SAASC,EAAUC,GAEf,IADA,IAAIC,EAAO,GACHC,EAAE,EAAGA,EAAIF,EAAMG,OAAQD,IAC3BD,EAAKD,EAAME,GAAGE,MAASJ,EAAME,GAAGG,QAEpC,OAAOJ,EAGX,IACI,IAAIK,EAAU,GACXR,EAAKvD,MAAMF,OAAOkE,OAAOD,EAAQP,EAAUD,EAAKvD,OAChDuD,EAAKU,KAAKnE,OAAOkE,OAAOD,EAAQP,EAAUD,EAAKU,MAC/CV,EAAKW,QAAQpE,OAAOkE,OAAOD,EAAQP,EAAUD,EAAKW,SAClDX,EAAKY,KAAKrE,OAAOkE,OAAOD,EAAQP,EAAUD,EAAKY,MAGlD,IACIC,EADAC,EAAYN,EAAQO,KAAKC,MAAM,KAEnC,OAAQF,EAAU,IACd,IAAK,IACDD,EAAcxC,KAAK4C,MAAMC,WAAWJ,EAAU,KAC9C,MACJ,IAAK,KACDD,EAAcxC,KAAK4C,MAA+B,KAAzBC,WAAWJ,EAAU,KAC9C,MACJ,IAAK,KACDD,EAAcxC,KAAK4C,MAA+B,KAAzBC,WAAWJ,EAAU,IAAS,MACvD,MACJ,IAAK,KACDD,EAAcxC,KAAK4C,MAA+B,KAAzBC,WAAWJ,EAAU,IAAS,KAAK,MAC5D,MACJ,QACID,EAAcxC,KAAK4C,MAAMC,WAAWJ,EAAU,KAoDtD,MA9Cc,CACVjF,GAAImE,EAAKmB,MACTC,SAAUC,IAAUb,EAAQc,WAC5BC,KAAM,UACNC,WAAY,CACRC,QAAS,IAAIxD,KAAKuC,EAAQkB,eAC1BP,MAAOnB,EAAKmB,MACZb,KAAMN,EAAKmB,MACX1E,KAAM+D,EAAQmB,cAAgB,IAAMnB,EAAQoB,YAC5CC,MAAO,CACHC,KAAM,CAAC,CACHC,KAAM/B,EAAKgC,KAAK,GAAGD,QAG3BE,iBAAkB,CACdC,iBAAkB,GAClBC,OAAQ,WACRC,uBAAwB,CAAC,CACrBC,SAAU,CACNC,kBAAmB9B,EAAQ+B,aAC3BC,yBAA0BhC,EAAQiC,0BAEtCC,OAAQ,CACJC,WAAYnC,EAAQoC,oBACpBC,gBAAiBrC,EAAQsC,uBAE7BC,qBAAsB,CAClBC,qBAAsB,IAAI/E,KAAKuC,EAAQmB,eACvCsB,oBAAqB,IAAIhF,KAAKuC,EAAQoB,aACtCsB,mBAAoBC,SAAS3C,EAAQ4C,qBACrCC,YAAaF,SAAS3C,EAAQ8C,aAC9BC,2BAA4B,KAC5BC,0BAA2B,KAC3BC,eAAgBjD,EAAQkD,kBAIhCC,mBAAoB,CAChBC,YAAapD,EAAQqD,YAErB9C,KAAMF,MAOxB,MAAOiD,GAEL,OADAxG,QAAQC,IAAI,iCAAiCuG,EAAIC,SAC1C,IAOsCC,CAAqBhE,KAAOiE,OAAO,SAAAjE,GAAI,OAAIA,IAAS,KAEtF,GAGjB,MAAO8D,GACLxG,QAAQC,IAAIoC,GACZrC,QAAQC,IAAI,WACZD,QAAQC,IAAIuG,GACZlE,EAAW,GAgBf,MAbc,CACN2B,KAAM,oBACN1F,GAAI,SACJ2F,WAAY,CACR0C,aAAcvE,EAASE,KAAK,2BAC5BsE,WAAaxE,EAASE,KAAK,yBAA0BF,EAASE,KAAK,yBAAyB,EAC5FuE,aAAczE,EAASE,KAAK,2BAC5BsB,MAAO,uBACPM,QAAS,IAAIxD,MAEjB2B,SAAUA,+BClHP,SAASyE,IAEpB,IAAIC,EAAa,GAGjBA,EAAU,GAAS,mNACnBA,EAAU,GAAS,uNACnBA,EAAU,GAAS,2RACnBA,EAAU,IAAU,6SACpBA,EAAU,QAAc,6IAGxB,IAZiClI,EAcWC,mBAAS,IAdpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAc1BmI,EAd0BjI,EAAA,GAcVkI,EAdUlI,EAAA,GAAAK,EAeHN,oBAAS,GAfNO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAe1B8H,EAf0B7H,EAAA,GAejB8H,EAfiB9H,EAAA,GAAA+H,EAgBKtI,oBAAS,GAhBduI,EAAArI,OAAAC,EAAA,EAAAD,CAAAoI,EAAA,GAgB1BE,EAhB0BD,EAAA,GAgBbE,EAhBaF,EAAA,GAAAjG,EAkBRC,oBAAU,cAA3BmG,EAlByBxI,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAAAqG,EAmBXpG,oBAAU,WAAxBqG,EAnByB1I,OAAAC,EAAA,EAAAD,CAAAyI,EAAA,MAAAE,EAoBI7I,mBAAS,IApBb8I,EAAA5I,OAAAC,EAAA,EAAAD,CAAA2I,EAAA,GAoBzBE,EApByBD,EAAA,GAoBdE,EApBcF,EAAA,GAAAG,EAsBKjJ,mBAAS,CAACkJ,aAAa,EAAGC,WAAW,EAAGC,aAAa,IAtB1DC,EAAAnJ,OAAAC,EAAA,EAAAD,CAAA+I,EAAA,GAsBzBK,EAtByBD,EAAA,GAsBbE,EAtBaF,EAAA,GA2GjC,OAlFA1H,oBAAU,YACQ,eAAAjC,EAAAQ,OAAAsJ,EAAA,EAAAtJ,CAAAuJ,EAAAzG,EAAA0G,KAAG,SAAAC,IAAA,IAAArG,EAAAQ,EAAA8F,EAAA,OAAAH,EAAAzG,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEb/I,QAAQC,IAAI,WAAY6H,GAFXe,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIcC,MAAMlB,EAAW,CAACmB,KAAM,OAAQC,YAAa,YAJ3D,cAIH7G,EAJGwG,EAAAM,KAAAN,EAAAE,KAAA,EAKU1G,EAASQ,OALnB,OAKHA,EALGgG,EAAAM,KAMHR,EAAuB,YAAZhB,EAAwB9E,EAAOT,EAAcS,GAC9D7C,QAAQC,IAAI,iBAAmB0I,EAAQzE,WAAW0C,cAClD0B,EACI,CACAL,aAAcmB,OAAOT,EAAQzE,WAAW0C,cACxCsB,WAAakB,OAAOT,EAAQzE,WAAW2C,YACvCsB,aAAeiB,OAAOT,EAAQzE,WAAW4C,gBAE1CsC,OAAOT,EAAQzE,WAAW0C,aAAa,IAAIM,EAAkByB,GAChEnB,EAAgBa,EAAWH,WAAaG,EAAWF,aAAeE,EAAWJ,cAC7EjI,QAAQC,IAA6F,QAhB5F4I,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAmBT7I,QAAQC,IAAI,2BAEZmH,GAAW,GArBF,yBAAAyB,EAAAS,SAAAZ,EAAA,kBAAH,yBAAAjK,EAAA8K,MAAAC,KAAAC,aAAA,EAyBdC,CAAS5B,IACV,CAACA,IAEJpH,oBAAU,WAEN,GADAV,QAAQC,IAAIoI,GACTA,EAAWH,WAAaG,EAAWF,aAAeE,EAAWJ,aAAc,CAC1E,IAAI0B,EAAM3C,EAAWW,GACrB3H,QAAQC,IAAI,mBAEZ,IAGI0J,GADAA,GADAA,EAAMA,EAAIC,QAAQ,UAAWC,IAAW,IAAIlJ,KAAK8G,EAAaqC,MAAc,oBAClEF,QAAQ,QAASC,IAAW,IAAIlJ,KAAK8G,EAAaqC,MAAc,oBAChEF,QAAQ,eAAgBvB,EAAWH,WAAaG,EAAWF,cAErEJ,EAAa4B,GAEf,MAAAI,GACE/J,QAAQC,IAAI,uBACZmH,GAAW,SAGfA,GAAW,IAEhB,CAACiB,IAEJ3H,oBAAU,WACNV,QAAQC,IAAI,kBAAkB0H,IAC/B,IAEHjH,oBAAU,WAEN,GAAGiH,GAAWF,EAAY,CAEtB,IAAIkC,EAAM3C,EAAWW,GAErB,IAGIgC,GADAA,GADAA,EAAMA,EAAIC,QAAQ,UAAWC,IAAW,IAAIlJ,KAAK8G,EAAaqC,MAAc,oBAClEF,QAAQ,QAASC,IAAW,IAAIlJ,KAAK8G,EAAaqC,MAAc,oBAChEF,QAAQ,eAAgB,GAClCxC,GAAW,GAEXW,EAAa4B,GAEf,MAAAK,GACEhK,QAAQC,IAAI,0BAIrB,CAACwH,EAAYE,IAQT,CAACV,iBAAgBE,UAASI,eC5GtB,SAAS0C,EAATxL,GAAoE,IAArDF,EAAqDE,EAArDF,GAAI2L,EAAiDzL,EAAjDyL,KAAMC,EAA2C1L,EAA3C0L,KAAMC,EAAqC3L,EAArC2L,IAAKC,EAAgC5L,EAAhC4L,UAAWC,EAAqB7L,EAArB6L,WAAYC,EAAS9L,EAAT8L,MAASC,ECH5E,SAAA/L,GAAuE,IAArDF,EAAqDE,EAArDF,GAAI4L,EAAiD1L,EAAjD0L,KAAMD,EAA2CzL,EAA3CyL,KAAME,EAAqC3L,EAArC2L,IAAKC,EAAgC5L,EAAhC4L,UAAWC,EAAqB7L,EAArB6L,WAAYC,EAAS9L,EAAT8L,MAG3DE,EAAM/K,iBAAO,MAHuDZ,EAItCC,mBAAS,MAJ6BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIvD4L,GAJuD1L,EAAA,GAAAA,EAAA,IAAAK,EAKhCN,mBAAS,IALuBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAKnEsL,EALmErL,EAAA,GAKpDsL,EALoDtL,EAAA,GAAA+H,EAM1CtI,mBAAS,CAAC8L,SAAUX,EAAMY,UAAWX,EAAMY,SAAUX,IANX9C,EAAArI,OAAAC,EAAA,EAAAD,CAAAoI,EAAA,GAMnE2D,EANmE1D,EAAA,GAMzD2D,EANyD3D,EAAA,GAoJpE4D,EAAiB,WACnB,IAAIC,EAAKV,EAAIvK,QAAQkL,UAAUC,eAAeP,UAC1CQ,EAAKb,EAAIvK,QAAQkL,UAAUC,eAAeR,SAC1CU,EAAKd,EAAIvK,QAAQkL,UAAUI,MAE/BP,EAAY,CACRH,UAAUK,EACVN,SAAUS,EACVP,SAAUQ,KA6DpB,OAvDE7K,oBAAU,WACNV,QAAQC,IAAI,wCAAyCoK,EAAU,IAAIC,GAEnEG,EAAIvK,QAAU,IAAIuL,IAAUC,YAAYnN,GACxCkM,EAAIvK,QAAQyL,gBAAgBC,KAAKV,GAEjC,IAAIW,EAAc,CACdC,QAAS,gCACTC,WAAY,mBACZC,UAAW,GACXC,OAAQ,YACRxI,KAAM,IACNyI,OAAQT,IAAUU,OAAOC,YACzBC,eAAgB,IAAIZ,IAAUa,SAAS,GAAI,KAG3CC,EAAiB,CACjBT,QAAS,gCACTC,WAAY,iBACZC,UAAW,GACXC,OAAQ,YACRxI,KAAM,IACNyI,OAAQT,IAAUU,OAAOC,YACzBC,eAAgB,IAAIZ,IAAUa,SAAS,GAAI,KAE/Cb,IAAUe,cAAcC,QAAUhB,IAAUe,cAAcC,QAAQC,MAAM,GAAG,GAC3E,IAAIC,EAAiB,IAAIlB,IAAUmB,eAC/BC,EAAkB,IAAIpB,IAAUqB,gBAAgB,qCACpDD,EAAgBE,kBAAoB,IASpC,IAPA,IAAIC,EAAS,CACT,CAAEC,MAAO,IAAIxB,IAAUyB,SAASrB,EAAa,IAAKsB,SAAS,GAC3D,CAAEF,MAAO,IAAIxB,IAAUyB,SAASX,EAAgB,IAAKY,QAAS5C,GAC9D,CAAE0C,MAAON,EAAgBQ,QAAS9C,GAClC,CAAE4C,MAAOJ,EAAiBM,QAAS7C,IAG9B8C,EAAI,EAAGA,EAAIJ,EAAOjK,OAAQqK,IAC/BJ,EAAOI,GAAGH,MAAME,QAAUH,EAAOI,GAAGD,QACpC1C,EAAIvK,QAAQmN,SAASL,EAAOI,GAAGH,OAGnCN,EAAeW,KAAO,IAAI3M,KAC1BkM,EAAgBS,KAAO,IAAI3M,KAC3BN,WAAW,WACPoK,EAAIvK,QAAQqN,aAAaC,WAAa,IACtC/C,EAAIvK,QAAQuN,KAAK,IAAIhC,IAAUiC,SAASxD,EAAMC,EAAMC,IACpDK,EAAIvK,QAAQyN,UACT,KAEPlD,EAAIvK,QAAQyN,SACZlD,EAAIvK,QAAQ0N,aAAc,GAC3B,IAGE,CAAE5C,WAAU6C,cAtIjB,WACI7N,QAAQC,IAAI,4BACZD,QAAQC,IAAI0K,GACZ,IAAI,IAAI7H,EAAE,EAAEA,EAAE6H,EAAc5H,OAAOD,IACjC2H,EAAIvK,QAAQ4N,YAAYnD,EAAc7H,IACtC9C,QAAQC,IAAI,0BACZD,QAAQC,IAAI0K,EAAc7H,IAE5B8H,EAAiB,IACjB5K,QAAQC,IAAI0K,GACZF,EAAIvK,QAAQyN,UA4HgBI,WA5LhC,SAAoBpE,GA2ChB,IAAIqE,EAAkB,IAAIvC,IAAUwC,gBAAgBtE,EAAIzF,WAAWC,QAAQpD,KAAKmN,KAAqB,IAAhBnN,KAAKoN,WAE1F1D,EAAIvK,QAAQmN,SAASW,GAIP,IAAIvC,IAAU2C,cAAczE,GAClC0E,KAdR,WAEIzD,EAAiB,SAACD,GAAD,SAAA2D,OAAArP,OAAAsP,EAAA,EAAAtP,CAAqB0L,GAArB,CAAmCqD,MACpDvD,EAAIvK,QAAQyN,UAtChB,SAAoC7J,EAAUI,GAC1C,IAAIsI,EAAgB,GAEhBgC,EAAsB,IAAI/C,IAAUgD,oBAAoB,MA4B5D,OA3BAD,EAAoBE,WAAa,GACjCF,EAAoBG,WAAa,IAAIlD,IAAUmD,MAAM,EAAG,EAAG,EAAG,IAC9DJ,EAAoBK,gBAAgBC,OAAS,IAAIrD,IAAUsD,OACvDtD,IAAUuD,gBAAiB,EAC3BvD,IAAUuD,gBAAiB,GAI3BlL,EAASmL,eAAiBnL,EAASoL,mBACnC1C,EAAc2C,WAAa,IAAI1D,IAAUgD,oBAAoBD,GAEtD1K,EAASsL,oBAAsBtL,EAASuL,yBAC/C7C,EAAc2C,WAAWG,aAAc,EACvC9C,EAAc2C,WAAWI,aAAe,IAAI9D,IAAUmD,MAClD,GAAMpC,EAAc2C,WAAWK,cAAcC,IAC7C,GAAMjD,EAAc2C,WAAWK,cAAcE,MAC7C,GAAMlD,EAAc2C,WAAWK,cAAcG,KAC7C,GAEJnD,EAAc2C,WAAWS,aAAe,IACjC9L,EAAS+L,iBAAmB/L,EAASgM,wBAC5CtD,EAAc2C,WAAa,IAAI1D,IAAUsE,gBAAgB,MACzDvD,EAAc2C,WAAWK,cAAgB,IAAI/D,IAAUmD,MAAM,EAAG,EAAG,EAAG,IACtEpC,EAAc2C,WAAWI,aAAe,IAAI9D,IAAUmD,MAAM,EAAG,EAAG,EAAG,KAIlEpC,GAkBoDwB,IA0IvBgC,OAzH5C,SAAgBC,GACC,IAAIxE,IAAUyB,SAAS+C,EAAQ,KAwHIC,gBAzMpD,WACIlQ,QAAQC,IAAI,mBACZwK,EAAIvK,QAAQ8M,OAAO,GAAGG,SAAW1C,EAAIvK,QAAQ8M,OAAO,GAAGG,QACvD1C,EAAIvK,QAAQyN,UAsMqDwC,iBAhNrE,WACInQ,QAAQC,IAAI,oBACZwK,EAAIvK,QAAQ8M,OAAO,GAAGG,SAAW1C,EAAIvK,QAAQ8M,OAAO,GAAGG,QACvD1C,EAAIvK,QAAQyN,UA6MuEyC,QAnHvF,SAAiBC,GACb5F,EAAIvK,QAAQ8M,OAAO,GAAGM,KAAO7C,EAAIvK,QAAQ8M,OAAO,GAAGM,KAAO,IAAI3M,KAAK0P,GACnE5F,EAAIvK,QAAQyN,UAiHgF2C,iBA3GhG,WACI5F,EAAe,SAAA6F,GACbvQ,QAAQC,IAAI,mBAAmBsQ,GAC/B,IAAIC,EAAuB,CAAE,KAAM,kBAAmB,YAClDC,GAAWD,EAAqBE,QAAQH,GAAY,GAAGC,EAAqBzN,OAEhF,OADA/C,QAAQC,IAAI,kBAAkBuQ,EAAqBC,IAC3CD,EAAqBC,IAC3B,IAAK,KACDhG,EAAIvK,QAAQyQ,MAAMC,WAAa,IAAInF,IAAUoF,gBAC7C,MACJ,IAAK,kBACDpG,EAAIvK,QAAQyQ,MAAMC,WAAa,IAAInF,IAAUqF,0BAC7C,MACJ,IAAK,WACDrG,EAAIvK,QAAQyQ,MAAMC,WAAa,IAAInF,IAAUsF,mBAC7C,MACJ,IAAK,cACDtG,EAAIvK,QAAQyQ,MAAMC,WAAa,IAAInF,IAAUuF,2BAA2B,SACxE,MACJ,IAAK,cACDvG,EAAIvK,QAAQyQ,MAAMC,WAAa,IAAInF,IAAUuF,2BAA2B,SACxE,MACJ,QACAvG,EAAIvK,QAAQyQ,MAAMC,WAAa,IAAInF,IAAUoF,gBAG/C,OADApG,EAAIvK,QAAQyN,SACL6C,EAAqBC,MAiFgFQ,YAlMlH,WACIjR,QAAQC,IAAI,eACZwK,EAAIvK,QAAQ8M,OAAO,GAAGG,SAAW1C,EAAIvK,QAAQ8M,OAAO,GAAGG,QACvD1C,EAAIvK,QAAQyN,WDXhBuD,CAAO,CACP3S,GAAIA,EACJ2L,KAAMA,EACNC,KAAMA,EACNC,IAAKA,EACLC,UAAWA,EACXC,WAAYA,EACZC,MAAOA,IAhBPS,EAH+ER,EAG/EQ,SACA+C,EAJ+EvD,EAI/EuD,WACAF,EAL+ErD,EAK/EqD,cAEAyC,GAP+E9F,EAM/EwF,OAN+ExF,EAO/E8F,kBACAH,EAR+E3F,EAQ/E2F,iBACAD,EAT+E1F,EAS/E0F,gBACAe,EAV+EzG,EAU/EyG,YACAb,EAX+E5F,EAW/E4F,QAYFzO,YAAW,IAAI2O,GACf3O,YAAW,IAAIwO,GACfxO,YAAW,IAAIuO,GACfvO,YAAW,IAAIsP,GACftP,YAAW,IAAIkM,GA3BkE,IAAAsD,EA6B9CpK,IAA3BE,EA7ByEkK,EA6BzElK,eAAgBE,EA7ByDgK,EA6BzDhK,QA7ByD9F,EA8BxDC,oBAAU,cAA3BmG,EA9ByExI,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAAAqG,EA+B3DpG,oBAAU,WAAxBqG,EA/ByE1I,OAAAC,EAAA,EAAAD,CAAAyI,EAAA,MAAA0J,EAgC3D9P,oBAAU,WAAxBE,EAhCyEvC,OAAAC,EAAA,EAAAD,CAAAmS,EAAA,MAAAC,EAiCvC/P,oBAAU,gBAjC6BgQ,EAAArS,OAAAC,EAAA,EAAAD,CAAAoS,EAAA,GAiCzEE,EAjCyED,EAAA,GAiC1DE,EAjC0DF,EAAA,GAAAG,EAkCrCnQ,oBAAU,iBAlC2BoQ,EAAAzS,OAAAC,EAAA,EAAAD,CAAAwS,EAAA,GAkCzEE,EAlCyED,EAAA,GAkCzDE,EAlCyDF,EAAA,GAAAG,EAmC/CvQ,oBAAU,YAnCqCwQ,EAAA7S,OAAAC,EAAA,EAAAD,CAAA4S,EAAA,GAmCzEE,EAnCyED,EAAA,GAmC9DE,EAnC8DF,EAAA,GAAAG,EAoCtD3Q,oBAAU,aAA3B4Q,EApCuEjT,OAAAC,EAAA,EAAAD,CAAAgT,EAAA,MAAAE,EAqCpD7Q,oBAAU,eAA7B8Q,EArCuEnT,OAAAC,EAAA,EAAAD,CAAAkT,EAAA,MAAAE,EAsCpD/Q,oBAAU,eAA7BgR,EAtCuErT,OAAAC,EAAA,EAAAD,CAAAoT,EAAA,MAAAE,EAuCnDjR,oBAAU,gBAA9BkR,EAvCuEvT,OAAAC,EAAA,EAAAD,CAAAsT,EAAA,MAyCjF7R,oBAAU,WACR,GAAGuG,IAAmB,GAAI,CACxBjH,QAAQC,IAAI,kBACVD,QAAQC,IAAIgH,GACZ,IACE8G,EAAW9G,GACX,MAAOT,GACPxG,QAAQC,IAAI,4BACZD,QAAQC,IAAIuG,MAIlB,CAACS,IAEHvG,oBAAU,WACRV,QAAQC,IAAI,qCACZ4N,KACA,CAACpG,EAAWE,IAEdjH,oBAAU,WACRV,QAAQC,IAAI,cACZkQ,EAAiBwB,IACjB,CAACA,IAEHjR,oBAAU,WACRwP,EAAgBqB,IAChB,CAACA,IACH7Q,oBAAU,WACRuQ,EAAYc,IACZ,CAACA,IAGHrR,oBAAU,WACRwR,EAAa/K,IACb,CAACA,IAEHzG,oBAAU,WAER0R,EAAepH,EAASD,UACxByH,EAAgBxH,EAASF,WACzBwH,EAAetH,EAASH,WACxB,CAACG,EAASF,UAAUE,EAASH,SAAUG,EAASD,WAKlDrK,oBAAU,WACR0P,EAAQ5O,IACR,CAACA,IAEHd,oBAAU,WACRkR,EAAiBtH,GACjBkH,EAAgBnH,GAChB2H,EAAYzH,IACZ,IAWJ,OACIkI,EAAA1Q,EAAAC,cAAA,UAAQzD,GAAIA,EAAImU,MATH,CACbC,WAAY,UACZC,SAAU,QACVC,MAAO,UACPC,OAAQ,oBEzEGC,MA5Bf,WAA2B,IAAA1R,EAGSC,oBAAU,WAHnBC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAGN2R,GAHMzR,EAAA,GAAAA,EAAA,IAgBvB,OAZAI,YAAW,IAAI,WAAKqR,EAAW,QAC/BrR,YAAW,IAAI,WAAKqR,EAAW,QAC/BrR,YAAW,IAAI,WAAKqR,EAAW,QAC/BrR,YAAW,IAAI,WAAKqR,EAAW,SAC/BrR,YAAW,IAAI,WAAKqR,EAAW,aAS3BlR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcgR,IAAI,wBAAwB7I,IAAI,GAAGlI,QAAS,kBAAM8Q,EAAW,UAClHlR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcgR,IAAI,wBAAwB7I,IAAI,GAAGlI,QAAS,kBAAM8Q,EAAW,UAClHlR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcgR,IAAI,wBAAwB7I,IAAI,GAAGlI,QAAS,kBAAM8Q,EAAW,UAClHlR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcgR,IAAI,yBAAyB7I,IAAI,GAAGlI,QAAS,kBAAM8Q,EAAW,gFCyLhHE,MAzMf,SAAsBC,GAElB,IAOIC,EANEC,GAAcF,EAAMG,IAAIH,EAAMI,MADnB,IACmCJ,EAAMG,IAAIH,EAAMI,KAA1B,OACpCA,EAAMJ,EAAMI,IACZD,EAAMC,GAAOJ,EAAMG,IAAMH,EAAMI,KAAOF,EAInCG,EAAM,EACZL,EAAMM,UACLD,EAAMF,EAAMC,EACZH,EAAM,MAENA,EAAME,EAAMC,EACZC,EAAM,KAfgB,IAAAnS,EAmBIC,oBAAU,WAnBdC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAmBnBG,EAnBmBD,EAAA,GAmBVE,EAnBUF,EAAA,GAAAmG,EAoBApG,oBAAU,cAA3BoS,EApBiBzU,OAAAC,EAAA,EAAAD,CAAAyI,EAAA,MAAA0J,EAqBD9P,oBAAU,aAA1BqS,EArBiB1U,OAAAC,EAAA,EAAAD,CAAAmS,EAAA,MAAAtS,EAsBcC,mBAAS,IAAI4B,MAtB3B3B,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAsBnB8U,EAtBmB5U,EAAA,GAsBL6U,EAtBK7U,EAAA,GAAAK,EAwBEN,oBAAS,GAxBXO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAwBnByU,EAxBmBxU,EAAA,GAwBXyU,EAxBWzU,EAAA,GAAA+H,EA0BFtI,mBAAS,cA1BPuI,EAAArI,OAAAC,EAAA,EAAAD,CAAAoI,EAAA,GA0BnBxH,EA1BmByH,EAAA,GA0Bb0M,EA1Ba1M,EAAA,GA4BpB2M,EAAavU,mBACnBuU,EAAW/T,QAAUiT,EAAMM,SAG3B,IAAMS,EAAgBxU,mBAhCIyU,EAkCJC,YAAU,iBAAO,CAAEC,GAAI,CAAC,EAAG,MAlCvBC,EAAArV,OAAAC,EAAA,EAAAD,CAAAkV,EAAA,GAkCjBE,EAlCiBC,EAAA,GAkCjBD,GAAME,EAlCWD,EAAA,GAqCpBE,EAAOC,YAAW,CACpBC,OAAQ,SAAAjW,GAAqN,IAAjNkW,EAAiNlW,EAAjNkW,KAAMC,EAA2MnW,EAA3MmW,MAAOC,EAAoMpW,EAApMoW,SAAUf,EAA0LrV,EAA1LqV,OAASgB,EAAiLrW,EAAjLqW,UAAiLC,GAAAtW,EAAtKuW,SAAsKvW,EAA5J6O,KAA4J7O,EAAtJwW,MAAsJxW,EAA/IyW,KAA+IzW,EAAzI0W,aAAyI,IAAAJ,EAAlI,CAACV,GAAIA,EAAGe,WAAYC,YAAa,CAAC,EAAE,GAAIC,UAAW,CAAC,EAAE,GAAGC,YAAa,CAAC,EAAE,GAAIC,SAAU,EAAGC,cAAe,EAAEC,UAAU,GAAaX,EAWzN,GAR0BY,gBAAMb,EAAWD,GAE3CA,EAAYA,EAAS,IAAK,EAAEA,EAEvBF,GAAMX,EAAQ,GAEhBW,GAAQQ,EAAKO,UAAY3B,GAAU,GACtCoB,EAAKO,SAAWf,EACbV,EAAW/T,QAAS,CAEnB,IAAI4S,EAASoB,EAAchU,QAAQ0V,cAAcC,aAG7ChW,EAAO,EACPiW,EAAM,EACNlB,EAAM,IAAI,KAAK/U,EAAQ,MAAwBwT,EAAYyC,EAAM,IACjElB,EAAM,IAAI,KAAK/U,EAAQ,OAA4BwT,EAAYyC,EAAM,IACrElB,EAAM,IAAI,MAAM/U,EAAQ,QAA6BwT,EAAYyC,EAAM,IAExEjW,IAASsV,EAAKK,WAEbxB,EAAQnU,GACRsV,EAAKE,YAAcT,EACnBO,EAAKd,GAAKc,EAAKG,WAGnBV,EAAQmB,cAAInB,EAAMO,EAAKE,aACvB,IAAIE,EAAc,CAACxU,KAAK4C,MAAMiR,EAAM,GAAGkB,GAAKjW,EAAKkB,KAAK4C,MAAMiR,EAAM,GAAGkB,GAAKjW,GACvE8U,IAAME,EAAW,GACpB,IAAImB,EAAQC,cAAIN,gBAAMJ,EAAYxU,KAAKmV,IAAIrB,EAAS,EAAE,MAAOM,EAAKd,IAE/DxU,IAASsV,EAAKK,WACbL,EAAKd,GAAK2B,EACVb,EAAKK,SAAW3V,GAGpBsV,EAAKG,UAAYU,EAEjB,IAGIG,EAAOjC,EAAchU,QAAQ0V,cAAcQ,UAAYlC,EAAchU,QAAQ0V,cAAcC,aAAe,EAC1GQ,GAASnC,EAAchU,QAAQ2V,aAAe3B,EAAchU,QAAQ0V,cAAcC,aAAe,EAErGG,EAAM,GAAKA,EAAM,GAAGG,EAAOA,EAAOH,EAAM,GACxCA,EAAM,GAAKA,EAAM,GAAGK,EAAOA,EAAOL,EAAM,GAExCzB,EAAI,CAAGF,GAAI2B,EAAU/F,OAAQ0E,EAhDV,CAAE2B,KAAM,EAAGC,QAAS,KAAOC,SAAU,GAAIC,UAAW,KADtD,CAAEH,KAAM,EAAGC,QAAS,IAAMC,SAAU,GAAIC,UAAW,GAiDDC,UAAW/B,EAAMgC,OAR/D,SAAAC,GAAY,IAATvC,EAASuC,EAATvC,GAAiBM,GAASb,GAASC,GAAU,GAAaY,GAAQjB,EAAcH,IAAMc,EAAG,GAAGvB,EAAO,GAAGO,IAQpBwD,QATtF,SAAAC,GAAY,IAATzC,EAASyC,EAATzC,GAAWR,EAAgBN,IAAMc,EAAG,GAAGvB,EAAO,GAAGO,MAa5E,OAAO8B,KA5FWvN,EAgIQ7I,mBAAS,IAhIjB8I,EAAA5I,OAAAC,EAAA,EAAAD,CAAA2I,EAAA,GAgInBmP,EAhImBlP,EAAA,GAgIRmP,EAhIQnP,EAAA,GAuL1B,OArDAoP,0BAAgB,WAEZD,EAlCc,WAWd,IATA,IACIE,EAAKC,EACLC,EAFAC,EAAY,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC7DC,EAAO,EAChBC,EAAY,EACrBC,EAAO,GACLC,EAAatE,EAAMM,SAAmB,WAAT,SAC7BiE,EAAevE,EAAMM,SAAqB,aAAX,WAC/BkE,EAAcxE,EAAMM,SAAoB,YAAV,UAG3B3Q,EAAEqQ,EAAMI,IAAIzQ,GAAGqQ,EAAMG,IAAIxQ,GAAG,KACjCoU,EAAO,IAAIvW,KAAKmC,GAAI8U,aACpBT,EAAQE,EAAW,IAAI1W,KAAKmC,GAAI+U,eACxB,IAAIlX,KAAKmC,GAAIgV,cACrBR,EAAQ,IAAI3W,KAAKmC,GAAIiV,iBAClBb,IAAQE,GAASI,EAAK5L,KAAK,CAACoM,MAAMP,EAAUQ,KAAMnV,EAAEqQ,EAAMI,KAAKF,EAAY6E,MAAOhB,IAClFC,IAAUI,IACTC,EAAK5L,KAAK,CAACoM,MAAMN,EAAYO,KAAMnV,EAAEqQ,EAAMI,KAAKF,EAAY6E,MAAOf,IACnEK,EAAK5L,KAAK,CAACoM,MAAML,EAAWM,KAAMnV,EAAEqQ,EAAMI,KAAKF,EAAY6E,MAAOZ,KAItEF,EAAUF,EACVK,EAAYJ,EAGZ,OAAOK,EAAK/U,IAAI,SAAAC,GAAI,OAAiBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAWS,EAAKsV,MAAOG,IAAKzV,EAAKsV,MAAMtV,EAAKuV,IAAKvF,MAASS,EAAMM,SAA0B,CAAC2E,IAAI1V,EAAKuV,KAA1B,CAACI,KAAK3V,EAAKuV,MAAsBvV,EAAKwV,SAOjJI,CAAUnF,EAAMM,YAE/B,CAACN,EAAMM,WAMTwD,0BAAgB,WACZ,IAAInI,EAAQ,EAERgF,IACGX,EAAMM,UACL3E,GAAWyE,EAAM/R,GAAS6R,EAAYa,EAAchU,QAAQ0V,cAAcC,aAAa,EACvFtB,EAAI,CAAEF,GAAI,CAAC,EAAEvF,GAASmB,OAAQ,CAAEsG,QAAS,KAAMC,SAAU,IAAMK,QAAS,KAAMF,OAAQ,SAEtF7H,GAAWyE,EAAM/R,GAAS6R,EAAYa,EAAchU,QAAQ0V,cAAc2C,YAAY,EACtFhE,EAAI,CAAEF,GAAI,CAACvF,EAAO,GAAImB,OAAQ,CAAEsG,QAAS,KAAMC,SAAU,IAAMK,QAAS,KAAMF,OAAQ,UAMhG,CAACnV,EAAQuV,IAEXrW,oBAAU,WACNe,EAAWmS,IACb,CAACA,IAEHlT,oBAAU,WAEN,OADAV,QAAQC,IAAI,oBAAsBJ,GAC3BA,GACH,KAAK,GACD8T,EAAa,OACb,MACJ,KAAK,KACDA,EAAa,SACb,MACJ,KAAK,MACDA,EAAa,QACb,MACJ,QACIA,EAAa,UAEvB,CAAC9T,IAGHoX,0BAAgB,WACZjX,QAAQC,IAAI,oBAAoBkT,EAAMqF,OACxC,CAACrF,EAAMqF,OAGL1W,EAAAC,EAAAC,cAAA,OAAKC,UAAWkR,EAAMM,SAAS,SAAS,QAEpC3R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAK8Q,OAAO,KAAKD,MAAM,KAAK5Q,UAAU,YAClCH,EAAAC,EAAAC,cAAA,WAASyW,OAAO,uBAGxB3W,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgByW,IAAKxE,GAEhCpS,EAAAC,EAAAC,cAAC2W,EAAA,EAAS7C,IAAV7W,OAAAkE,OAAA,CAAclB,UAAU,aAAgBuS,IAAxC,CAAgD9B,MAAO,CAAEG,MAAOO,EAAIN,OAAQU,EAAKoF,UAAWvE,EAAGwE,YAAY,SAACC,EAAGC,GAAJ,yBAAAzK,OAA6ByK,EAA7B,cACtGhC,aChKNiC,MAvCf,WAAqB,IAAA3X,EAEKC,oBAAU,WAAxBE,EAFSvC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAAAqG,EAGMpG,oBAAU,aAAzB2X,EAHSha,OAAAC,EAAA,EAAAD,CAAAyI,EAAA,MAAA0J,EAIM9P,oBAAU,aAAzB4X,EAJSja,OAAAC,EAAA,EAAAD,CAAAmS,EAAA,MAAAtS,EAMOC,mBAAS,IANhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMVwY,EANUtY,EAAA,GAMJma,EANIna,EAAA,GAAAK,EAOSN,mBAAS,IAPlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAOV8X,EAPU7X,EAAA,GAOH8Z,EAPG9Z,EAAA,GAAA+H,EAQKtI,mBAAS,IARduI,EAAArI,OAAAC,EAAA,EAAAD,CAAAoI,EAAA,GAQV6P,EARU5P,EAAA,GAQL+R,EARK/R,EAAA,GAAAM,EASO7I,mBAAS,IAThB8I,EAAA5I,OAAAC,EAAA,EAAAD,CAAA2I,EAAA,GASV0F,EATUzF,EAAA,GASJuI,EATIvI,EAAA,GAwBjB,OAbAoP,0BAAgB,WACZ,IAAI9X,EAAO,IAAIwB,KAAKa,GACpB2X,EAAQha,EAAK4Y,kBACbqB,EAASvP,IAAW1K,EAAK,YACzBka,EAAOxP,IAAW1K,EAAK,WACvBiR,EAAQvG,IAAW1K,EAAK,kBAC1B,CAACqC,IAEHyV,0BAAgB,WACZjX,QAAQC,IAAI,cAAciZ,IAC5B,CAACA,IAICpX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,WAAuB,IAAZiX,EAAiB,oBAAoB,OAAQf,IAAI,QAAjE,QACArW,EAAAC,EAAAC,cAAA,OAAKC,UAAuB,QAAZgX,EAAkB,wBAAwB,WAAad,IAAI,OAASjB,GACpFpV,EAAAC,EAAAC,cAAA,OAAKC,UAAuB,SAAZgX,EAAmB,yBAAyB,YAAcd,IAAI,QAASb,GACvFxV,EAAAC,EAAAC,cAAA,OAAKC,UAAuB,UAAZgX,EAAoB,0BAA0B,aAAed,IAAI,SAAUhB,GAC3FrV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYkW,IAAI,QAAS7K,YCVrCgM,MAtBf,WAAyB,IAAAjY,EAEKC,oBAAU,eAA5BiY,EAFata,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,MAWrB,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,WAAOjB,KAAKmN,KAAKqL,EAAc,KAAO,gBCWnCC,MAvBf,SAAA/a,GAAyB,IAATgb,EAAShb,EAATgb,OAAS3a,EAEOC,oBAAS,GAFhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEb4a,EAFa1a,EAAA,GAEN2a,EAFM3a,EAAA,GAgBrB,OAbA2C,YAAW,IAAI,WAAKgY,EAAS,SAAAF,GAAM,OAAKA,MAExC/Y,oBAAU,WACNV,QAAQC,IAAI,2BACZD,QAAQC,IAAI,iBAAiBwZ,IAC9B,IAEH/Y,oBAAU,WACNV,QAAQC,IAAI,UAAUyZ,IACvB,CAACA,IAEJ1Z,QAAQC,IAAI,kBAGR6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQyQ,MAAO,CAACkH,QAAUF,EAAO,SAAS,OAAQ7G,MAAO,OAAQC,OAAO,SACnFhR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmByQ,MAAO,CAACE,SAAU,WAAYwF,IAAK,MAAOyB,MAAM,EAAGhH,MAAO,GAAIC,OAAO,OAAQH,WAAa,oDCWzHmH,MA5Bf,WAAuB,IAAAzY,EAGyBC,oBAAU,iBAHnCC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAGXsQ,EAHWpQ,EAAA,GAGIqQ,EAHJrQ,EAAA,GAAAmG,EAIuBpG,oBAAU,gBAJjCyY,EAAA9a,OAAAC,EAAA,EAAAD,CAAAyI,EAAA,GAIX6J,EAJWwI,EAAA,GAIGvI,EAJHuI,EAAA,GAAA3I,EAKe9P,oBAAU,YALzB0Y,EAAA/a,OAAAC,EAAA,EAAAD,CAAAmS,EAAA,GAKXW,EALWiI,EAAA,GAKDhI,EALCgI,EAAA,GAkBnB,OACIvH,EAAA1Q,EAAAC,cAAA,OAAKC,UAAU,eACXwQ,EAAA1Q,EAAAC,cAAA,OAAKC,UAAU,gBAAewQ,EAAA1Q,EAAAC,cAAA,OAAKC,UAAU,UAAUgR,IAAI,0BAA0B7I,IAAI,GAAGlI,QAAS,kBAAM0P,GAAkBD,OAC7Hc,EAAA1Q,EAAAC,cAAA,OAAKC,UAAU,gBAAewQ,EAAA1Q,EAAAC,cAAA,OAAKC,UAAU,UAAUgR,IAAI,yBAAyB7I,IAAI,GAAGlI,QAAS,kBAAMsP,GAAiBD,OAC3HkB,EAAA1Q,EAAAC,cAAA,OAAKC,UAAU,gBAAewQ,EAAA1Q,EAAAC,cAAA,OAAKC,UAAU,UAAUgR,IAAI,qBAAqB7I,IAAI,GAAGlI,QAAS,kBAAM8P,GAAaD,SCoBhHkI,MAtCf,SAAAxb,GAAgC,IAATqV,EAASrV,EAATqV,OAUfoG,EAAU,CAAEC,QAAS,EAAGC,YAAa,GACrCC,EAAW,CAAEF,QAAS,EAAGC,aAAc,KAU3C,OAEItY,EAAAC,EAAAC,cAACsY,EAAA,OAAD,CACIC,KAAOzG,EAASuG,EAAWH,EAC3BM,GAAK1G,EAASoG,EAAUG,GAEvB,SAAAlH,GAAK,OACFrR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeyQ,MAAOS,GACjCrR,EAAAC,EAAAC,cAACyY,EAAD,MACA3Y,EAAAC,EAAAC,cAAC0Y,EAAD,UC0ELC,EAhGH,WAAM,IAAA7b,EAEeC,oBAAS,GAFxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAET8b,EAFS5b,EAAA,GAEG6b,EAFH7b,EAAA,GAAAqC,EAMgBC,oBAAU,WAN1BC,EAAAtC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAMRsG,EANQpG,EAAA,GAAAA,EAAA,GAOdb,oBAAU,WACNV,QAAQC,IAAI,uBAAwB0H,IACrC,CAACA,IATU,IAAAtI,EAcMN,mBAAU,IAAI4B,KAAK,cAAeC,WAdxCtB,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAcTkU,EAdSjU,EAAA,GAAA+H,GAAA/H,EAAA,GAeMP,mBAAU,IAAI4B,KAAK,cAAeC,YAfxC0G,EAAArI,OAAAC,EAAA,EAAAD,CAAAoI,EAAA,GAeTiM,EAfShM,EAAA,GAAAM,GAAAN,EAAA,GAiBgBvI,oBAAS,IAjBzB8I,EAAA5I,OAAAC,EAAA,EAAAD,CAAA2I,EAAA,GAiBT6L,EAjBS5L,EAAA,GAiBCiT,EAjBDjT,EAAA,GAmBhBlG,YAAW,IAAI,WACbmZ,EAAY,SAAAC,GACR,OAASA,MAKfra,oBAAU,WAER,IAAMsa,EAAU,WACd,OAAO,IAAIC,QAAQ,SAAA7c,GACjBiC,WAAW,WACT,IAAM6a,EAAYna,KAAKmN,KAAqB,GAAhBnN,KAAKoN,UACjCnO,QAAQC,IAAI,gBACZ7B,EAAQ8c,IACP,QARO,SAAAC,IAAA,OAAAA,EAAAlc,OAAAsJ,EAAA,EAAAtJ,CAAAuJ,EAAAzG,EAAA0G,KAYd,SAAAC,IAAA,OAAAF,EAAAzG,EAAA6G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACO6R,EADP,CAAA/R,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAE8BiS,IAF9B,OAAAnS,EAAAM,KAGI0R,GAAS,GAHb,wBAAAhS,EAAAS,SAAAZ,OAZca,MAAAC,KAAAC,YAAA,WAAA0R,EAAA5R,MAAAC,KAAAC,WAmBd2R,IACC,IA9Ca,IAAApT,EAmDWjJ,oBAAS,GAnDpBqJ,EAAAnJ,OAAAC,EAAA,EAAAD,CAAA+I,EAAA,GAmDTqT,EAnDSjT,EAAA,GAmDFkT,EAnDElT,EAAA,GAAAmT,EAoD2BC,YAAcC,OAAOC,SAASC,MAAnDC,GApDNL,EAoDRM,aApDQN,EAoDMK,kBApDNE,EAqD4B/c,oBAAS,GArDrCgd,EAAA9c,OAAAC,EAAA,EAAAD,CAAA6c,EAAA,GAqDTE,EArDSD,EAAA,GAqDOE,EArDPF,EAAA,GA4DhB,OALApa,YAAW,IAAIia,GAIjB5b,QAAQC,IAAI,eAER6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACka,EAAAna,EAAD,CAAYoL,QAASkO,EAAQc,SAAU,WAAYd,GAAQC,GAAU,KAEnExZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAACoa,EAAD,CAAW3I,SAAUA,KAGvB3R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACqa,EAAD,CAAiB1d,SAAS,YAG5BmD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACiI,EAAD,CAAK1L,GAAG,QAAQ8L,UAAU,OAAOC,WAAW,OAAOH,KAAK,MAAMD,KAAK,KAAKK,MAAM,UAEhFzI,EAAAC,EAAAC,cAAA,OAAKC,UAAWwR,EAAS,gBAAgB,iBACvC3R,EAAAC,EAAAC,cAACsa,EAAD,CAAc/I,IAAKA,EAAKD,IAAKA,EAAKG,SAAUA,KAG9C3R,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOgR,IAAI,wBAAwB7I,IAAI,GAAGlI,QAAS,kBAAI+Z,EAAmB,SAAAD,GAAc,OAAKA,OAC5Gla,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB0F,GAC/B7F,EAAAC,EAAAC,cAACua,EAAD,MACAza,EAAAC,EAAAC,cAACwa,EAAD,CAAc1I,OAAQkI,IACtBla,EAAAC,EAAAC,cAACya,EAAD,CAAOhD,OAAO,eC7FtB,IAAMiD,EAAcC,QACa,cAA7BlB,OAAOmB,SAASC,UAEe,UAA7BpB,OAAOmB,SAASC,UAEhBpB,OAAOmB,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvB5R,UAAU6R,cACPC,SAASF,GACTG,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfrS,UAAU6R,cAAcS,WAK1B1d,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB0d,MAAM,SAAAC,GACL5d,QAAQ4d,MAAM,4CAA6CA,KClE/D5d,QAAQC,IAAI,iBAAiB,IAAIU,MAAQC,WAGzCid,oBAAU,CAACrc,SAAW,IAAIb,MAAQC,YAClCid,oBAAU,CAACpW,YAAc,IAAI9G,MAAQC,YACrCid,oBAAU,CAAClW,QAAS,OCExBmW,iBACEhc,EAAAC,EAAAC,cAAC+b,EAAD,MAIArC,SAASsC,eAAe,SFIT,WACb,GAA6C,kBAAmB5S,UAAW,CAGzE,GADkB,IAAI6S,IAAIC,YAAwBzC,OAAOmB,UAC3CuB,SAAW1C,OAAOmB,SAASuB,OAIvC,OAGF1C,OAAO2C,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAA1O,OAAM4P,YAAN,sBAEPxB,EAwCV,SAAiCM,GAE/BhU,MAAMgU,GACHG,KAAK,SAAA9a,GAGkB,MAApBA,EAASwC,SACuD,IAAhExC,EAASgc,QAAQC,IAAI,gBAAgB5N,QAAQ,cAG7CtF,UAAU6R,cAAcsB,MAAMpB,KAAK,SAAAC,GACjCA,EAAaoB,aAAarB,KAAK,WAC7B1B,OAAOmB,SAAS6B,aAKpB1B,EAAgBC,KAGnBW,MAAM,WACL3d,QAAQC,IACN,mEA5DAye,CAAwB1B,GAGxBD,EAAgBC,MErB1B2B","file":"static/js/main.a9b7c53e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 207;","import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, duration, startdate }) {\n    //console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    let initDate = startdate\n    const [date, setDate] = useState(initDate)\n    const [playing, setPlaying] = useState(false)\n    const ldate = useRef();\n\n    // refresh rate in msec\n    const refreshRate = 50\n\n    function incrementDate(step) {\n        //setDate(prevDate => { return prevDate + step  });\n        ldate.current += step \n        //setDate((new Date(ldate.current)).getTime());\n        setDate(ldate.current);\n    }\n      \n\n      // Control functions\n    const intervalRef = useRef();\n    const step = useRef(refreshRate);\n    const timeoutRef = useRef();\n    \n\n    function increaseSpeed() {\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshRate) step.current = refreshRate\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshRate) step.current = -1 * refreshRate\n     }\n\n    function start() {\n        console.log(\"starting Timer... (will stop in \"+duration/1000+\" sec)\")\n        if (!intervalRef.current) {\n            intervalRef.current = setInterval(() => incrementDate(step.current), refreshRate);\n            setPlaying(true)\n        }\n        timeoutRef.current = setTimeout(() => {\n            togglePause()\n            //start()\n          }, duration);\n    }\n\n    function togglePause() {\n        console.log('toggle clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) {\n            setPlaying(false)\n            clearInterval(intervalRef.current)\n            intervalRef.current = undefined\n        } else start()\n    }\n\n    function reset() {\n        console.log('reset')\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current)\n            intervalRef.current = undefined\n            setPlaying(false)\n        }\n        let initDate = (new Date()).getTime()\n        step.current = refreshRate\n        setDate(initDate)\n        ldate.current = initDate\n    }\n\n     \n    function forceDate(newdate) {\n        ldate.current = newdate\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        setDate((new Date()).getTime())\n        ldate.current = date\n        if (autoStart) {\n            start();\n        }\n        //return reset;\n    }, []);\n\n  \n  return { date, playing, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useClock } from \"./useClock\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\n\n\n\n\nfunction ClockController({ duration }) {\n\n    const [ appdate, setAppdate ] = useGlobal('appdate');\n\n    const {\n        date,\n        playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        autoStart: false,\n        duration: duration,\n        startdate: appdate\n    })\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",reset)\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    //const dateLabel = (new Date(date) ).toUTCString()\n\n\n\n    useEffect(() => {\n        //console.log(\"useEffect (date) in ClockController\")\n        setAppdate(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (appdate) in ClockController\")\n        //setAppdate(date)\n        forceDate(appdate)\n        //setAppdate({appdate: new Date(date)})\n    },[appdate]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (init) in ClockController\")\n        //console.log(\"appdate changed\")\n        forceDate(appdate)\n    },[]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        console.log('pressed')\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 300) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n    \n    return (\n/*\n        <div {...handlers} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width:\"100%\", height: \"100%\"}}>\n            {(new Date(date) ).toUTCString()}\n        </div>\n\n<div onClick={togglePause}><img className='Buttons' src={playing?pauseImage:playImage} alt=''/></div>\n*/\n\n    <div className= 'ClockController' onClick={handleDoubleTap} ></div>\n    );\n}\n\nexport default ClockController;\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(hubItem.footprint),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    links: {\n                        data: [{\n                            href: item.link[0].href,\n                        }]\n                    },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            size: sizeInBytes\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import { useState, useEffect } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\nimport { ModuleResolutionKind } from \"typescript\";\n\n\n\nexport default function useDatahub() {\n\n    let searchURLs = []\n    //http://131.176.236.55/dhus/\n    //https://scihub.copernicus.eu/apihub/search?\n    searchURLs[\"S1\"] = 'https://131.176.236.55/dhus/search?q=(%20beginposition:[{start}%20TO%20{end}]%20AND%20platformname:Sentinel-1%20AND%20producttype:GRD)&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S2\"] = 'https://131.176.236.55/dhus/search?q=(%20beginposition:[{start}%20TO%20{end}]%20AND%20platformname:Sentinel-2%20AND%20producttype:S2MSI1C)&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S3\"] = 'https://131.176.236.55/dhus/search?q=(%20beginposition:[{start}%20TO%20{end}]%20AND%20platformname:Sentinel-3%20AND%20(producttype:OL_1_ERR___%20OR%20producttype:SL_1_RBT___%20OR%20producttype:SR_1_SRA___))&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S5P\"] = 'https://s5phub.copernicus.eu/search?q=(%20beginposition:[{start}%20TO%20{end}]%20AND%20platformname:Sentinel-5 precursor%20AND%20(producttype:L1B_RA_BD1%20OR%20(producttype:L2__NO2___%20AND%20processingmode:Near real time)))&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"ENVISAT\"] = 'https://eocat.esa.int/ngeo/catalogue/FEDEO-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&format=json&count=50&startIndex={startindex}'\n    \n    // search time window size in ms\n    const windowSize = 1000 * 60 * 60 * 3\n\n    const [geojsonResults, setGeojsonResults] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [isfirstpage, setIsfirstPage] = useState(true)\n    \n    const [ searchdate,  ] = useGlobal('searchdate');\n    const [ mission,  ] = useGlobal('mission');\n    const [ searchUrl, setSearchurl  ] = useState('');\n\n    const [ pagination, setPagination ] = useState({totalresults:0 ,startindex:0, itemsperpage:0});\n\n//{totalresults,startindex}\n    useEffect(() => {\n        const fetchURL = async () => {\n            // setLoading(true)\n            console.log('Search: '+ searchUrl)\n            try {\n                const response = await fetch(searchUrl, {mode: 'cors', credentials: 'include'})\n                const json = await response.json()\n                const geoJson = (mission === 'ENVISAT')? json : dhusToGeojson(json)\n                console.log('totalResults: ' + geoJson.properties.totalResults)\n                setPagination( \n                    {\n                    totalresults: Number(geoJson.properties.totalResults) ,\n                    startindex:  Number(geoJson.properties.startIndex), \n                    itemsperpage:  Number(geoJson.properties.itemsPerPage), \n                    })\n                if(Number(geoJson.properties.totalResults>0)) setGeojsonResults(geoJson) \n                setIsfirstPage((pagination.startindex + pagination.itemsperpage < pagination.totalresults)?true:false)\n                console.log('first?: ' + (pagination.startindex + pagination.itemsperpage < pagination.totalresults)?'true':'false')\n                // setLoading(false);   \n            } catch {\n                console.log(\"Didn't recieve a json !\")\n                //console.log(response)\n                setLoading(false);\n            }\n            \n        }\n        fetchURL(searchUrl);\n    }, [searchUrl]);\n    \n    useEffect(() => {\n        console.log(pagination)\n        if(pagination.startindex + pagination.itemsperpage < pagination.totalresults) {\n            let url = searchURLs[mission]\n            console.log(\"There's More...\")\n            // setIsfirstPage(false)\n            try {\n                url = url.replace(\"{start}\", dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'));\n                url = url.replace(\"{end}\", dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'));\n                url = url.replace(\"{startindex}\", pagination.startindex + pagination.itemsperpage);\n                //console.log(\"Next URL: \" + url)\n                setSearchurl(url)\n        \n            } catch {\n                console.log('Not a JULIAN date !')\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    }, [pagination]);\n\n    useEffect(() => {\n        console.log('DataHub ready. '+mission)\n    }, []);\n\n    useEffect(() => {\n        \n        if(mission && searchdate) {\n            \n            let url = searchURLs[mission]\n            //if(mission in [\"S1\",\"S2\",\"S3\"]) url = searchURLs[mission]\n            try {\n                url = url.replace(\"{start}\", dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'));\n                url = url.replace(\"{end}\", dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'));\n                url = url.replace(\"{startindex}\", 0);\n                setLoading(true)\n                // setIsfirstPage(true)\n                setSearchurl(url)\n        \n            } catch {\n                console.log('Not a JULIAN date !')\n            }\n        }\n        \n    }, [searchdate, mission]);\n/*    \n    const [ mission, setMission ] = useGlobal('mission');\n    useEffect(() => {\n        if(mission in [\"S1\",\"S2\",\"S3\"]) setUrl(searchURLs[mission])\n    }, [mission]);\n    */\n\n    return {geojsonResults, loading, isfirstpage}\n}\n","import React, { useGlobal, useState, useEffect } from \"reactn\"\nimport { useEww } from \"./useEww\"\n// import { useGlobal } from 'reactn'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport useDatahub from \"./useDatahub\"\n\n\nexport default function Eww({ id, clat, clon, alt, starfield, atmosphere, names }) {\n\nconst {\n    ewwstate,\n    addGeojson,\n    removeGeojson,\n    addWMS,\n    toggleProjection,\n    toggleAtmosphere,\n    toggleStarfield,\n    toggleNames,\n    setTime\n} = useEww({\n    id: id,\n    clat: clat,\n    clon: clon,\n    alt: alt,\n    starfield: starfield,\n    atmosphere: atmosphere,\n    names: names\n})\n\n  // toogle projection\n  useHotkeys(\"p\",toggleProjection)  \n  useHotkeys(\"a\",toggleAtmosphere)  \n  useHotkeys(\"s\",toggleStarfield)  \n  useHotkeys(\"n\",toggleNames)  \n  useHotkeys(\"c\",removeGeojson)\n\n  const { geojsonResults, loading} = useDatahub();\n  const [ searchdate,  ] = useGlobal('searchdate');\n  const [ mission,  ] = useGlobal('mission');\n  const [ appdate,  ] = useGlobal('appdate')\n  const [ appstarfield,  setAppstarfield] = useGlobal('appstarfield')\n  const [ appatmosphere,  setAppatmosphere] = useGlobal('appatmosphere')\n  const [ appnames,  setAppnames] = useGlobal('appnames')\n  const [ , setSearching ] = useGlobal('searching')\n  const [ , setAppaltitude ] = useGlobal('appaltitude')\n  const [ , setApplatitude ] = useGlobal('applatitude')\n  const [ , setApplongitude ] = useGlobal('applongitude')\n\n  useEffect(() => {\n    if(geojsonResults !== {}) {\n      console.log('datahub in use')\n        console.log(geojsonResults)\n        try {\n          addGeojson(geojsonResults)\n        } catch (err) {\n          console.log(\"error on geojson parsing\")\n          console.log(err)\n        }\n      }\n      \n  },[geojsonResults]);\n\n  useEffect(() => {\n    console.log('reacting to searchdate or mission')\n    removeGeojson()\n  },[searchdate,mission]);\n\n  useEffect(() => {\n    console.log('atmosphere')\n    toggleAtmosphere(appatmosphere)\n  },[appatmosphere])\n\n  useEffect(() => {\n    toggleStarfield(appstarfield)\n  },[appstarfield])\n  useEffect(() => {\n    toggleNames(appnames)\n  },[appnames])\n\n\n  useEffect(() => {\n    setSearching(loading)\n  },[loading]);\n\n  useEffect(() => {\n    // console.log(' ewwstate changed')\n    setAppaltitude(ewwstate.altitude)\n    setApplongitude(ewwstate.longitude)\n    setApplatitude(ewwstate.latitude)\n  },[ewwstate.longitude,ewwstate.latitude, ewwstate.altitude ]);\n\n\n\n\n  useEffect(() => {\n    setTime(appdate)\n  },[appdate]);\n\n  useEffect(() => {\n    setAppatmosphere(atmosphere)\n    setAppstarfield(starfield)\n    setAppnames(names)\n  },[]);\n\n\nlet globeStyle = {\n    background: 'inherit',\n    position: \"fixed\",\n    width: 'inherit',\n    height: 'inherit'\n  };\n\n\nreturn (\n    <canvas id={id} style={globeStyle} />\n)\n\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\n\n\nexport function useEww({ id, clon, clat, alt, starfield, atmosphere, names }) {\n    //console.log('useEww renders')\n  \n    const eww = useRef(null)\n    const [projection, setProjection] = useState(\"3D\")\n    const [geojsonlayers, setGeojsonlayers] = useState([])\n    const [ewwstate, setEwwState] = useState({latitude: clat, longitude: clon, altitude: alt})\n\n    //toggle atmosphere\n    function toggleAtmosphere() {\n        console.log('toggleAtmosphere')\n        eww.current.layers[3].enabled = !eww.current.layers[3].enabled\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield() {\n        console.log('toggleStarfield')\n        eww.current.layers[2].enabled = !eww.current.layers[2].enabled\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames() {\n        console.log('toggleNames')\n        eww.current.layers[1].enabled = !eww.current.layers[1].enabled\n        eww.current.redraw();\n    }\n\n    function addGeojson(url) {\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        \n        function loadCompleteCallback() {\n            // console.log('geojsonlayers state updated')\n            setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n            eww.current.redraw();\n        }\n    \n    \n        let renderableLayer = new WorldWind.RenderableLayer(url.properties.updated+Math.ceil(Math.random() * 10000))\n        // if (replace) removeGeoJson()\n        eww.current.addLayer(renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers(eww.current.layers)\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])        \n    }\n\n    function removeGeojson() {\n        console.log('will remove json layers ')\n        console.log(geojsonlayers)\n        for(let i=0;i<geojsonlayers.length;i++) {\n          eww.current.removeLayer(geojsonlayers[i])\n          console.log('removing json layers: ')\n          console.log(geojsonlayers[i])\n        }\n        setGeojsonlayers([])\n        console.log(geojsonlayers)\n        eww.current.redraw();\n      }\n\n    function addWMS(config) {\n        let layer =  new WorldWind.WmsLayer(config, \"\")\n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n    }\n\n\n    function setTime(epoch) {\n        eww.current.layers[2].time = eww.current.layers[3].time = new Date(epoch)\n        eww.current.redraw();\n        \n\n     }\n\n\n    function toggleProjection() {\n        setProjection( prevProj => {\n          console.log(\"prevProjection: \"+prevProj)\n          let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n          let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n          console.log(\"newProjection: \"+supportedProjections[newProj])\n          switch (supportedProjections[newProj]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n            }\n          eww.current.redraw();\n          return supportedProjections[newProj]\n          })      \n      }\n\n    // callback from eww   \n    // function setGlobeStates() {\n    //     console.log('ewwstate update')\n    //     setEwwState({\n    //         longitude:eww.current.navigator.lookAtLocation.longitude, \n    //         latitude: eww.current.navigator.lookAtLocation.latitude,\n    //         altitude: eww.current.navigator.range})\n    // }\n    const setGlobeStates = () => {\n        let lo = eww.current.navigator.lookAtLocation.longitude\n        let la = eww.current.navigator.lookAtLocation.latitude\n        let al = eww.current.navigator.range\n        // console.log('ewwstate update')\n        setEwwState({\n            longitude:lo, \n            latitude: la,\n            altitude: al\n        })\n    }\n    \n    \n    // didMount effect\n    useEffect(() => {\n        console.log(\"useEffect (mount) in Eww  star/atmo: \"+ starfield+'/'+atmosphere)\n        //eww.current = new WorldWind.WorldWindow(id, elevationModel);\n        eww.current = new WorldWind.WorldWindow(id);\n        eww.current.redrawCallbacks.push(setGlobeStates)\n        //setWwd(eww);\n        let wmsConfigBg = {\n            service: \"https://tiles.maps.eox.at/wms\",\n            layerNames: \"s2cloudless-2018\",\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n    \n        let wmsConfigNames = {\n            service: \"https://tiles.maps.eox.at/wms\",\n            layerNames: \"overlay_bright\",\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n        WorldWind.configuration.baseUrl = WorldWind.configuration.baseUrl.slice(0,-3)\n        let starFieldLayer = new WorldWind.StarFieldLayer();\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        atmosphereLayer.minActiveAltitude = 5000000\n    \n        let layers = [\n            { layer: new WorldWind.WmsLayer(wmsConfigBg, \"\"), enabled: true },\n            { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: starfield },\n            { layer: atmosphereLayer, enabled: atmosphere }\n        ];\n    \n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            eww.current.addLayer(layers[l].layer);\n        }\n        //let date = new Date();\n        starFieldLayer.time = new Date();\n        atmosphereLayer.time = new Date();\n        setTimeout(() => {\n            eww.current.goToAnimator.travelTime = 1000;\n            eww.current.goTo(new WorldWind.Position(clat, clon, alt));\n            eww.current.redraw();\n            }, 2000)\n    \n        eww.current.redraw();\n        eww.current.deepPicking = true;\n    }, []); // effect runs only once\n        \n  \n  return { ewwstate, removeGeojson, addGeojson, addWMS, toggleStarfield, toggleAtmosphere, setTime, toggleProjection, toggleNames };\n}\n","import React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './missionselector.css'\n\n\n// should use a prop\n\nfunction MissionSelector() {\n\n\n    const [ mission, setMission ] = useGlobal('mission');\n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2')}) \n    useHotkeys(\"3\",()=>{setMission('S3')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MissionSelector'>\n            <div className='Circle'><img className='MissionIcon' src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n            <div className='Circle'><img className='MissionIcon' src='./images/s2_black.png' alt='' onClick={() => setMission('S2')} /></div>\n            <div className='Circle'><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n            <div className='Circle'><img className='MissionIcon' src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n           \n            \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\"\nimport {useSpring, animated, config} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport './timeselector.css'\nimport { useGlobal } from 'reactn'\nimport { add, sub, scale } from 'vec-la'\n\n\n// to be split in a controller and a useTouchScale hook () => {<TouchScale>, scaleRenderer, size}\n\n\n\n\nfunction TimeSelector(props)  {\n    //console.log(\"Render TimeSelector \")\n    const dayspace = 40\n    const zoomfactor = (props.max-props.min)/(dayspace*(props.max-props.min)/(1000*60*60*24))\n    const min = props.min\n    const max = min +((props.max - props.min) / zoomfactor)\n\n    \n\n    let wid, hei = 0\n    if(props.vertical) {\n        hei = max - min\n        wid = 100\n    } else {\n        wid = max - min\n        hei = 100\n\n    }\n\n    const [appdate, setAppdate] = useGlobal('appdate')\n    const [, setSearchdate] = useGlobal('searchdate')\n    const [, setHighlight] = useGlobal('highlight')\n    const [livePosition, setLiveposition] = useState(new Date())\n\n    const [active, setActive] = useState(false); \n\n    const [step, setStep] = useState('continuous')\n\n    const myvertical = useRef()\n    myvertical.current = props.vertical\n\n\n    const timecontainer = useRef()\n\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\n\n\n    const bind = useGesture({\n        onDrag: ({  down, delta, velocity, active , direction, wheeling, time, first, last, temp = {xy: xy.getValue(), deltaOffset: [0,0], lastNewxy: [0,0],deltaFactor: [1,1], lastStep: 1, lastIncrement: 0,lastDown: false }}) => {\n            let springConfigUp = { mass: 1, tension: 200 , friction: 40, precision: 1 }\n            let springConfigDown = { mass: 1, tension: 1200 , friction: 40, precision: 0.01 }\n            let config = {  velocity: scale(direction, velocity), decay: true, precision: 1 }\n\n            velocity = (velocity<.15)?0:velocity\n\n            if (!down) setStep(1)\n            \n            if(down != temp.lastDown) { setActive(true)}\n            temp.lastDown = down\n            if(myvertical.current) {    \n                //let pos = target.getBoundingClientRect().top\n                let height = timecontainer.current.parentElement.offsetHeight\n\n                //let followDest = (delta[0]<-200)?delta[1]*10+temp.xy[1]:delta[1]+temp.xy[1]\n                let step = 1\n                let div = 1\n                if (delta[0]<-30) {step = (1000 * 60 * 60 * 24)  / zoomfactor; div = 10; }\n                if (delta[0]<-80) {step = (1000 * 60 * 60 * 24 * 30) / zoomfactor; div = 15}\n                if (delta[0]<-160) {step = (1000 * 60 * 60 * 24 * 365) / zoomfactor; div = 30}\n\n                if(step !== temp.lastStep) {\n                    //console.log('Step changed from: '+temp.lastStep+' to: '+ step)\n                    setStep(step)\n                    temp.deltaOffset = delta\n                    temp.xy = temp.lastNewxy\n                }\n\n                delta = sub(delta,temp.deltaOffset)\n                let deltaFactor = [Math.round(delta[0]/div)*step,Math.round(delta[1]/div)*step]\n                if(down) velocity = 0\n                let newxy = add(scale(deltaFactor,Math.pow(velocity+1,2.5)), temp.xy)\n\n                if(step !== temp.lastStep) {\n                    temp.xy = newxy\n                    temp.lastStep = step\n                }\n\n                temp.lastNewxy = newxy\n                \n                const setLiveTime = ({ xy }) => { setLiveposition(min+(-xy[1]+height/2)*zoomfactor)}\n                const setFinalTime = ({ xy }) => {   if(!down && !active) {setActive(false)}; if(!down) { setSearchdate(min+(-xy[1]+height/2)*zoomfactor) }}  \n\n                let minX = timecontainer.current.parentElement.offsetTop + timecontainer.current.parentElement.offsetHeight / 2\n                let maxX = - timecontainer.current.offsetHeight + timecontainer.current.parentElement.offsetHeight / 2\n        \n                newxy[1] = newxy[1]>minX ? minX : newxy[1]\n                newxy[1] = newxy[1]<maxX ? maxX : newxy[1]\n\n                set({  xy: newxy ,   config: down?springConfigDown:springConfigUp, immediate: down, onRest: setFinalTime, onFrame: setLiveTime} )\n\n            } else {    \n            }\n            return temp\n        }\n    })\n\n    \n\n    const scaleText = () => {\n        \n        let monthcode = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n        let day, month, hour, year = 0\n        let lastday, lastmonth = 0\n        let tics = []\n        const dayclass = (!props.vertical)?'DayTic':'DayTic-v'\n        const monthclass = (!props.vertical)?'MonthTic':'MonthTic-v'\n        const yearclass = (!props.vertical)?'YearTic':'YearTic-v'\n        \n        \n        for (let i=props.min;i<=props.max;i+=3600000) {\n            day = (new Date(i)).getUTCDate()\n            month = monthcode[(new Date(i)).getUTCMonth()]\n            hour = (new Date(i)).getUTCHours()\n            year = (new Date(i)).getUTCFullYear()\n            if(day !== lastday) tics.push({class:dayclass, pos: (i-props.min)/zoomfactor, label: day})\n            if(month !== lastmonth ) {\n                tics.push({class:monthclass, pos: (i-props.min)/zoomfactor, label: month})\n                tics.push({class:yearclass, pos: (i-props.min)/zoomfactor, label: year})\n            }\n            //if(year != lastyear) tics.push({class:'YearTic', pos: (i-props.min)/zoomfactor, label: year})\n            //if(hour != lasthour) tics.push({class:'HourTic', pos: (i-props.min)/zoomfactor, label: '.'})\n            lastday = day\n            lastmonth = month\n        }\n\n            return tics.map(item => (            <div className={item.class} key={item.class+item.pos} style={(!props.vertical)?{left:item.pos}:{top:item.pos}}>{item.label}</div>))\n    }\n\n    const [timescale, setTimescale] = useState('')    \n    //const [vertical, setVertical] = useState(props.vertical)    \n    useLayoutEffect(() => {\n        //console.log(\"useEffect (livePosition) in TimeSelector: \"+livePosition)\n        setTimescale(scaleText(props.vertical))\n    \n    },[props.vertical])\n\n\n    \n\n\n    useLayoutEffect(() => {     \n        let offset =0\n        //console.log('Active: '+active)\n        if(!active) {\n            if(props.vertical) {\n                offset = ((min - appdate)/zoomfactor)+timecontainer.current.parentElement.offsetHeight/2\n                set({ xy: [0,offset], config: { tension: 1200, friction: 40 }, onFrame: null, onRest: null }  )\n            } else {\n                offset = ((min - appdate)/zoomfactor)+timecontainer.current.parentElement.offsetWidth/2\n                set({ xy: [offset,0], config: { tension: 1200, friction: 40 }, onFrame: null, onRest: null }  )\n\n            }\n   \n            \n        }\n    },[appdate,timescale])  \n\n    useEffect(() => {\n        setAppdate(livePosition)\n    },[livePosition])\n\n    useEffect(() => {\n        console.log('Step changed to: ' + step)\n        switch(step) {\n            case 40:\n                setHighlight(\"day\")\n                break;\n            case 1200:\n                setHighlight(\"month\")\n                break;\n            case 14600:\n                setHighlight(\"year\")\n                break;\n            default:\n                setHighlight(\"none\")\n        }\n    },[step])\n\n\n    useLayoutEffect(() => {\n        console.log(\"zoom changed to: \"+props.zoom)\n    },[props.zoom])\n\n    return (\n        <div className={props.vertical?\"Mask-v\":\"Mask\"} >\n            \n            <div className=\"TriangleContainer\" >\n                <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                    <polygon points=\"20,5 20,35 12,20\" />   \n                </svg> \n            </div>        \n            <div className=\"TimeContainer\" ref={timecontainer}>\n                \n                <animated.div className=\"TimeScale\" {...bind()} style={{ width: wid,height: hei, transform: xy.interpolate((x, y) => `translate3d(0px,${y}px,0)`) }}>\n                    {timescale}\n                </animated.div>\n            </div>\n        </div>\n    )\n}\n\nexport default TimeSelector","import React, { useState, useLayoutEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\nimport \"./timelabel.css\"\n\n\n\n\nfunction TimeLabel() {\n\n    const [ appdate,  ] = useGlobal('appdate')\n    const [ highlight, ] = useGlobal('highlight')\n    const [ searching, ] = useGlobal('searching')\n\n    const [year, setYear] = useState('') \n    const [month, setMonth] = useState('') \n    const [day, setDay] = useState('') \n    const [time, setTime] = useState('') \n\n    useLayoutEffect(() => {     \n        let date = new Date(appdate)\n        setYear(date.getUTCFullYear())\n        setMonth(dateFormat(date,'UTC:mmm'))\n        setDay(dateFormat(date,'UTC:dd'))\n        setTime(dateFormat(date,'UTC:HH:MM:ss'))\n    },[appdate])\n\n    useLayoutEffect(() => {     \n        console.log('Searching: '+searching)\n    },[searching])\n\n\n    return (\n        <div className='LabelCountainer' >\n            <div className={searching===true?'Line  Line-active':'Line'} key='line' >____</div>\n            <div className={highlight==='day'?'DayLabel  Highlighted':'DayLabel'}  key='day'  >{day}</div>\n            <div className={highlight==='year'?'YearLabel  Highlighted':'YearLabel'}  key='year' >{year}</div>\n            <div className={highlight==='month'?'MonthLabel  Highlighted':'MonthLabel'}  key='month' >{month}</div>\n            <div className='TimeLabel' key='time' >{time}</div>\n        </div>\n    );\n    // <div className='MonthLabel' key='month' style={highlight=='month'?{color: 'rgba(120,0,0,1)'}:{}} >{month}</div>\n\n\n    \n}\n\nexport default TimeLabel;\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport \"./mapstatelabel.css\"\n\n\n\nfunction MapStateLabel() {\n\n    const [ appaltitude,  ] = useGlobal('appaltitude')\n    // const [altitude, setAltitude] = useState()\n\n\n    // useLayoutEffect(() => {    \n    //     console.log('Altitude changed') \n    //     setAltitude(Math.ceil(appaltitude / 1000))\n    // },[appaltitude])\n\n    return (\n        <div className='MapStateLabel' >\n            <div >{Math.ceil(appaltitude / 1000)+ ' Km'}</div>\n        </div>\n    )\n    // <div className='MonthLabel' key='month' style={highlight=='month'?{color: 'rgba(120,0,0,1)'}:{}} >{month}</div>\n\n\n    \n}\n\nexport default MapStateLabel;\n","import React, { useEffect, useState } from \"react\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './debug.css'\n\n\n\n\nfunction Debug({action}) {\n\n    const [ debug, setDebug ] = useState(false)\n    useHotkeys(\"d\",()=>{setDebug(action => !action)}) \n\n    useEffect(() => {\n        console.log('Debug Overlay: press D ')\n        console.log('action (use): '+action)\n    }, []);\n\n    useEffect(() => {\n        console.log('debug: '+debug)\n    }, [debug]);\n\n    console.log('debug rendered')\n\n    return (\n        <div className='Debug' style={{display: (debug)?'inline':'none', width: '100%', height:'100%'}}>\n            <div className='ContinuousScroll' style={{position: 'relative', top: '70%', right:0, width: 60, height:'100%', background:  'rgba(22, 22, 20, 0.24)'}}/>\n        </div>\n    )\n}\n\nexport default Debug\n","import React, { useEffect, useGlobal } from \"reactn\";\n// import { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './mapselector.css'\n\n\n// should use a prop\n\nfunction MapSelector() {\n\n\n    const [ appatmosphere, setAppatmosphere ] = useGlobal('appatmosphere');\n    const [ appstarfield, setAppstarfield ] = useGlobal('appstarfield');\n    const [ appnames, setAppnames ] = useGlobal('appnames');\n    // useHotkeys(\"1\",()=>{setMission('S1')}) \n    // useHotkeys(\"2\",()=>{setMission('S2')}) \n    // useHotkeys(\"3\",()=>{setMission('S3')}) \n    // useHotkeys(\"5\",()=>{setMission('S5P')}) \n    // useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelector'>\n            <div className='CircleButton'><img className='MapIcon' src='./images/atmosphere.png' alt='' onClick={() => setAppatmosphere(!appatmosphere)} /></div>\n            <div className='CircleButton'><img className='MapIcon' src='./images/starfield.png' alt='' onClick={() => setAppstarfield(!appstarfield)} /></div>\n            <div className='CircleButton'><img className='MapIcon' src='./images/names.png' alt='' onClick={() => setAppnames(!appnames)} /></div>\n           \n        </div>\n    )\n}\n\nexport default MapSelector\n","import React from \"react\";\nimport {useSpring, animated} from 'react-spring';\nimport {Spring} from 'react-spring/renderprops'\nimport \"./controlpanel.css\"\n\nimport MissionSelector from \"./missionselector\";\nimport MapSelector from \"./mapselector\";\n\n\n\n\n\nfunction ControlPanel({active}) {\n\n\n    /*\n    //const props = useSpring({from: { opacity: 0, marginLeft: 0 }, to: { opacity: 1, marginLeft: 100 }})\n    const props = useSpring({opacity: 0, to: { opacity: 1}})\n    return (\n        <animated.div className='ControlPanel' style={props}>I will fade in</animated.div>\n    )\n*/\n    let styleOn = { opacity: 1, marginRight: 0 }\n    let styleOff = { opacity: 0, marginRight: -500 }\n\n    // const bind = useGesture({ onDrag: ({ local }) => set({ local }) })\n\n    // const [props] = useSpring({\n    //     to: { opacity: 1, marginRight: 0 }\n    //     from: { opacity: 0, marginRight: -500 },\n    //     delay: '2000'\n    // })\n\n    return (\n\n        <Spring\n            from={ active ? styleOff : styleOn}\n            to={ active ? styleOn : styleOff}>\n                \n            {props => \n                <div className='ControlPanel' style={props} >\n                    <MissionSelector></MissionSelector>\n                    <MapSelector></MapSelector>\n                \n                </div>}\n        </Spring>\n    )\n    \n}\n\nexport default ControlPanel\n","import React, { useState, useEffect } from \"react\";\nimport ClockController from \"./clockController\";\nimport Map from \"./map\";\nimport Eww from \"./eww\";\nimport MissionSelector from \"./missionselector\";\nimport Fullscreen from \"react-full-screen\";\nimport { useFullscreen } from '@straw-hat/react-fullscreen';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useGlobal } from 'reactn';\n\nimport \"./styles.css\"\nimport TimeSelector from \"./timeselector\";\nimport TimeLabel from \"./timelabel\";\nimport MapStateLabel from \"./mapstatelabel\";\n\nimport Debug from \"./debug\";\nimport ControlPanel from \"./controlpanel\";\n\n\n\nconst App = () => {\n  //const [count, setCount] = useState(1000);\n  const [hasFetched, setFetch] = useState(false)\n\n\n  \n  const [ mission, setMission ] = useGlobal('mission');\n    useEffect(() => {\n        console.log('Mission changed to: '+ mission)\n    }, [mission]);\n \n\n\n  // Set boundaries and zoom factor of the time scale\n  const [min, setMin] = useState((new Date(\"2015-04-10\")).getTime())\n  const [max, setMax] = useState((new Date(\"2019-12-31\")).getTime())\n  \n  const [vertical, setVertical] = useState(true)\n  \n  useHotkeys(\"h\",() => {\n    setVertical(prevVertical => {\n        return (!prevVertical)\n      })\n    })\n\n\n  useEffect(() => {\n\n    const mockApi = () => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const randomInt = Math.ceil(Math.random() * 10)\n          console.log(\"mockApi done\")\n          resolve(randomInt)\n        }, 2000)\n      })\n    }\n    \n    async function doFetch() {\n      if (!hasFetched) {\n        const apiResponse = await mockApi();\n        setFetch(true);\n      }\n    }\n\n    doFetch()\n  }, []);\n  \n\n\n\n  const [isFull,setIsfull] = useState(false)\n  const { isFullscreen, toggleFullscreen } = useFullscreen(window.document.body);\n  const [isControlPanel, setIscontrolpanel] = useState(false)\n  \n  useHotkeys(\"f\",toggleFullscreen )  \n  \n  //const [ appdate, setAppdate ] = useGlobal('appdate');\n  // const [ myname,  ] = useGlobal('appnames');\nconsole.log('app renders')\n  return (\n    <div className=\"App\">\n      <Fullscreen enabled={isFull} onChange={() =>  {if(!isFull) setIsfull(false)} }>\n      \n        <div className=\"DateTimeLabel\" >\n          <TimeLabel vertical={vertical} />\n        </div>\n        \n        <div className=\"ClockController\">\n          <ClockController duration=\"600000\"/>\n        </div> \n\n        <div className=\"Globe\">\n          <Eww id=\"globe\" starfield=\"true\" atmosphere='true' clon='0.5' clat='40' names='true'/>\n        </div>\n        <div className={vertical?\"TimeSelectorv\":\"TimeSelectorh\"}>\n          <TimeSelector min={min} max={max} vertical={vertical}/>\n        </div>\n        \n        <img className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>setIscontrolpanel((isControlPanel => !isControlPanel))} />\n        <div className='MissionLabel'>{mission}</div>\n        <MapStateLabel></MapStateLabel>\n        <ControlPanel active={isControlPanel}/>\n        <Debug action='Bonjour'/>\n      </Fullscreen>\n   </div>\n  );\n}\n\n        // <div className='MiniGlobe' >\n        //   <Eww id='miniglobe' clon='0.5' clat='40' myname={myname}/>  \n        // </div>  \n\n\n\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()).getTime())\n\n    // Set current time as global state\n    setGlobal({appdate: ((new Date()).getTime())})\n    setGlobal({searchdate: ((new Date()).getTime())})\n    setGlobal({mission: 'S1'})\n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./app\";\nimport {initGlobalStates} from \"./initglobalstates\"\nimport registerServiceWorker from './registerServiceWorker';\n\n// if you're in create-react-app import the files as:\n// import store from \"./js/store/index\";\n// import App from \"./js/components/App.jsx\";\ninitGlobalStates()\n\nrender(\n  <App />,\n  // The target element might be either root or app,\n  // depending on your development environment\n  // document.getElementById(\"app\")\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();"],"sourceRoot":""}