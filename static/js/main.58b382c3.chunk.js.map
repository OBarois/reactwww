{"version":3,"sources":["../node_modules/typescript/lib sync","useClock.js","clockController.js","dhusToGeojson.js","map.js","useDatahub.js","missionselector.js","timeselector.js","timelabel.js","debug.js","controlpanel.js","app.js","registerServiceWorker.js","initglobalstates.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useClock","_ref","autoStart","duration","initDate","startdate","_useState","useState","_useState2","Object","slicedToArray","date","setDate","_useState3","_useState4","playing","setPlaying","ldate","useRef","refreshRate","intervalRef","step","timeoutRef","start","console","log","current","setInterval","incrementDate","setTimeout","togglePause","clearTimeout","clearInterval","undefined","useEffect","Date","getTime","reset","increaseSpeed","Math","abs","decreaseSpeed","forceDate","newdate","ClockController","_useGlobal","useGlobal","_useGlobal2","appdate","setAppdate","_useClock","useHotkeys","lastTap","setLasttap","react_default","a","createElement","className","onClick","now","dhusToGeojson","response","features","feed","entry","map","item","reshuffle","array","json","i","length","name","content","hubItem","assign","int","double","str","sizeInBytes","sizeArray","size","split","round","parseFloat","title","geometry","wellknown","footprint","type","properties","updated","ingestiondate","beginposition","endposition","links","data","href","link","earthObservation","parentIdentifier","status","acquisitionInformation","platform","platformShortName","platformname","platformSerialIdentifier","platformserialidentifier","sensor","instrument","instrumentshortname","operationalMode","sensoroperationalmode","acquisitionParameter","acquisitionStartTime","acquisitionStopTime","relativePassNumber","parseInt","relativeorbitnumber","orbitNumber","orbitnumber","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","orbitdirection","productInformation","productType","producttype","err","message","mapFromHubOpenSearch","filter","totalResults","startIndex","itemsPerPage","Map","props","clon","clat","alt","wwd","setProjection","prevProj","supportedProjections","newProj","indexOf","globe","projection","WorldWind","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","redraw","removeGeoJson","geojsonlayers","setGeojsonlayers","removeLayer","layers","enabled","WorldWindow","wmsConfigBg","service","layerNames","numLevels","format","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","wmsConfigNames","configuration","baseUrl","slice","starFieldLayer","StarFieldLayer","atmosphereLayer","AtmosphereLayer","minActiveAltitude","layer","WmsLayer","starfield","atmosphere","l","addLayer","time","goToAnimator","travelTime","goTo","Position","deepPicking","_useDatahub","searchURLs","geojsonResults","setGeojsonResults","loading","setLoading","_useState5","_useState6","isfirstpage","setIsfirstPage","searchdate","_useGlobal3","mission","_useState7","_useState8","searchUrl","setSearchurl","_useState9","totalresults","startindex","itemsperpage","_useState10","pagination","setPagination","asyncToGenerator","regenerator_default","mark","_callee","geoJson","wrap","_context","prev","next","fetch","mode","credentials","sent","Number","t0","stop","apply","this","arguments","fetchURL","url","replace","dateFormat","windowSize","_unused2","_unused3","useDatahub","renderableLayer","RenderableLayer","ceil","random","concat","toConsumableArray","GeoJSONParser","load","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","Color","labelAttributes","offset","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","attributes","isLineStringType","isMultiLineStringType","drawOutline","outlineColor","interiorColor","red","green","blue","outlineWidth","isPolygonType","isMultiPolygonType","ShapeAttributes","addGeoJson","_useGlobal5","style","background","position","width","height","MissionSelector","setMission","src","TimeSelector","wid","zoomfactor","max","min","hei","vertical","setSearchdate","setHighlight","livePosition","setLiveposition","active","setActive","setStep","myvertical","timecontainer","_useSpring","useSpring","xy","_useSpring2","set","bind","useGesture","onDrag","down","delta","velocity","direction","_ref$temp","wheeling","first","last","temp","getValue","deltaOffset","lastNewxy","deltaFactor","lastStep","lastIncrement","lastDown","scale","parentElement","offsetHeight","div","sub","newxy","add","pow","minX","offsetTop","maxX","config","mass","tension","friction","precision","immediate","onRest","_ref3","onFrame","_ref2","timescale","setTimescale","useLayoutEffect","day","month","lastday","monthcode","year","lastmonth","tics","dayclass","monthclass","yearclass","getUTCDate","getUTCMonth","getUTCHours","getUTCFullYear","push","class","pos","label","key","top","left","scaleText","offsetWidth","zoom","points","ref","web","transform","interpolate","x","y","TimeLabel","_useGlobal4","highlight","setYear","setMonth","setDay","setTime","color","Debug","action","debug","setDebug","display","right","ControlPanel","styleOn","opacity","marginRight","styleOff","renderprops","from","to","src_missionselector","App","hasFetched","setFetch","setVertical","prevVertical","mockApi","Promise","randomInt","_doFetch","doFetch","isFull","setIsfull","_useFullscreen","useFullscreen","window","document","body","toggleFullscreen","isFullscreen","_useState11","_useState12","isControlPanel","setIscontrolpanel","dist_default","onChange","src_timelabel","clockController","astmosphere","src_timeselector","src_controlpanel","src_debug_0","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","setGlobal","render","app","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.58b382c3.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 207;","import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, duration, startdate }) {\n    //console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    let initDate = startdate\n    const [date, setDate] = useState(initDate)\n    const [playing, setPlaying] = useState(false)\n    const ldate = useRef();\n\n    // refresh rate in msec\n    const refreshRate = 50\n\n    function incrementDate(step) {\n        //setDate(prevDate => { return prevDate + step  });\n        ldate.current += step \n        //setDate((new Date(ldate.current)).getTime());\n        setDate(ldate.current);\n    }\n      \n\n      // Control functions\n    const intervalRef = useRef();\n    const step = useRef(refreshRate);\n    const timeoutRef = useRef();\n    \n\n    function increaseSpeed() {\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshRate) step.current = refreshRate\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshRate) step.current = -1 * refreshRate\n     }\n\n    function start() {\n        console.log(\"starting Timer... (will stop in \"+duration/1000+\" sec)\")\n        if (!intervalRef.current) {\n            intervalRef.current = setInterval(() => incrementDate(step.current), refreshRate);\n            setPlaying(true)\n        }\n        timeoutRef.current = setTimeout(() => {\n            togglePause()\n            //start()\n          }, duration);\n    }\n\n    function togglePause() {\n        console.log('toggle clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) {\n            setPlaying(false)\n            clearInterval(intervalRef.current)\n            intervalRef.current = undefined\n        } else start()\n    }\n\n    function reset() {\n        console.log('reset')\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current)\n            intervalRef.current = undefined\n            setPlaying(false)\n        }\n        let initDate = (new Date()).getTime()\n        step.current = refreshRate\n        setDate(initDate)\n        ldate.current = initDate\n    }\n\n     \n    function forceDate(newdate) {\n        ldate.current = newdate\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        setDate((new Date()).getTime())\n        ldate.current = date\n        if (autoStart) {\n            start();\n        }\n        //return reset;\n    }, []);\n\n  \n  return { date, playing, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useClock } from \"./useClock\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\n\n\n\n\nfunction ClockController({ duration }) {\n\n    const [ appdate, setAppdate ] = useGlobal('appdate');\n\n    const {\n        date,\n        playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        autoStart: false,\n        duration: duration,\n        startdate: appdate\n    })\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",reset)\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    //const dateLabel = (new Date(date) ).toUTCString()\n\n\n\n    useEffect(() => {\n        //console.log(\"useEffect (date) in ClockController\")\n        setAppdate(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (appdate) in ClockController\")\n        //setAppdate(date)\n        forceDate(appdate)\n        //setAppdate({appdate: new Date(date)})\n    },[appdate]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (init) in ClockController\")\n        //console.log(\"appdate changed\")\n        forceDate(appdate)\n    },[]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        console.log('pressed')\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 300) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n    \n    return (\n/*\n        <div {...handlers} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width:\"100%\", height: \"100%\"}}>\n            {(new Date(date) ).toUTCString()}\n        </div>\n\n<div onClick={togglePause}><img className='Buttons' src={playing?pauseImage:playImage} alt=''/></div>\n*/\n\n    <div className= 'ClockController' onClick={handleDoubleTap} ></div>\n    );\n}\n\nexport default ClockController;\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(hubItem.footprint),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    links: {\n                        data: [{\n                            href: item.link[0].href,\n                        }]\n                    },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            size: sizeInBytes\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","// EOi \n// Copyright @obarois\n//\n//    tbd: \n//      * make WorldWind a hook:  import eww {useTime, addGeojson, toggleProj, toggleAtmo, toggleStar, ...} from eww-hook \n\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\n//import { useClock } from \"./useClock\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport useDatahub from \"./useDatahub\";\n\n// export default function Map(props) {\n  export default function Map(props) {\n  let clon = (props.clon)?props.clon:15.5\n  let clat = (props.clat)?props.clat:48\n  let alt = (props.alt)?props.alt:10000000\n\n\n  const wwd = useRef(null)\n  \n  \n  // toogle projection\n  useHotkeys(\"p\",toggleProjection)  \n  const [, setProjection] = useState(\"3D\")\n\n  // remove geojson layers\n  useHotkeys(\"c\",removeGeoJson)  \n\n  const [geojsonlayers, setGeojsonlayers] = useState([])\n  useEffect(() => {\n    console.log('geojson changed')\n    console.log(geojsonlayers)\n  },[geojsonlayers]);\n\n\n  // const toggleProjection = () => {\n  function toggleProjection() {\n    setProjection( prevProj => {\n      console.log(\"prevProjection: \"+prevProj)\n      let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n      let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n      console.log(\"newProjection: \"+supportedProjections[newProj])\n      switch (supportedProjections[newProj]) {\n        case \"3D\":\n            wwd.current.globe.projection = new WorldWind.ProjectionWgs84();\n            break;\n        case \"Equirectangular\":\n            wwd.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n            break;\n        case \"Mercator\":\n            wwd.current.globe.projection = new WorldWind.ProjectionMercator();\n            break;\n        case \"North Polar\":\n            wwd.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n            break;\n        case \"South Polar\":\n            wwd.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n            break;\n        default:\n        wwd.current.globe.projection = new WorldWind.ProjectionWgs84();\n        }\n      wwd.current.redraw();\n      return supportedProjections[newProj]\n      })      \n  }\n  \n  //toggle atmosphere\n  useHotkeys(\"a\",toggleAtmosphere)  \n  // const toggleAtmosphere = () => {\n  function toggleAtmosphere() {\n    wwd.current.layers[3].enabled = !wwd.current.layers[3].enabled\n    wwd.current.redraw();\n  }\n  //toggle starField\n  useHotkeys(\"s\",toggleStarField)  \n  function toggleStarField() {\n    wwd.current.layers[2].enabled = !wwd.current.layers[2].enabled\n    wwd.current.redraw();\n  }\n\n  //toggle starField\n  useHotkeys(\"n\",toggleNames)  \n  function toggleNames() {\n    wwd.current.layers[1].enabled = !wwd.current.layers[1].enabled\n    wwd.current.redraw();\n  }\n\n  function addGeoJson(url,replace) {\n    console.log('replace: '+replace)\n    function shapeConfigurationCallback(geometry, properties) {\n        var configuration = {};\n\n        var placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n        placemarkAttributes.imageScale = 10;\n        placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n        placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n            WorldWind.OFFSET_FRACTION, 5,\n            WorldWind.OFFSET_FRACTION, 5);\n        //placemarkAttributes.imageSource = whiteDot;\n\n\n        if (geometry.isPointType() || geometry.isMultiPointType()) {\n            configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n            \n        } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n            configuration.attributes.drawOutline = true;\n            configuration.attributes.outlineColor = new WorldWind.Color(\n              0.1 * configuration.attributes.interiorColor.red,\n              0.3 * configuration.attributes.interiorColor.green,\n              0.7 * configuration.attributes.interiorColor.blue,\n              1\n            );\n            configuration.attributes.outlineWidth = 1;\n        } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n            configuration.attributes = new WorldWind.ShapeAttributes(null);\n            configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n            configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n        }\n\n        //console.log(configuration.attributes);\n        return configuration;\n    }\n\n    function loadCompleteCallback() {\n      console.log('geojsonlayers state updated')\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        wwd.current.redraw();\n    }\n\n\n    let renderableLayer = new WorldWind.RenderableLayer(url.properties.updated+Math.ceil(Math.random() * 10000))\n    // if (replace) removeGeoJson()\n    wwd.current.addLayer(renderableLayer);\n    // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n    setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n    // setGeojsonlayers(wwd.current.layers)\n    let geoJson = new WorldWind.GeoJSONParser(url);\n    geoJson.load(loadCompleteCallback, shapeConfigurationCallback, renderableLayer);\n    // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n  }\n\n  function removeGeoJson() {\n    console.log('will remove json layers ')\n    console.log(geojsonlayers)\n    for(let i=0;i<geojsonlayers.length;i++) {\n      wwd.current.removeLayer(geojsonlayers[i])\n      console.log('removing json layers: ')\n      console.log(geojsonlayers[i])\n    }\n    setGeojsonlayers([])\n    console.log(geojsonlayers)\n    wwd.current.redraw();\n  }\n\n  useEffect(() => {\n    console.log(\"useEffect (mount) in Map\")\n    //wwd.current = new WorldWind.WorldWindow(props.id, elevationModel);\n    wwd.current = new WorldWind.WorldWindow(props.id);\n    //setWwd(wwd);\n    var wmsConfigBg = {\n      service: \"https://tiles.maps.eox.at/wms\",\n      layerNames: \"s2cloudless-2018\",\n      numLevels: 19,\n      format: \"image/png\",\n      size: 256,\n      sector: WorldWind.Sector.FULL_SPHERE,\n      levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n\n    var wmsConfigNames = {\n      service: \"https://tiles.maps.eox.at/wms\",\n      layerNames: \"overlay_bright\",\n      numLevels: 19,\n      format: \"image/png\",\n      size: 256,\n      sector: WorldWind.Sector.FULL_SPHERE,\n      levelZeroDelta: new WorldWind.Location(90, 90)\n    }\n    WorldWind.configuration.baseUrl = WorldWind.configuration.baseUrl.slice(0,-3)\n    var starFieldLayer = new WorldWind.StarFieldLayer();\n    var atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n    atmosphereLayer.minActiveAltitude = 5000000\n\n    var layers = [\n      { layer: new WorldWind.WmsLayer(wmsConfigBg, \"\"), enabled: true },\n      { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: false },\n      { layer: starFieldLayer, enabled: props.starfield },\n      { layer: atmosphereLayer, enabled: props.atmosphere }\n    ];\n\n    for (var l = 0; l < layers.length; l++) {\n      layers[l].layer.enabled = layers[l].enabled;\n      wwd.current.addLayer(layers[l].layer);\n    }\n    //var date = new Date();\n    starFieldLayer.time = new Date(appdate);\n    atmosphereLayer.time = new Date(appdate);\n    setTimeout(() => {\n      wwd.current.goToAnimator.travelTime = 1000;\n      wwd.current.goTo(new WorldWind.Position(clat, clon, alt));\n      wwd.current.redraw();\n      }, 2000)\n\n    wwd.current.redraw();\n    wwd.current.deepPicking = true;\n    }, []); // effect runs only once\n\n  // The Map component reacts to changes of the global state 'appdate' (in ms since Epoch)\n  const [appdate,  ] = useGlobal('appdate')\n  useEffect(() => {\n    //console.log(\"useEffect (appdate) in Map\")\n    wwd.current.layers[2].time = wwd.current.layers[3].time = new Date(appdate)\n    wwd.current.redraw();\n  },[appdate]);\n\n  // The Map component reacts to changes of geoJson data provided by the Copernicus Sentinel data hub\n  const { geojsonResults,  loading, isfirstpage} = useDatahub();\n  useEffect(() => {\n    if(geojsonResults !== {}) {\n      console.log('datahub in use')\n        console.log(geojsonResults)\n        try {\n          addGeoJson(geojsonResults,isfirstpage?true:false)\n        } catch (err) {\n          console.log(\"error on geojson parsing\")\n          console.log(err)\n        }\n      }\n      \n  },[geojsonResults]);\n  const [ searchdate,  ] = useGlobal('searchdate');\n  const [ mission,  ] = useGlobal('mission');\n  useEffect(() => {\n    removeGeoJson()\n  },[searchdate,mission]);\n\n\n  var globeStyle = {\n    //background:  \"linear-gradient(rgb(67, 124, 199), #111) repeat scroll 0 0 #222\",\n    background: 'inherit',\n    position: \"fixed\",\n    //width: props.width,\n    //height: props.height\n    width: 'inherit',\n    height: 'inherit'\n  };\n\n  return (\n      <canvas id={props.id} style={globeStyle} />\n  );\n}\n\n","import { useState, useEffect } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\nimport { ModuleResolutionKind } from \"typescript\";\n\n\n\nexport default function useDatahub() {\n\n    let searchURLs = []\n    //http://131.176.236.55/dhus/\n    //https://scihub.copernicus.eu/apihub/search?\n    searchURLs[\"S1\"] = 'https://131.176.236.55/dhus/search?q=(%20beginposition:[{start}%20TO%20{end}]%20AND%20platformname:Sentinel-1%20AND%20producttype:GRD)&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S2\"] = 'https://131.176.236.55/dhus/search?q=(%20beginposition:[{start}%20TO%20{end}]%20AND%20platformname:Sentinel-2%20AND%20producttype:S2MSI1C)&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S3\"] = 'https://131.176.236.55/dhus/search?q=(%20beginposition:[{start}%20TO%20{end}]%20AND%20platformname:Sentinel-3%20AND%20(producttype:OL_1_ERR___%20OR%20producttype:SL_1_RBT___%20OR%20producttype:SR_1_SRA___))&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"S5P\"] = 'https://s5phub.copernicus.eu/search?q=(%20beginposition:[{start}%20TO%20{end}]%20AND%20platformname:Sentinel-5 precursor%20AND%20(producttype:L1B_RA_BD1%20OR%20(producttype:L2__NO2___%20AND%20processingmode:Near real time)))&start={startindex}&rows=100&sortedby=ingestiondate&order=desc&format=json'\n    searchURLs[\"ENVISAT\"] = 'https://eocat.esa.int/ngeo/catalogue/FEDEO-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&format=json&count=50&startIndex={startindex}'\n    \n    // search time window size in ms\n    const windowSize = 1000 * 60 * 60 * 3\n\n    const [geojsonResults, setGeojsonResults] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [isfirstpage, setIsfirstPage] = useState(true)\n    \n    const [ searchdate,  ] = useGlobal('searchdate');\n    const [ mission,  ] = useGlobal('mission');\n    const [ searchUrl, setSearchurl  ] = useState('');\n\n    const [ pagination, setPagination ] = useState({totalresults:0 ,startindex:0, itemsperpage:0});\n\n//{totalresults,startindex}\n    useEffect(() => {\n        const fetchURL = async () => {\n            // setLoading(true)\n            console.log('Search: '+ searchUrl)\n            try {\n                const response = await fetch(searchUrl, {mode: 'cors', credentials: 'include'})\n                const json = await response.json()\n                const geoJson = (mission === 'ENVISAT')? json : dhusToGeojson(json)\n                console.log('totalResults: ' + geoJson.properties.totalResults)\n                setPagination( \n                    {\n                    totalresults: Number(geoJson.properties.totalResults) ,\n                    startindex:  Number(geoJson.properties.startIndex), \n                    itemsperpage:  Number(geoJson.properties.itemsPerPage), \n                    })\n                if(Number(geoJson.properties.totalResults>0)) setGeojsonResults(geoJson) \n                setIsfirstPage((pagination.startindex + pagination.itemsperpage < pagination.totalresults)?true:false)\n                console.log('first?: ' + (pagination.startindex + pagination.itemsperpage < pagination.totalresults)?'true':'false')\n                // setLoading(false);   \n            } catch {\n                console.log(\"Didn't recieve a json !\")\n                //console.log(response)\n                setLoading(false);\n            }\n            \n        }\n        fetchURL(searchUrl);\n    }, [searchUrl]);\n    \n    useEffect(() => {\n        console.log(pagination)\n        if(pagination.startindex + pagination.itemsperpage < pagination.totalresults) {\n            let url = searchURLs[mission]\n            console.log(\"There's More...\")\n            // setIsfirstPage(false)\n            try {\n                url = url.replace(\"{start}\", dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'));\n                url = url.replace(\"{end}\", dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'));\n                url = url.replace(\"{startindex}\", pagination.startindex + pagination.itemsperpage);\n                //console.log(\"Next URL: \" + url)\n                setSearchurl(url)\n        \n            } catch {\n                console.log('Not a JULIAN date !')\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    }, [pagination]);\n\n    useEffect(() => {\n        console.log('DataHub ready. '+mission)\n    }, []);\n\n    useEffect(() => {\n        \n        if(mission && searchdate) {\n            \n            let url = searchURLs[mission]\n            //if(mission in [\"S1\",\"S2\",\"S3\"]) url = searchURLs[mission]\n            try {\n                url = url.replace(\"{start}\", dateFormat(new Date(searchdate - windowSize/2),'isoUtcDateTime'));\n                url = url.replace(\"{end}\", dateFormat(new Date(searchdate + windowSize/2),'isoUtcDateTime'));\n                url = url.replace(\"{startindex}\", 0);\n                setLoading(true)\n                // setIsfirstPage(true)\n                setSearchurl(url)\n        \n            } catch {\n                console.log('Not a JULIAN date !')\n            }\n        }\n        \n    }, [searchdate, mission]);\n/*    \n    const [ mission, setMission ] = useGlobal('mission');\n    useEffect(() => {\n        if(mission in [\"S1\",\"S2\",\"S3\"]) setUrl(searchURLs[mission])\n    }, [mission]);\n    */\n\n    return {geojsonResults, loading, isfirstpage}\n}\n","import React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './missionselector.css'\n\n\n// should use a prop\n\nfunction MissionSelector() {\n\n\n    const [ mission, setMission ] = useGlobal('mission');\n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2')}) \n    useHotkeys(\"3\",()=>{setMission('S3')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MissionSelector'>\n            <div className='Circle'><img className='MissionIcon' src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n            <div className='Circle'><img className='MissionIcon' src='./images/s2_black.png' alt='' onClick={() => setMission('S2')} /></div>\n            <div className='Circle'><img className='MissionIcon' src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n            <div className='Circle'><img className='MissionIcon' src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n           \n            \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\"\nimport {useSpring, animated, config} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport './timeselector.css'\nimport { useGlobal } from 'reactn'\nimport { add, sub, scale } from 'vec-la'\n\n\n// to be split in a controller and a useTouchScale hook () => {<TouchScale>, scaleRenderer, size}\n\n\n\n\nfunction TimeSelector(props)  {\n    //console.log(\"Render TimeSelector \")\n    const dayspace = 40\n    const zoomfactor = (props.max-props.min)/(dayspace*(props.max-props.min)/(1000*60*60*24))\n    const min = props.min\n    const max = min +((props.max - props.min) / zoomfactor)\n\n    \n\n    let wid, hei = 0\n    if(props.vertical) {\n        hei = max - min\n        wid = 100\n    } else {\n        wid = max - min\n        hei = 100\n\n    }\n\n    const [appdate, setAppdate] = useGlobal('appdate')\n    const [, setSearchdate] = useGlobal('searchdate')\n    const [, setHighlight] = useGlobal('highlight')\n    const [livePosition, setLiveposition] = useState(new Date())\n\n    const [active, setActive] = useState(false); \n\n    const [step, setStep] = useState('continuous')\n\n    const myvertical = useRef()\n    myvertical.current = props.vertical\n\n\n    const timecontainer = useRef()\n\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\n\n\n    const bind = useGesture({\n        onDrag: ({  down, delta, velocity, active , direction, wheeling, time, first, last, temp = {xy: xy.getValue(), deltaOffset: [0,0], lastNewxy: [0,0],deltaFactor: [1,1], lastStep: 1, lastIncrement: 0,lastDown: false }}) => {\n            let springConfigUp = { mass: 1, tension: 200 , friction: 40, precision: 1 }\n            let springConfigDown = { mass: 1, tension: 1200 , friction: 40, precision: 0.01 }\n            let config = {  velocity: scale(direction, velocity), decay: true, precision: 1 }\n\n            velocity = (velocity<.15)?0:velocity\n\n            if (!down) setStep(1)\n            \n            if(down != temp.lastDown) { setActive(true)}\n            temp.lastDown = down\n            if(myvertical.current) {    \n                //let pos = target.getBoundingClientRect().top\n                let height = timecontainer.current.parentElement.offsetHeight\n\n                //let followDest = (delta[0]<-200)?delta[1]*10+temp.xy[1]:delta[1]+temp.xy[1]\n                let step = 1\n                let div = 1\n                if (delta[0]<-30) {step = (1000 * 60 * 60 * 24)  / zoomfactor; div = 10; }\n                if (delta[0]<-80) {step = (1000 * 60 * 60 * 24 * 30) / zoomfactor; div = 15}\n                if (delta[0]<-160) {step = (1000 * 60 * 60 * 24 * 365) / zoomfactor; div = 30}\n\n                if(step !== temp.lastStep) {\n                    //console.log('Step changed from: '+temp.lastStep+' to: '+ step)\n                    setStep(step)\n                    temp.deltaOffset = delta\n                    temp.xy = temp.lastNewxy\n                }\n\n                delta = sub(delta,temp.deltaOffset)\n                let deltaFactor = [Math.round(delta[0]/div)*step,Math.round(delta[1]/div)*step]\n                if(down) velocity = 0\n                let newxy = add(scale(deltaFactor,Math.pow(velocity+1,2.5)), temp.xy)\n\n                if(step !== temp.lastStep) {\n                    temp.xy = newxy\n                    temp.lastStep = step\n                }\n\n                temp.lastNewxy = newxy\n                \n                const setLiveTime = ({ xy }) => { setLiveposition(min+(-xy[1]+height/2)*zoomfactor)}\n                const setFinalTime = ({ xy }) => {   if(!down && !active) {setActive(false)}; if(!down) { setSearchdate(min+(-xy[1]+height/2)*zoomfactor) }}  \n\n                let minX = timecontainer.current.parentElement.offsetTop + timecontainer.current.parentElement.offsetHeight / 2\n                let maxX = - timecontainer.current.offsetHeight + timecontainer.current.parentElement.offsetHeight / 2\n        \n                newxy[1] = newxy[1]>minX ? minX : newxy[1]\n                newxy[1] = newxy[1]<maxX ? maxX : newxy[1]\n\n                set({  xy: newxy ,   config: down?springConfigDown:springConfigUp, immediate: down, onRest: setFinalTime, onFrame: setLiveTime} )\n\n            } else {    \n            }\n            return temp\n        }\n    })\n\n    \n\n    const scaleText = () => {\n        \n        let monthcode = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n        let day, month, hour, year = 0\n        let lastday, lastmonth = 0\n        let tics = []\n        const dayclass = (!props.vertical)?'DayTic':'DayTic-v'\n        const monthclass = (!props.vertical)?'MonthTic':'MonthTic-v'\n        const yearclass = (!props.vertical)?'YearTic':'YearTic-v'\n        \n        \n        for (let i=props.min;i<=props.max;i+=3600000) {\n            day = (new Date(i)).getUTCDate()\n            month = monthcode[(new Date(i)).getUTCMonth()]\n            hour = (new Date(i)).getUTCHours()\n            year = (new Date(i)).getUTCFullYear()\n            if(day !== lastday) tics.push({class:dayclass, pos: (i-props.min)/zoomfactor, label: day})\n            if(month !== lastmonth ) {\n                tics.push({class:monthclass, pos: (i-props.min)/zoomfactor, label: month})\n                tics.push({class:yearclass, pos: (i-props.min)/zoomfactor, label: year})\n            }\n            //if(year != lastyear) tics.push({class:'YearTic', pos: (i-props.min)/zoomfactor, label: year})\n            //if(hour != lasthour) tics.push({class:'HourTic', pos: (i-props.min)/zoomfactor, label: '.'})\n            lastday = day\n            lastmonth = month\n        }\n\n            return tics.map(item => (            <div className={item.class} key={item.class+item.pos} style={(!props.vertical)?{left:item.pos}:{top:item.pos}}>{item.label}</div>))\n    }\n\n    const [timescale, setTimescale] = useState('')    \n    //const [vertical, setVertical] = useState(props.vertical)    \n    useLayoutEffect(() => {\n        //console.log(\"useEffect (livePosition) in TimeSelector: \"+livePosition)\n        setTimescale(scaleText(props.vertical))\n    \n    },[props.vertical])\n\n\n    \n\n\n    useLayoutEffect(() => {     \n        let offset =0\n        //console.log('Active: '+active)\n        if(!active) {\n            if(props.vertical) {\n                offset = ((min - appdate)/zoomfactor)+timecontainer.current.parentElement.offsetHeight/2\n                set({ xy: [0,offset], config: { tension: 1200, friction: 40 }, onFrame: null, onRest: null }  )\n            } else {\n                offset = ((min - appdate)/zoomfactor)+timecontainer.current.parentElement.offsetWidth/2\n                set({ xy: [offset,0], config: { tension: 1200, friction: 40 }, onFrame: null, onRest: null }  )\n\n            }\n   \n            \n        }\n    },[appdate,timescale])  \n\n    useEffect(() => {\n        setAppdate(livePosition)\n    },[livePosition])\n\n    useEffect(() => {\n        console.log('Step changed to: ' + step)\n        switch(step) {\n            case 40:\n                setHighlight(\"day\")\n                break;\n            case 1200:\n                setHighlight(\"month\")\n                break;\n            case 14600:\n                setHighlight(\"year\")\n                break;\n            default:\n                setHighlight(\"none\")\n        }\n    },[step])\n\n\n    useLayoutEffect(() => {\n        console.log(\"zoom changed to: \"+props.zoom)\n    },[props.zoom])\n\n    return (\n        <div className={props.vertical?\"Mask-v\":\"Mask\"} >\n            \n            <div className=\"TriangleContainer\" >\n                <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                    <polygon points=\"20,5 20,35 12,20\" />   \n                </svg> \n            </div>        \n            <div className=\"TimeContainer\" ref={timecontainer}>\n                \n                <animated.div className=\"TimeScale\" {...bind()} style={{ width: wid,height: hei, transform: xy.interpolate((x, y) => `translate3d(0px,${y}px,0)`) }}>\n                    {timescale}\n                </animated.div>\n            </div>\n        </div>\n    )\n}\n\nexport default TimeSelector","import React, { useState, useLayoutEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\nimport \"./timelabel.css\"\n\n\n\n\nfunction TimeLabel() {\n\n    const [ appdate,  ] = useGlobal('appdate')\n    const [ highlight, setHighlight] = useGlobal('highlight')\n\n    const [year, setYear] = useState('') \n    const [month, setMonth] = useState('') \n    const [day, setDay] = useState('') \n    const [time, setTime] = useState('') \n\n    useLayoutEffect(() => {     \n        let date = new Date(appdate)\n        setYear(date.getUTCFullYear())\n        setMonth(dateFormat(date,'UTC:mmm'))\n        setDay(dateFormat(date,'UTC:dd'))\n        setTime(dateFormat(date,'UTC:HH:MM:ss'))\n },[appdate])\n\n\n    return (\n        <div className='LabelCountainer' >\n            <div className='Line' key='line' >____</div>\n            <div className='DayLabel' key='day' style={highlight=='day'?{color: 'rgba(120,0,0,1)'}:{}} >{day}</div>\n            <div className='YearLabel' key='year' style={highlight=='year'?{color: 'rgba(120,0,0,1)'}:{}} >{year}</div>\n            <div className='MonthLabel' key='month' style={highlight=='month'?{color: 'rgba(120,0,0,1)'}:{}} >{month}</div>\n            <div className='TimeLabel' key='time' >{time}</div>\n        </div>\n    );\n\n\n    \n}\n\nexport default TimeLabel;\n","import React, { useEffect, useState } from \"react\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './debug.css'\n\n\n\n\nfunction Debug({action}) {\n\n    const [ debug, setDebug ] = useState(false)\n    useHotkeys(\"d\",()=>{setDebug(action => !action)}) \n\n    useEffect(() => {\n        console.log('Debug Overlay: press D ')\n        console.log('action (use): '+action)\n    }, []);\n\n    useEffect(() => {\n        console.log('debug: '+debug)\n    }, [debug]);\n\n    console.log('debug rendered')\n\n    return (\n        <div className='Debug' style={{display: (debug)?'inline':'none', width: '100%', height:'100%'}}>\n            <div className='ContinuousScroll' style={{position: 'relative', top: '70%', right:0, width: 60, height:'100%', background:  'rgba(22, 22, 20, 0.24)'}}/>\n        </div>\n    )\n}\n\nexport default Debug\n","import React from \"react\";\nimport {useSpring, animated} from 'react-spring';\nimport {Spring} from 'react-spring/renderprops'\nimport \"./controlpanel.css\"\n\nimport MissionSelector from \"./missionselector\";\n\n\n\n\n\nfunction ControlPanel({active}) {\n\n\n    /*\n    //const props = useSpring({from: { opacity: 0, marginLeft: 0 }, to: { opacity: 1, marginLeft: 100 }})\n    const props = useSpring({opacity: 0, to: { opacity: 1}})\n    return (\n        <animated.div className='ControlPanel' style={props}>I will fade in</animated.div>\n    )\n*/\n    let styleOn = { opacity: 1, marginRight: 0 }\n    let styleOff = { opacity: 0, marginRight: -500 }\n\n\n    return (\n\n        <Spring\n            from={ active ? styleOff : styleOn}\n            to={ active ? styleOn : styleOff}>\n            {props => \n                <div className='ControlPanel' style={props} >\n                    <MissionSelector></MissionSelector>\n                \n                </div>}\n        </Spring>\n    )\n    \n}\n\nexport default ControlPanel\n","import React, { useState, useEffect } from \"react\";\nimport ClockController from \"./clockController\";\nimport Map from \"./map\";\nimport MissionSelector from \"./missionselector\";\nimport Fullscreen from \"react-full-screen\";\nimport { useFullscreen } from '@straw-hat/react-fullscreen';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useGlobal } from 'reactn';\n\nimport \"./styles.css\"\nimport TimeSelector from \"./timeselector\";\nimport TimeLabel from \"./timelabel\";\nimport Debug from \"./debug\";\nimport ControlPanel from \"./controlpanel\";\n\n\n\nconst App = () => {\n  //const [count, setCount] = useState(1000);\n  const [hasFetched, setFetch] = useState(false)\n\n\n  \n  //const [ appdate,  ] = useGlobal('appdate') // May be not a good idea \n  const [ searchdate,  ] = useGlobal('searchdate')\n  const [ mission, setMission ] = useGlobal('mission');\n    useEffect(() => {\n        console.log('Mission changed to: '+ mission)\n    }, [mission]);\n\n\n  // Set boundaries and zoom factor of the time scale\n  const [min, setMin] = useState((new Date(\"2000-04-10\")).getTime())\n  const [max, setMax] = useState((new Date(\"2019-12-31\")).getTime())\n  \n  const [vertical, setVertical] = useState(true)\n  \n  useHotkeys(\"h\",() => {\n    setVertical(prevVertical => {\n        return (!prevVertical)\n      })\n    })\n\n\n  useEffect(() => {\n\n    const mockApi = () => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const randomInt = Math.ceil(Math.random() * 10)\n          console.log(\"mockApi done\")\n          resolve(randomInt)\n        }, 2000)\n      })\n    }\n    \n    async function doFetch() {\n      if (!hasFetched) {\n        const apiResponse = await mockApi();\n        setFetch(true);\n      }\n    }\n\n    doFetch()\n  }, []);\n  \n\n\n\n  const [isFull,setIsfull] = useState(false)\n  const { isFullscreen, toggleFullscreen } = useFullscreen(window.document.body);\n  const [isControlPanel, setIscontrolpanel] = useState(false)\n  \n  useHotkeys(\"f\",toggleFullscreen )  \n  \n  //const [ appdate, setAppdate ] = useGlobal('appdate');\n\n  return (\n    <div className=\"App\">\n      <Fullscreen enabled={isFull} onChange={() =>  {if(!isFull) setIsfull(false)} }>\n      \n        <div className=\"DateTimeLabel\" >\n          <TimeLabel vertical={vertical} />\n        </div>\n        \n        <div className=\"ClockController\">\n          <ClockController duration=\"600000\"/>\n        </div> \n\n        <div className=\"Globe\">\n          <Map id=\"globe\" starfield=\"false\" astmosphere='false' clon='0.5' clat='40'/>\n        </div>\n        <div className={vertical?\"TimeSelectorv\":\"TimeSelectorh\"}>\n          <TimeSelector min={min} max={max} vertical={vertical}/>\n        </div>\n        \n        <img className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>setIscontrolpanel((isControlPanel => !isControlPanel))} />\n        <div className='MissionLabel'>{mission}</div>\n        <ControlPanel active={isControlPanel}/>\n          \n        <Debug action={'Bonjour'}/>\n      </Fullscreen>\n   </div>\n  );\n}\n\n//  <MissionSelector mission='S1'/>\n\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()).getTime())\n\n    // Set current time as global state\n    setGlobal({appdate: ((new Date()).getTime())})\n    setGlobal({searchdate: ((new Date()).getTime())})\n    setGlobal({mission: 'S1'})\n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./app\";\nimport {initGlobalStates} from \"./initglobalstates\"\nimport registerServiceWorker from './registerServiceWorker';\n\n// if you're in create-react-app import the files as:\n// import store from \"./js/store/index\";\n// import App from \"./js/components/App.jsx\";\ninitGlobalStates()\n\nrender(\n  <App />,\n  // The target element might be either root or app,\n  // depending on your development environment\n  // document.getElementById(\"app\")\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();"],"sourceRoot":""}