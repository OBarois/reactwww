{"version":3,"sources":["useClock.js","clockController.js","useEww.js","dhusToGeojson.js","useDatahub.js","searchmanager.js","eww.js","missionselector.js","mapselector.js","stepmask.js","timeselector2.js","timelabel.js","mapstatelabel.js","debug.js","slidepanel.js","colorpicker.js","app.js","registerServiceWorker.js","initglobalstates.js","index.js"],"names":["useClock","_ref","autoStart","duration","initDate","startdate","_useState","useState","_useState2","Object","slicedToArray","date","setDate","_useState3","_useState4","playing","setPlaying","ldate","useRef","refreshRate","intervalRef","step","timeoutRef","start","console","log","current","setInterval","incrementDate","setTimeout","togglePause","clearTimeout","clearInterval","undefined","useEffect","Date","getTime","reset","increaseSpeed","Math","abs","decreaseSpeed","forceDate","newdate","ClockController","_useGlobal","useGlobal","_useGlobal2","appdate","setAppdate","_useClock","useHotkeys","lastTap","setLasttap","react_default","a","createElement","className","onClick","now","useEww","id","clon","clat","alt","starfield","atmosphere","names","eww","setProjection","_useState5","_useState6","geojsonlayers","setGeojsonlayers","_useState7","latitude","longitude","altitude","aoi","_useState8","ewwstate","setEwwState","getLayerByName","name","i","layers","length","displayName","enableRenderables","_x","_enableRenderables","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee","time","j","renderable","renderableStartDate","renderableStopDate","wrap","_context","prev","next","includes","renderables","userProperties","earthObservation","acquisitionInformation","acquisitionParameter","acquisitionStartTime","acquisitionStopTime","enabled","timeOffset","stop","setGlobeStates","lo","navigator","lookAtLocation","la","al","range","vp","bl","tr","view","viewport","polygon","pickTerrain","canvasCoordinates","x","y","height","terrainObject","position","round","err","width","getViewPolygon","objectSpread","viewpolygon","handleClick","recognizer","clientX","clientY","pickList","pick","pickedItems","objects","userObject","WorldWind","SurfaceShape","push","highlighted","redraw","handleDoubleClick","point","WorldWindow","redrawCallbacks","BasicWorldWindowController","prototype","applyLimits","WWMath","clamp","clickRecognizer","ClickRecognizer","numberOfClicks","doubleClickRecognizer","recognizeSimultaneouslyWith","maxClickInterval","tapRecognizer","TapRecognizer","numberOfTaps","doubleTapRecognizer","maxTapInterval","wmsConfigBg","service","layerNames","title","numLevels","format","size","sector","Sector","FULL_SPHERE","levelZeroDelta","Location","wmsConfigNames","configuration","baseUrl","slice","starFieldLayer","StarFieldLayer","atmosphereLayer","AtmosphereLayer","layer","WmsLayer","l","addLayer","goToAnimator","travelTime","goTo","Position","deepPicking","removeGeojson","removeLayer","addGeojson","url","epoch","renderableLayer","RenderableLayer","properties","updated","ceil","random","GeoJSONParser","load","concat","toConsumableArray","geometry","placemarkAttributes","PlacemarkAttributes","imageScale","imageColor","Color","labelAttributes","offset","Offset","OFFSET_FRACTION","isPointType","isMultiPointType","attributes","isLineStringType","isMultiLineStringType","drawOutline","outlineColor","interiorColor","red","green","blue","outlineWidth","isPolygonType","isMultiPolygonType","ShapeAttributes","highlightAttributes","addWMS","config","toggleStarfield","toggleAtmosphere","setTime","toggleProjection","prevProj","supportedProjections","newProj","indexOf","globe","projection","ProjectionWgs84","ProjectionEquirectangular","ProjectionMercator","ProjectionPolarEquidistant","toggleNames","dhusToGeojson","response","mapFromHubOpenSearch","item","reshuffle","array","json","content","hubItem","assign","int","double","str","sizeInBytes","sizeArray","split","parseFloat","wellknown","footprint","type","ingestiondate","beginposition","endposition","links","data","href","link","parentIdentifier","status","platform","platformShortName","platformname","platformSerialIdentifier","platformserialidentifier","sensor","instrument","instrumentshortname","operationalMode","sensoroperationalmode","relativePassNumber","parseInt","relativeorbitnumber","orbitNumber","orbitnumber","startTimeFromAscendingNode","stopTimeFromAscendingNode","orbitDirection","orbitdirection","productInformation","productType","producttype","message","features","feed","entry","Array","isArray","map","filter","totalResults","startIndex","itemsPerPage","useDatahub","buildUrl","mission","code","end","startindex","target","templateUrl","startIndexOrigin","dateOff","areaOff","find","collection","newurl","replace","geojsonResults","setGeojsonResults","loading","setLoading","setIsfirstPage","searchepoch","_useGlobal3","startend","_useGlobal5","_useGlobal7","apppolygon","_useGlobal9","_useGlobal10","gosearch","_SearchManager","_useGlobal4","setStartend","_useGlobal8","setReplace","setGosearch","windowSize","setWindowSize","searchList","setSearchList","replacemode","setReplacemode","count","toJSON","SearchDate","startepoch","UTC","getUTCFullYear","getUTCMonth","getUTCDate","_startdate","_enddate","newSearchList","shift","SearchManager","_useState9","_useState10","searchUrl","setSearchurl","_useState11","_useState12","pagination","setPagination","_useState13","_useState14","_ref2","geoJson","fetch","mode","credentials","sent","totalresults","Number","itemsperpage","t0","t1","fetchURL","min","_unused","e","Eww","_useEww","_useDatahub","_useGlobal11","_useGlobal12","appstarfield","setAppstarfield","_useGlobal13","_useGlobal14","appatmosphere","setAppatmosphere","_useGlobal15","_useGlobal16","appnames","setAppnames","_useGlobal17","setSearching","_useGlobal19","setAppaltitude","_useGlobal21","setApplatitude","_useGlobal23","setApplongitude","_useGlobal25","_useGlobal26","setApppolygon","reactn_default","style","background","MissionSelector","setMission","draggable","src","MapSelector","_useGlobal6","StepMask","highlight","active","setActive","display","TimeSelector","props","wid","setDebug","zoomfactor","max","hei","vertical","setSearchepoch","setHighlight","livePosition","setLiveposition","tsactive","setTsactive","setStep","myvertical","timecontainer","_useSpring","useSpring","xy","_useSpring2","set","bind","useGesture","onDrag","down","delta","velocity","distance","direction","wheeling","first","_ref$temp","last","temp","getValue","deltaOffset","deltaCumul","lastNewxy","lastStep","lastIncrement","lastTime","scale","parentElement","offsetHeight","div","sub","deltaFactor","newxy","add","pow","minX","offsetTop","maxX","mass","tension","friction","precision","immediate","onRest","_ref3","onFrame","onWheel","_ref4","event","_ref4$temp","persist","deltaY","_ref6","_ref5","timescale","setTimescale","useLayoutEffect","day","month","lastday","monthcode","year","lastmonth","tics","dayclass","monthclass","yearclass","getUTCHours","class","pos","label","key","top","left","scaleText","offsetWidth","zoom","points","ref","web","transform","interpolate","TimeLabel","searching","setYear","setMonth","setDay","dateFormat","MapStateLabel","appaltitude","Debug","debug","debugkeys","setDebugkeys","lines","SlidePanel","visible","setVisible","slidePanel","toggle","vxvy","initTarget","getAttribute","passive","imageSrc","children","ColorPicker","appcolor","lib","color","onChangeComplete","document","documentElement","setProperty","hex","App","hasFetched","setFetch","setVertical","prevVertical","mockApi","Promise","resolve","randomInt","_doFetch","doFetch","isFull","setIsfull","_useFullscreen","useFullscreen","window","body","toggleFullscreen","isFullscreen","dist_default","onChange","src_timelabel","clockController","timeselector2","src_mapstatelabel","src_missionselector","src_mapselector","src_colorpicker","src_debug_0","action","src_stepmask","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","setGlobal","render","app","getElementById","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.71c8168c.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\n\nexport function useClock({ autoStart, duration, startdate }) {\n    //console.log('useClock renders')\n    //const { autoStart, duration } = settings || {};\n  \n    let initDate = startdate\n    const [date, setDate] = useState(initDate)\n    const [playing, setPlaying] = useState(false)\n    const ldate = useRef();\n\n    // refresh rate in msec\n    const refreshRate = 50\n\n    function incrementDate(step) {\n        //setDate(prevDate => { return prevDate + step  });\n        ldate.current += step \n        //setDate((new Date(ldate.current)).getTime());\n        setDate(ldate.current);\n    }\n      \n\n      // Control functions\n    const intervalRef = useRef();\n    const step = useRef(refreshRate);\n    const timeoutRef = useRef();\n    \n\n    function increaseSpeed() {\n        step.current = (step.current > 0)? step.current *= 2:step.current /= 2\n        if(Math.abs(step.current) < refreshRate) step.current = refreshRate\n    }\n    function decreaseSpeed() {\n        step.current = (step.current > 0)? step.current /= 2:step.current *= 2\n        if(Math.abs(step.current) < refreshRate) step.current = -1 * refreshRate\n     }\n\n    function start() {\n        console.log(\"starting Timer... (will stop in \"+duration/1000+\" sec)\")\n        if (!intervalRef.current) {\n            intervalRef.current = setInterval(() => incrementDate(step.current), refreshRate);\n            setPlaying(true)\n        }\n        timeoutRef.current = setTimeout(() => {\n            togglePause()\n            //start()\n          }, duration);\n    }\n\n    function togglePause() {\n        console.log('toggle clock')\n        if(timeoutRef.current) clearTimeout(timeoutRef.current)\n        if (intervalRef.current) {\n            setPlaying(false)\n            clearInterval(intervalRef.current)\n            intervalRef.current = undefined\n        } else start()\n    }\n\n    function reset() {\n        console.log('reset')\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current)\n            intervalRef.current = undefined\n            setPlaying(false)\n        }\n        let initDate = (new Date()).getTime()\n        step.current = refreshRate\n        setDate(initDate)\n        ldate.current = initDate\n    }\n\n     \n    function forceDate(newdate) {\n        ldate.current = newdate\n    }\n\n\n    // didMount effect\n    useEffect(() => {\n        setDate((new Date()).getTime())\n        ldate.current = date\n        if (autoStart) {\n            start();\n        }\n        //return reset;\n    }, []);\n\n  \n  return { date, playing, togglePause, reset, increaseSpeed, decreaseSpeed, forceDate };\n}\n","import React, { useState, useEffect } from \"react\"\nimport { useClock } from \"./useClock\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\n\n\n\n\nfunction ClockController({ duration }) {\n\n    const [ appdate, setAppdate ] = useGlobal('appdate');\n\n    const {\n        date,\n        playing,\n        togglePause,\n        reset,\n        increaseSpeed,\n        decreaseSpeed,\n        forceDate\n    } = useClock({\n        autoStart: false,\n        duration: duration,\n        startdate: appdate\n    })\n\n\n    useHotkeys(\"t\",togglePause)\n    useHotkeys(\"r\",reset)\n    useHotkeys(\".\",increaseSpeed)\n    useHotkeys(\",\",decreaseSpeed)\n\n    //const dateLabel = (new Date(date) ).toUTCString()\n\n\n\n    useEffect(() => {\n        //console.log(\"useEffect (date) in ClockController\")\n        setAppdate(date)\n        //forceDate(date)\n        //setAppdate({appdate: new Date(date)})\n    },[date]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (appdate) in ClockController\")\n        //setAppdate(date)\n        forceDate(appdate)\n        //setAppdate({appdate: new Date(date)})\n    },[appdate]);\n\n    useEffect(() => {\n        //console.log(\"useEffect (init) in ClockController\")\n        //console.log(\"appdate changed\")\n        forceDate(appdate)\n    },[]);\n\n    const [lastTap, setLasttap] = useState()\n    const handleDoubleTap = () => {\n        console.log('pressed')\n        const now = Date.now();\n        if (lastTap && (now - lastTap) < 300) {\n          reset();\n        } else {\n            setLasttap(now)\n            togglePause()\n        }\n      }\n    \n    return (\n/*\n        <div {...handlers} style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width:\"100%\", height: \"100%\"}}>\n            {(new Date(date) ).toUTCString()}\n        </div>\n\n<div onClick={togglePause}><img className='Buttons' src={playing?pauseImage:playImage} alt=''/></div>\n*/\n\n    <div className= 'ClockController' onClick={handleDoubleTap} ></div>\n    );\n}\n\nexport default ClockController;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport WorldWind from \"webworldwind-esa\";\n\n\n// BasicWorldWindowController.prototype.applyLimits = function () {\n//     var navigator = this.wwd.navigator;\n\n//     // Clamp latitude to between -90 and +90, and normalize longitude to between -180 and +180.\n//     navigator.lookAtLocation.latitude = WWMath.clamp(navigator.lookAtLocation.latitude, -90, 90);\n//     navigator.lookAtLocation.longitude = Angle.normalizedDegreesLongitude(navigator.lookAtLocation.longitude);\n\n//     // Clamp range to values greater than 1 in order to prevent degenerating to a first-person navigator when\n//     // range is zero.\n//     navigator.range = WWMath.clamp(navigator.range, 1, Number.MAX_VALUE);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.heading = Angle.normalizedDegrees(navigator.heading);\n\n//     // Clamp tilt to between 0 and +90 to prevent the viewer from going upside down.\n//     navigator.tilt = WWMath.clamp(navigator.tilt, 0, 90);\n\n//     // Normalize heading to between -180 and +180.\n//     navigator.roll = Angle.normalizedDegrees(navigator.roll);\n\n//     // Apply 2D limits when the globe is 2D.\n//     if (this.wwd.globe.is2D() && navigator.enable2DLimits) {\n//         // Clamp range to prevent more than 360 degrees of visible longitude. Assumes a 45 degree horizontal\n//         // field of view.\n//         var maxRange = 2  Math.PI  this.wwd.globe.equatorialRadius;\n//         navigator.range = WWMath.clamp(navigator.range, 1, maxRange);\n\n//         // Force tilt to 0 when in 2D mode to keep the viewer looking straight down.\n//         navigator.tilt = 0;\n//     }\n// };\n\nexport function useEww({ id, clon, clat, alt, starfield, atmosphere, names }) {\n    //console.log('useEww renders')\n    \n  \n    const eww = useRef(null)\n    const [projection, setProjection] = useState(\"3D\")\n    // const [aoi, setAoi] = useState({type: null, value: null})\n    const [aoi, setAoi] = useState('')\n    const [geojsonlayers, setGeojsonlayers] = useState([])\n    const [ewwstate, setEwwState] = useState({latitude: clat, longitude: clon, altitude: alt, aoi:''})\n\n    //toggle atmosphere\n    function toggleAtmosphere() {\n        console.log('toggleAtmosphere')\n        eww.current.layers[3].enabled = !eww.current.layers[3].enabled\n        eww.current.redraw();\n    }\n\n    //toggle starField\n    function toggleStarfield() {\n        console.log('toggleStarfield')\n        eww.current.layers[2].enabled = !eww.current.layers[2].enabled\n        eww.current.redraw();\n    }\n\n    //toggle name overlay\n    function toggleNames() {\n        console.log('toggleNames')\n        eww.current.layers[1].enabled = !eww.current.layers[1].enabled\n        eww.current.redraw();\n    }\n\n    function  getViewPolygon () {\n        let view = eww.current.viewport\n        let area = {}\n        let polygon = ''\n        // console.log('view: ' + view.x + '/' + view.y + '/' + view.width + '/' + view.height);\n\n        let bl ;\n        try { \n            bl =  eww.current.pickTerrain(eww.current.canvasCoordinates(view.x, view.y + view.height)).terrainObject().position\n            bl.latitude = Math.round(bl.latitude * 10000)/10000\n            bl.longitude = Math.round(bl.longitude * 10000)/10000\n        }\n        catch(err) {bl = null;}\n\n\n        let tr ;\n        try { \n            tr = eww.current.pickTerrain(eww.current.canvasCoordinates(view.x + view.width, view.y)).terrainObject().position\n            tr.latitude = Math.round(tr.latitude * 10000)/10000\n            tr.longitude = Math.round(tr.longitude * 10000)/10000\n        }\n        catch(err) {tr = null;}\n\n        //console.log(bl.longitude+'/'+bl.latitude+'/'+tr.longitude+'/'+tr.latitude);\n        if(bl == null || tr == null )  {\n            //   area = {type:\"bbox\", value:\"-180,-90,180,90\"};\n              polygon = ''\n        } else {\n              area = {\n                    type: \"bbox\",\n                    value:\n                           bl.longitude +','\n                          + bl.latitude +','\n                          +tr.longitude +','\n                          +tr.latitude\n              };\n\n              polygon = 'POLYGON((' \n                + bl.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + bl.latitude + ',' \n                + tr.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + tr.latitude + ',' \n                + bl.longitude + ' ' + bl.latitude + '))' \n        }\n        return polygon\n\n    }\n    \n    const addGeojson = (url,epoch) => {\n\n        // console.log('replace: '+replace)\n\n        function shapeConfigurationCallback(geometry, properties) {\n            let configuration = {};\n            configuration.userProperties = properties\n    \n            let placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            placemarkAttributes.imageScale = 10;\n            placemarkAttributes.imageColor = new WorldWind.Color(0, 1, 1, 0.2);\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n                WorldWind.OFFSET_FRACTION, 5,\n                WorldWind.OFFSET_FRACTION, 5);\n            //placemarkAttributes.imageSource = whiteDot;\n    \n    \n            if (geometry.isPointType() || geometry.isMultiPointType()) {\n                configuration.attributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n                \n            } else if (geometry.isLineStringType() || geometry.isMultiLineStringType()) {\n                configuration.attributes.drawOutline = true;\n                configuration.attributes.outlineColor = new WorldWind.Color(\n                    0.1 * configuration.attributes.interiorColor.red,\n                    0.3 * configuration.attributes.interiorColor.green,\n                    0.7 * configuration.attributes.interiorColor.blue,\n                    1\n                );\n                configuration.attributes.outlineWidth = 1;\n            } else if (geometry.isPolygonType() || geometry.isMultiPolygonType()) {\n                configuration.attributes = new WorldWind.ShapeAttributes(null);\n                configuration.attributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.2);\n                configuration.attributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.3);\n\n                configuration.highlightAttributes = new WorldWind.ShapeAttributes(configuration.attributes);\n                configuration.highlightAttributes.outlineColor = new WorldWind.Color(1, 0, 0, 0.4);\n                configuration.highlightAttributes.interiorColor = new WorldWind.Color(1, 0, 0, 0.6);\n                // configuration.attributes.outlineWidth = 0.3;\n\n                // configuration.attributes.applyLighting = true;\n\n            }\n    \n            //console.log(configuration.attributes);\n            return configuration;\n        }\n\n        \n        function loadCompleteCallback() {\n            console.log(renderableLayer)\n            setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n            enableRenderables(epoch) // uncomment to disable renderables\n            eww.current.redraw();\n        }\n    \n        // if (replace) removeGeojson()\n        let renderableLayer = new WorldWind.RenderableLayer('Products: '+url.properties.updated+Math.ceil(Math.random() * 10000))\n        \n        eww.current.addLayer(renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])\n        // setGeojsonlayers(eww.current.layers)\n        let geoJson = new WorldWind.GeoJSONParser(url);\n        geoJson.load(loadCompleteCallback, shapeConfigurationCallback, renderableLayer);\n        // setGeojsonlayers((geojsonlayers)=>[...geojsonlayers,renderableLayer])        \n    }\n\n    function removeGeojson() {\n        for(let i=0;i<geojsonlayers.length;i++) {\n          eww.current.removeLayer(geojsonlayers[i])\n        //   console.log('removing json layers: ')\n        //   console.log(geojsonlayers[i])\n        }\n        setGeojsonlayers([])\n        // console.log(geojsonlayers)\n        eww.current.redraw();\n      }\n\n    function addWMS(config) {\n        let layer =  new WorldWind.WmsLayer(config, \"\")\n        // https://view.onda-dias.eu/instance00/ows?&service=WMS&request=GetMap&layers=S1B_IW_GRDH_1SDV_20190520T050758_20190520T050823_016323_01EB81_6EB6&styles=&format=image%2Fpng&transparent=true&version=1.1.1&width=256&height=256&srs=EPSG%3A3857&bbox=2035059.441064533,7044436.526761846,2191602.4749925737,7200979.560689885\n    }\n\n    function getLayerByName(name) {\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            // console.log('display name: '+eww.current.layers[i].displayName)\n            if (eww.current.layers[i].displayName === name) return eww.current.layers[i]\n        }\n        return null\n    }\n\n    async function enableRenderables(time) {\n        let timeOffset = 1000 * 60 * 60 * 3 // 3 hours\n        for (let i = 0; i < eww.current.layers.length; i++) {\n            if (eww.current.layers[i].displayName.includes('Products:')) {\n                for (let j = 0; j < eww.current.layers[i].renderables.length; j++) {\n                    let renderable = eww.current.layers[i].renderables[j]\n                    let renderableStartDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStartTime)).getTime()\n                    let renderableStopDate = (new Date(renderable.userProperties.earthObservation.acquisitionInformation[0].acquisitionParameter.acquisitionStopTime)).getTime()\n                    renderable.enabled = (renderableStartDate <= time+timeOffset/2 && renderableStopDate >= time-timeOffset/2) ? true : false            \n                }\n            }\n        }\n\n    }\n\n    function setTime(epoch) {\n        getLayerByName('StarField').time = getLayerByName('Atmosphere').time = new Date(epoch)\n        enableRenderables(epoch)\n        // console.log('display name: ')\n        // console.log(getLayerByName('StarField').displayName)\n        eww.current.redraw();\n        \n\n     }\n\n\n    function toggleProjection() {\n        setProjection( prevProj => {\n          console.log(\"prevProjection: \"+prevProj)\n          let supportedProjections = [ \"3D\", \"Equirectangular\", \"Mercator\"];\n          let newProj = (supportedProjections.indexOf(prevProj) + 1)%supportedProjections.length\n          console.log(\"newProjection: \"+supportedProjections[newProj])\n          switch (supportedProjections[newProj]) {\n            case \"3D\":\n                eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n                break;\n            case \"Equirectangular\":\n                eww.current.globe.projection = new WorldWind.ProjectionEquirectangular();\n                break;\n            case \"Mercator\":\n                eww.current.globe.projection = new WorldWind.ProjectionMercator();\n                break;\n            case \"North Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"North\");\n                break;\n            case \"South Polar\":\n                eww.current.globe.projection = new WorldWind.ProjectionPolarEquidistant(\"South\");\n                break;\n            default:\n            eww.current.globe.projection = new WorldWind.ProjectionWgs84();\n            }\n          eww.current.redraw();\n          return supportedProjections[newProj]\n          })      \n      }\n\n    // callback from eww   \n    const setGlobeStates = () => {\n        \n        let lo = eww.current.navigator.lookAtLocation.longitude\n        let la = eww.current.navigator.lookAtLocation.latitude\n        let al = eww.current.navigator.range\n        let vp = (al < 2000000?getViewPolygon():'')\n        // console.log(al + 'km : '+ vp)\n\n        // let newewwstate = {...ewwstate, longitude:lo, \n        //     latitude: la,\n        //     altitude: al, \n        //     viewpolygon: vp}\n        // setEwwState(newewwstate)\n\n        setEwwState((ewwstate) => { return {...ewwstate, longitude:lo, latitude: la, altitude: al, viewpolygon: vp}}) \n\n        // setEwwState({\n        //     longitude:lo, \n        //     latitude: la,\n        //     altitude: al, \n        //     viewpolygon: vp,\n        //     aoi: ai\n            \n        // })\n    }\n\n    // handler for tap/click\n\n    const handleClick  = (recognizer) => {\n        console.log('click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        // Perform the pick. Must first convert from window coordinates to canvas coordinates, which are\n        // relative to the upper left corner of the canvas rather than the upper left corner of the page.\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n        console.log(pickList)\n        if (pickList.terrainObject()) {\n            // position = pickList.terrainObject().position;\n            // store list of selected footprints in a string for later comparison\n            let pickedItems = []\n            for (let i = 0; i < pickList.objects.length; i++) {\n                if (pickList.objects[i].userObject instanceof WorldWind.SurfaceShape) {\n                    pickedItems.push(pickList.objects[i].userObject.userProperties.name) \n                    pickList.objects[i].userObject.highlighted = !pickList.objects[i].userObject.highlighted\n                }\n            }\n            console.log(pickedItems)\n            eww.current.redraw()\n        } else {\n            console.log('No position !');\n            return;\n        }\n\n\n    }\n\n    const handleDoubleClick  = (recognizer) => {\n        console.log('double click')\n        let x = recognizer.clientX\n        let y = recognizer.clientY\n        let pickList = eww.current.pick(eww.current.canvasCoordinates(x, y));\n\n        let position;\n  \n  \n        // Get coordinates of clicked point and list of selected footprints. Do nothing if click done outside the globe.\n        if (pickList.terrainObject()) {\n            position = pickList.terrainObject().position;\n            // eww.current.goTo(new WorldWind.Location(position.latitude, position.longitude));\n\n            let point = \"POINT(\"+position.longitude+' '+position.latitude+\")\"\n            \n            setEwwState((ewwstate) => { return {...ewwstate, aoi: point}}) \n    \n        } else {\n              console.log('No position !');\n              setEwwState((ewwstate) => { return {...ewwstate, aoi: ''}})\n        }\n  \n        \n\n       \n    }\n\n    // useEffect(() => {\n    //     console.log(\"useEffect aoi: \" + aoi)\n    //     let newewwstate = {...ewwstate, aoi: aoi}\n    //     setEwwState(newewwstate)\n    // }, [aoi]); \n\n    // didMount effect\n    useEffect(() => {\n        console.log(\"useEffect (mount) in Eww  star/atmo: \"+ starfield+'/'+atmosphere)\n        // eww.current = new WorldWind.WorldWindow(id, elevationModel);\n        eww.current = new WorldWind.WorldWindow(id);\n        eww.current.redrawCallbacks.push(setGlobeStates)\n\n        // Define a min/max altitude limit\n        WorldWind.BasicWorldWindowController.prototype.applyLimits = function () {\n            eww.current.navigator.range = WorldWind.WWMath.clamp(eww.current.navigator.range, 2000, 300000000);\n        }\n\n        // define click/tap recognisers\n        // let tapRecognizer = new WorldWind.TapRecognizer(eww.current, handleClick);\n        // tapRecognizer.numberOfTaps = 1;\n        // let doubleTapRecognizer = new WorldWind.TapRecognizer(eww.current, handleDoubleClick);\n        // doubleTapRecognizer.numberOfTaps = 2;\n        // doubleTapRecognizer.recognizeSimultaneouslyWith(tapRecognizer);\n\n        let clickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleClick);\n        clickRecognizer.numberOfClicks = 1;\n        let doubleClickRecognizer = new WorldWind.ClickRecognizer(eww.current, handleDoubleClick);\n        doubleClickRecognizer.numberOfClicks = 2;\n        doubleClickRecognizer.recognizeSimultaneouslyWith(clickRecognizer);\n        doubleClickRecognizer.maxClickInterval = 200;\n\n        let tapRecognizer = new WorldWind.TapRecognizer(eww.current, handleClick);\n        tapRecognizer.numberOfTaps = 1;\n        let doubleTapRecognizer = new WorldWind.TapRecognizer(eww.current, handleDoubleClick);\n        doubleTapRecognizer.numberOfTaps = 2;\n        doubleTapRecognizer.recognizeSimultaneouslyWith(tapRecognizer);\n        doubleTapRecognizer.maxTapInterval = 200;\n\n\n\n        //setWwd(eww);\n        let wmsConfigBg = {\n            service: \"https://tiles.maps.eox.at/wms\",\n            layerNames: \"s2cloudless-2018\",\n            title: \"s2cloudless-2018\",\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n    \n        let wmsConfigNames = {\n            service: \"https://tiles.maps.eox.at/wms\",\n            layerNames: \"overlay_bright\",\n            title: \"overlay_bright\",\n            numLevels: 19,\n            format: \"image/png\",\n            size: 256,\n            sector: WorldWind.Sector.FULL_SPHERE,\n            levelZeroDelta: new WorldWind.Location(90, 90)\n        }\n        WorldWind.configuration.baseUrl = WorldWind.configuration.baseUrl.slice(0,-3)\n        let starFieldLayer = new WorldWind.StarFieldLayer();\n        let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_01deg.jpg');\n        // let atmosphereLayer = new WorldWind.AtmosphereLayer('images/BlackMarble_2016_3km.jpg');\n        \n        //atmosphereLayer.minActiveAltitude = 5000000\n    \n        let layers = [\n            { layer: new WorldWind.WmsLayer(wmsConfigBg, \"\"), enabled: true },\n            { layer: new WorldWind.WmsLayer(wmsConfigNames, \"\"), enabled: names },\n            { layer: starFieldLayer, enabled: starfield },\n            { layer: atmosphereLayer, enabled: atmosphere }\n        ];\n    \n        for (let l = 0; l < layers.length; l++) {\n            layers[l].layer.enabled = layers[l].enabled;\n            eww.current.addLayer(layers[l].layer);\n        }\n        //let date = new Date();\n        starFieldLayer.time = new Date();\n        atmosphereLayer.time = new Date();\n        setTimeout(() => {\n            eww.current.goToAnimator.travelTime = 1000;\n            eww.current.goTo(new WorldWind.Position(clat, clon, alt));\n            eww.current.redraw();\n            }, 2000)\n    \n        eww.current.redraw();\n        eww.current.deepPicking = true;\n        // eww.current.orderedRenderingFilters.push(declutterByTime)\n    }, []); // effect runs only once\n        \n  \n  return { ewwstate, removeGeojson, addGeojson, addWMS, toggleStarfield, toggleAtmosphere, setTime, toggleProjection, toggleNames };\n}\n","import wellknown from 'wellknown';\n\nexport default function dhusToGeojson(response) {\n\n    \n    function mapFromHubOpenSearch(item) {    \n        function reshuffle(array) {\n            let json = {};\n            for(let i=0; i < array.length; i++) {\n                json[array[i].name] =  array[i].content;\n            }\n            return json;\n        }\n\n        try {\n            let hubItem = {};\n            if(item.date) Object.assign(hubItem,reshuffle(item.date));\n            if(item.int) Object.assign(hubItem,reshuffle(item.int));\n            if(item.double) Object.assign(hubItem,reshuffle(item.double));\n            if(item.str) Object.assign(hubItem,reshuffle(item.str));\n\n\n            var sizeArray = hubItem.size.split(\" \");\n            var sizeInBytes;\n            switch (sizeArray[1]) {\n                case \"B\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n                case \"MB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024);\n                    break;\n                case \"GB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024);\n                    break;\n                case \"TB\":\n                    sizeInBytes = Math.round(parseFloat(sizeArray[0])*1024*1024*1024);\n                    break;\n                default: \n                    sizeInBytes = Math.round(parseFloat(sizeArray[0]));\n                    break;\n\n            }\n            \n\n            var newItem = {\n                id: item.title,\n                geometry: wellknown(hubItem.footprint),\n                type: \"Feature\",\n                properties: {\n                    updated: new Date(hubItem.ingestiondate),\n                    title: item.title,\n                    name: item.title,\n                    date: hubItem.beginposition  +'/'+  hubItem.endposition,\n                    links: {\n                        data: [{\n                            href: item.link[0].href,\n                        }]\n                    },\n                    earthObservation: {\n                        parentIdentifier: \"\",\n                        status: \"ARCHIVED\",\n                        acquisitionInformation: [{\n                            platform: {\n                                platformShortName: hubItem.platformname,\n                                platformSerialIdentifier: hubItem.platformserialidentifier\n                            },\n                            sensor: {\n                                instrument: hubItem.instrumentshortname,\n                                operationalMode: hubItem.sensoroperationalmode\n                            },\n                            acquisitionParameter: {\n                                acquisitionStartTime: new Date(hubItem.beginposition),\n                                acquisitionStopTime: new Date(hubItem.endposition),\n                                relativePassNumber: parseInt(hubItem.relativeorbitnumber),\n                                orbitNumber: parseInt(hubItem.orbitnumber),\n                                startTimeFromAscendingNode: null,\n                                stopTimeFromAscendingNode: null,\n                                orbitDirection: hubItem.orbitdirection\n\n                            }\n                        }],\n                        productInformation: {\n                            productType: hubItem.producttype,\n                            //timeliness: indexes[\"product\"][\"Timeliness Category\"],\n                            size: sizeInBytes\n                        }\n                    }\n                }\n            }\n        \n            return newItem;\n        } catch (err) {\n            console.log(\"error parsing item from dhus: \"+err.message);\n            return {};\n        }\n    }\n\n    let features = [];\n    try {\n        if( response.feed.entry ) {\n            if(Array.isArray(response.feed.entry)) {\n                console.log('entry is an  array')\n                features = response.feed.entry.map( item =>  mapFromHubOpenSearch(item)).filter(item => item !== {});\n            } else {\n                features = [mapFromHubOpenSearch(response.feed.entry)]\n            }\n                \n        } else {\n            features = []\n        }\n        \n    } catch (err) {\n        console.log(response);\n        console.log(\"Error: \");\n        console.log(err);\n        features = []\n    }\n    //console.log(JSON.stringify(features));\n    let geojson = {   \n            type: \"FeatureCollection\",\n            id: \"search\",\n            properties: {\n                totalResults: response.feed[\"opensearch:totalResults\"],\n                startIndex: (response.feed[\"opensearch:startIndex\"])?response.feed[\"opensearch:startIndex\"]:1,\n                itemsPerPage: response.feed[\"opensearch:itemsPerPage\"],\n                title: \"DHuS search response\",\n                updated: new Date()\n            },\n            features: features\n        };\n\n    return geojson\n\n}\n","import { useState, useEffect } from \"react\";\nimport dhusToGeojson from \"./dhusToGeojson\";\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\nimport SearchManager from './searchmanager'\n\n\n\n\nexport default function useDatahub() {\n\n\n    const buildUrl = ({code, polygon, start, end, startindex}) => {\n\n\n        \n        let collections = [\n            {\n                code: 'S1',\n                templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-1 AND producttype:GRD)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-1 A/B GRD' ,\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S2',\n                templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-2 AND producttype:S2MSI1C)&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-2 A/B Level 1C',\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S3',\n                templateUrl: 'https://131.176.236.55/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-3 AND (producttype:OL_1_ERR___ OR producttype:SL_1_RBT___ OR producttype:SR_1_SRA___))&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-3 A/B, OLCI/SLSTR/SRAL' ,\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'S5P',\n                templateUrl: 'https://s5phub.copernicus.eu/dhus/search?q=( footprint:\"Intersects({polygon})\" AND beginposition:[{start} TO {end}] AND platformname:Sentinel-5 precursor AND (producttype:L1B_RA_BD1 OR (producttype:L2__NO2___ AND processingmode:Near real time)))&start={startindex}&rows=100&sortedby=beginposition&order=desc&format=json',\n                name: 'Sentinel-1 A/B',\n                startIndexOrigin: 0,\n                dateOff: ' beginposition:[{start} TO {end}] AND',\n                areaOff:  ' footprint:\"Intersects({polygon})\" AND'\n            },\n            {\n                code: 'ENVISAT',\n                templateUrl: 'https://eocat.esa.int/ngeo/catalogue/FEDEO-ENVISAT.ASA.IMP_1P/search?start={start}&stop={end}&format=json&count=50&startIndex={startindex}',\n                startIndexOrigin: 1,\n                name: 'Sentinel-1 A/B',\n                dateOff: ' beginposition:[{start} TO {end}]',\n                areaOff:  ' footprint:\"Intersects({polygon})\"'\n            }\n\n        ]\n\n        const getTargetCollection= (mission) => {\n            return collections.find( (collection) => {return collection.code == mission} )\n        }\n        // console.log(getTargetCollection(mission))\n        let target = getTargetCollection(code)\n        let newurl = target.templateUrl\n        //let start, end, \n        // let windowSize\n        \n\n        if(polygon.length > 0) {\n            // windowSize = 1000 * 60 * 60 * 24 * 30 // 1 month time window\n            // start = dateFormat(new Date(date - windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n            // end =  dateFormat(new Date(date + windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n            console.log('|'+polygon.length+'|')\n            newurl = newurl.replace(\"{polygon}\", polygon)\n            newurl = newurl.replace(target.dateOff, '')\n            // newurl = newurl.replace(\"{start}\", start)\n            // newurl = newurl.replace(\"{end}\", end)\n\n        } else {\n            // windowSize = 1000 * 60 * 60 * 24  // 3 hours time window\n            // windowSize = 1000 * 60 * 60 * 24 * 30 // 1 month time window\n\n            // start = dateFormat(new Date(date - windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n            // end =  dateFormat(new Date(date + windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n\n            newurl = newurl.replace(target.areaOff, '')\n            newurl = newurl.replace(\"{start}\", start)\n            newurl = newurl.replace(\"{end}\", end)\n        }\n        \n        startindex = target.startIndexOrigin = 0 ? startindex : startindex + target.startIndexOrigin\n        newurl = newurl.replace(\"{startindex}\",startindex)\n\n\n        return newurl\n    }\n\n    \n    // search time window size in ms\n    const [windowSize, setWindowSize] = useState(1000 * 60 * 60 * 24)\n    const MAX_ITEMS = 5000\n\n    const [geojsonResults, setGeojsonResults] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [isfirstpage, setIsfirstPage] = useState(true)\n    \n    const [ searchepoch,  ] = useGlobal('searchepoch');\n    // const [ startend, setStartend ] = useState({start:0, end:0});\n    const [ startend,  ] = useGlobal('startend');\n    const [ mission,  ] = useGlobal('mission');\n    const [ apppolygon,  ] = useGlobal('apppolygon');\n    const [gosearch, setGosearch] = useGlobal('gosearch')\n\n\n    const [se] = SearchManager();\n\n    const [ searchUrl, setSearchurl  ] = useState(null);\n    // const [ polygon, setPolygon  ] = useState('');\n\n    const [ pagination, setPagination ] = useState(null);\n    const [ searchtimeout, setSearchtimeout ] = useState(null);\n\n//{totalresults,startindex}\n\n// fetch('https://...')\n//   .then(response => response.json())\n//   .then(data => console.log('data is', data))\n//   .catch(error => console.log('error is', error));\n    useEffect(() => {\n        const fetchURL = async (url) => {\n            // setLoading(true)\n            console.log('Search: '+url)\n            try {\n                const response = await fetch(url, {mode: 'cors', credentials: 'include'})\n                // console.log( response.text())\n                try {\n                    const json = await response.json()\n                    const geoJson = (mission === 'ENVISAT')? json : dhusToGeojson(json)\n                    // console.log('totalResults: ' + geoJson.properties.totalResults)\n                    console.log(geoJson.properties)\n                    setPagination( \n                        {\n                        totalresults: Number(geoJson.properties.totalResults) ,\n                        startindex:  Number(geoJson.properties.startIndex), \n                        itemsperpage:  Number(geoJson.properties.itemsPerPage), \n                        })\n                    if(Number(geoJson.properties.totalResults>0)) setGeojsonResults(geoJson) \n                    setIsfirstPage((pagination.startindex + pagination.itemsperpage < pagination.totalresults)?true:false)\n                    // setLoading(false);   \n                } catch (err) {\n                    console.log(\"Didn't recieve a json !\")\n                    \n                    setLoading(false);\n                }\n            } catch(err) {\n                console.log(\"Error contacting server...\")\n                console.log(err)\n                setLoading(false)\n                \n            }\n            \n        }\n\n        if(searchUrl) fetchURL(searchUrl)\n    }, [searchUrl]);\n    \n    useEffect(() => {\n        if(pagination) {\n            if(pagination.startindex + pagination.itemsperpage < Math.min(pagination.totalresults,MAX_ITEMS) ) {\n                // let url = searchURLs[mission]\n                // console.log(\"There's More...\")\n                // setIsfirstPage(false)\n                try {\n                    let url = buildUrl({\n                        code: mission,\n                        polygon: apppolygon, \n                        start: startend.start,\n                        end: startend.end,\n                        // start: dateFormat(new Date(searchepoch - windowSize/2),'isoUtcDateTime'), \n                        // end: dateFormat(new Date(searchepoch + windowSize/2),'isoUtcDateTime'), \n                        startindex: pagination.startindex + pagination.itemsperpage\n                    })\n\n                    setSearchurl(url)\n\n                \n            \n                } catch {\n                    console.log('Not a JULIAN date !')\n                    setLoading(false);\n                }\n            } else {\n                setLoading(false);\n            }\n    \n        }\n    }, [pagination]);\n\n    useEffect(() => {\n        console.log('DataHub ready. '+mission)\n    }, []);\n\n    // useEffect(() => {\n    //     console.log('apppolygon: '+apppolygon)\n    //     if(apppolygon == '') {\n    //         setWindowSize(1000 * 60 * 60 * 24)\n    //     } else {\n    //         setWindowSize(1000 * 60 * 60 * 24 * 7)\n    //     }\n    // }, [apppolygon]);\n\n    // useEffect(() => {\n    //     console.log('searchepoch: '+searchepoch)\n    //     setStartend({\n    //         start: dateFormat(new Date(searchepoch - windowSize/2),'isoUtcDateTime').replace('Z','.000Z'),\n    //         end: dateFormat(new Date(searchepoch + windowSize/2),'isoUtcDateTime').replace('Z','.000Z')\n    //     })\n\n    // }, [searchepoch, windowSize]);\n\n\n\n    useEffect(() => {\n        console.log('mission: '+mission+ ' start/end: '+ startend.start+'/' + startend.end + ' apppolygon: '+apppolygon)\n\n        if(mission && searchepoch) {\n            // clearTimeout(searchtimeout)\n            // let timeout = setTimeout(() => {\n                try {\n                    let url = buildUrl({\n                        code: mission,\n                        polygon: apppolygon, \n                        start: startend.start,\n                        end: startend.end,\n                        // start: dateFormat(new Date(searchepoch - windowSize/2),'isoUtcDateTime'), \n                        // end: dateFormat(new Date(searchepoch + windowSize/2),'isoUtcDateTime'), \n                        startindex: 0\n                    })\n                    setLoading(true)\n                    // setIsfirstPage(true)\n                    setSearchurl(url)\n            \n                } catch(e) {\n                    console.log('Not a JULIAN date !')\n                    console.log(e)\n                }\n\n            // },500)\n            // setSearchtimeout(timeout)\n            \n        }\n        \n    }, [gosearch, mission, apppolygon, startend.start]);\n\n    return {geojsonResults, loading}\n}\n","import { useState, useEffect } from \"react\"\nimport { useGlobal } from 'reactn'\nimport { useHotkeys } from 'react-hotkeys-hook'\n\n\n\nexport default function SearchManager() {\n\n    const [ searchepoch,  ] = useGlobal('searchepoch');\n    const [ startend,  setStartend] = useGlobal('startend');\n    const [ apppolygon,  ] = useGlobal('apppolygon');\n    const [ replace, setReplace ] = useGlobal('replace')\n    const [gosearch, setGosearch] = useGlobal('gosearch')\n\n\n    // const { geojsonResults, loading} = useDatahub();\n\n\n    const [windowSize, setWindowSize] = useState(1000 * 60 * 60 * 24)\n    const [searchList, setSearchList] = useState([])\n    const [replacemode, setReplacemode] = useState(0)\n    \n\n    // const [replacemode, toggleReplacemode] = useToggle(false)\n\n    // const [ startend, setStartend ] = useState({start:0, end:0});\n\n    // const toggleReplace = () => {\n    //     console.log('toggle replace from: '+replacemode)\n    //     if(replacemode == true) {\n    //         setReplacemode(false)\n    //     } else {\n    //         setReplacemode(true)\n    //     }\n\n    // }\n    // // replace => { setReplace(!replace); return !replace }\n    // useHotkeys('ctrl+k', () => setCount(prevCount => prevCount + 1));\n    // useHotkeys(\"z\",() => setReplacemode(state => !state))\n    useHotkeys(\"z\",() => setReplacemode(count => count+1))\n\n    useEffect(() => {\n        console.log('apppolygon: '+apppolygon)\n        setReplacemode(count => count+1)\n        if(apppolygon == '') {\n            setWindowSize(1000 * 60 * 60 * 24)\n            // setStartend({\n            //     start: null,\n            //     end: null\n            // })    \n            \n\n        } else {\n            setWindowSize(1000 * 60 * 60 * 24 * 7)\n        }\n        // setGosearch(Math.random)\n    }, [apppolygon]);\n\n    useEffect(() => {\n        console.log(\"cleaning searches: \" + replacemode)\n        // setReplace(replacemode)\n        if(replacemode) {\n            setReplace(count => count+1)\n            setSearchList([])\n            setGosearch(Math.random)\n        }\n    }, [replacemode]);\n\n\n    useEffect(() => {\n        console.log('searchepoch: '+(new Date(searchepoch)).toJSON())\n        let SearchDate = new Date(searchepoch)\n        let startepoch = (new Date(Date.UTC(SearchDate.getUTCFullYear(), SearchDate.getUTCMonth(), SearchDate.getUTCDate())))\n\n        let _startdate = new Date(startepoch.getTime())\n        let _enddate = new Date(startepoch.getTime() + windowSize - 1000)\n\n        console.log('new start/end: '+_startdate.toJSON() + '/ ' + _enddate.toJSON())\n\n        let newSearchList = searchList\n\n        if (newSearchList.indexOf(_startdate.toJSON()) < 0) {\n            newSearchList.push(_startdate.toJSON())\n            if (newSearchList.length > 5) {\n                newSearchList.shift()\n                console.log('should now remove geojson layer')\n            }\n            setSearchList(newSearchList)\n            setStartend({\n                start: _startdate.toJSON(),\n                end: _enddate.toJSON()\n            })    \n            setGosearch(Math.random)\n        } else {\n            console.log('Search already done !')\n        }\n    }, [searchepoch]);\n\n\n\n\nreturn [ startend ]\n\n}\n","import React, { useGlobal, useState, useEffect } from \"reactn\"\nimport { useEww } from \"./useEww\"\n// import { useGlobal } from 'reactn'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport useDatahub from \"./useDatahub\"\n\n\nexport default function Eww({ id, clat, clon, alt, starfield, atmosphere, names }) {\n\nconst {\n    ewwstate,\n    addGeojson,\n    removeGeojson,\n    addWMS,\n    toggleProjection,\n    toggleAtmosphere,\n    toggleStarfield,\n    toggleNames,\n    setTime\n} = useEww({\n    id: id,\n    clat: clat,\n    clon: clon,\n    alt: alt,\n    starfield: starfield,\n    atmosphere: atmosphere,\n    names: names\n})\n\n  // toogle projection\n  useHotkeys(\"p\",toggleProjection)  \n  useHotkeys(\"a\",toggleAtmosphere)  \n  useHotkeys(\"s\",toggleStarfield)  \n  useHotkeys(\"n\",toggleNames)  \n  useHotkeys(\"c\",removeGeojson)\n  \n\n  const { geojsonResults, loading} = useDatahub();\n  const [ searchepoch,  ] = useGlobal('searchepoch');\n  const [ startend,  ] = useGlobal('startend');\n  const [ replace,  ] = useGlobal('replace');\n\n  const [ mission,  ] = useGlobal('mission');\n  const [ appdate,  ] = useGlobal('appdate')\n  const [ appstarfield,  setAppstarfield] = useGlobal('appstarfield')\n  const [ appatmosphere,  setAppatmosphere] = useGlobal('appatmosphere')\n  const [ appnames,  setAppnames] = useGlobal('appnames')\n  const [ , setSearching ] = useGlobal('searching')\n  const [ , setAppaltitude ] = useGlobal('appaltitude')\n  const [ , setApplatitude ] = useGlobal('applatitude')\n  const [ , setApplongitude ] = useGlobal('applongitude')\n  const [ apppolygon, setApppolygon ] = useGlobal('apppolygon')\n  // const [ replace, setReplace ] = useState(true)\n\n  // useHotkeys(\"z\",()=>setReplace(state=>!state))\n\n  useEffect(() => {\n    if(geojsonResults) {\n      console.log('datahub in use')\n        console.log(geojsonResults)\n        try {\n          addGeojson(geojsonResults,appdate)\n        } catch (err) {\n          console.log(\"error on geojson parsing\")\n          console.log(err)\n        }\n      }\n      \n  },[geojsonResults]);\n\n  useEffect(() => {\n    console.log('replace: ' + replace)\n    removeGeojson()\n  },[replace]);\n\n  useEffect(() => {\n    console.log('atmosphere')\n    toggleAtmosphere(appatmosphere)\n  },[appatmosphere])\n\n  useEffect(() => {\n    toggleStarfield(appstarfield)\n  },[appstarfield])\n  useEffect(() => {\n    toggleNames(appnames)\n  },[appnames])\n\n\n  useEffect(() => {\n    setSearching(loading)\n  },[loading]);\n\n  useEffect(() => {\n    setAppaltitude(ewwstate.altitude)\n    setApplongitude(ewwstate.longitude)\n    setApplatitude(ewwstate.latitude)\n  },[ewwstate.longitude,ewwstate.latitude, ewwstate.altitude ]);\n\n  useEffect(() => {\n    // uncomment to search via polygon at low lats\n    // setApppolygon(ewwstate.viewpolygon)\n\n  },[ewwstate.viewpolygon ]);\n\n  useEffect(() => {\n    setApppolygon(ewwstate.aoi)\n    // setApppolygon('')\n  },[ewwstate.aoi]);\n\n\n\n  useEffect(() => {\n    setTime(appdate)\n  },[appdate]);\n\n  useEffect(() => {\n    setAppatmosphere(atmosphere)\n    setAppstarfield(starfield)\n    setAppnames(names)\n  },[]);\n\n\nlet globeStyle = {\n    background: 'inherit',\n    position: \"fixed\",\n    width: 'inherit',\n    height: 'inherit'\n  };\n\n\nreturn (\n    <canvas id={id} style={globeStyle} />\n)\n\n}\n","import React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './missionselector.css'\n\n\n// should use a prop\n\nfunction MissionSelector() {\n\n\n    const [ mission, setMission ] = useGlobal('mission');\n    useHotkeys(\"1\",()=>{setMission('S1')}) \n    useHotkeys(\"2\",()=>{setMission('S2')}) \n    useHotkeys(\"3\",()=>{setMission('S3')}) \n    useHotkeys(\"5\",()=>{setMission('S5P')}) \n    useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MissionSelector'>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s1_black.png' alt='' onClick={() => setMission('S1')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s2_black.png' alt='' onClick={() => setMission('S2')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s3_black.png' alt='' onClick={() => setMission('S3')} /></div>\n            <div className='Circle'><img className='MissionIcon' draggable=\"false\" src='./images/s5p_black.png' alt='' onClick={() => setMission('S5P')} /></div>\n           \n            \n        </div>\n    )\n}\n\nexport default MissionSelector;\n","import React, { useEffect, useGlobal } from \"reactn\";\n// import { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './mapselector.css'\n\n\n// should use a prop\n\nfunction MapSelector() {\n\n\n    const [ appatmosphere, setAppatmosphere ] = useGlobal('appatmosphere');\n    const [ appstarfield, setAppstarfield ] = useGlobal('appstarfield');\n    const [ appnames, setAppnames ] = useGlobal('appnames');\n    // useHotkeys(\"1\",()=>{setMission('S1')}) \n    // useHotkeys(\"2\",()=>{setMission('S2')}) \n    // useHotkeys(\"3\",()=>{setMission('S3')}) \n    // useHotkeys(\"5\",()=>{setMission('S5P')}) \n    // useHotkeys(\"6\",()=>{setMission('ENVISAT')}) \n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    \n    //console.log('mission rendering')\n    return (\n        <div className='MapSelector'>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/atmosphere.png' alt='' onClick={() => setAppatmosphere(!appatmosphere)} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/starfield.png' alt='' onClick={() => setAppstarfield(!appstarfield)} /></div>\n            <div className='CircleButton'><img className='MapIcon' draggable=\"false\"src='./images/names.png' alt='' onClick={() => setAppnames(!appnames)} /></div>\n           \n        </div>\n    )\n}\n\nexport default MapSelector\n","import React, { useEffect, useState } from \"react\";\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useGlobal } from 'reactn'\nimport './stepmask.css'\n\n\n\n\nfunction StepMask() {\n    const [highlight] = useGlobal('highlight')\n    const [ active, setActive ] = useState(false)\n    useHotkeys(\"m\",()=>{setActive(active => !active)}) \n\n    useEffect(() => {\n        console.log('Mask Overlay: press m ')\n        console.log('active (use): '+active)\n    }, []);\n\n    useEffect(() => {\n        // setActive((highlight !== 'none') )\n    }, [highlight]);\n\n    console.log('active rendered')\n\n    return (\n        <div className='StepMask' style={{display: (active)?'inline':'none'}}>\n            <div className='DayMask' style={{display: (active)?'inline':'none'}}/>\n            <div className='MonthMask' style={{display: (active)?'inline':'none'}}/>\n            <div className='YearMask' style={{display: (active)?'inline':'none'}}/>\n        \n        </div>\n    )\n}\n\nexport default StepMask\n","import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\"\nimport {useSpring, animated, config} from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport './timeselector.css'\nimport { useGlobal } from 'reactn'\nimport { add, sub, scale } from 'vec-la'\nimport StepMask from './stepmask'\nimport useDebug from './useDebug'\n\n\n// to be split in a controller and a useTouchScale hook () => {<TouchScale>, scaleRenderer, size}\n\n\n\n\nfunction TimeSelector(props)  {\n\n    /// debug snippet\n    // const [debug, setDebug] = useDebug('')    \n    const [ , setDebug ] = useGlobal('debug')\n\n    //console.log(\"Render TimeSelector \")\n    const dayspace = 40\n    const zoomfactor = (props.max-props.min)/(dayspace*(props.max-props.min)/(1000*60*60*24))\n    const min = props.min\n    const max = min +((props.max - props.min) / zoomfactor)\n\n    \n\n    let wid, hei = 0\n    if(props.vertical) {\n        hei = max - min\n        wid = 100\n    } else {\n        wid = max - min\n        hei = 100\n\n    }\n\n\n    const [appdate, setAppdate] = useGlobal('appdate')\n    const [, setSearchepoch] = useGlobal('searchepoch')\n    const [, setHighlight] = useGlobal('highlight')\n    const [livePosition, setLiveposition] = useState(new Date())\n\n    const [tsactive, setTsactive] = useState(false); \n\n    const [step, setStep] = useState('continuous')\n\n    const myvertical = useRef()\n    myvertical.current = props.vertical\n\n\n    const timecontainer = useRef()\n\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\n\n\n    const bind = useGesture({\n        onDrag: ({  down, delta, distance, velocity, active , direction, wheeling, time, first, last, temp = {\n                                                xy: xy.getValue(), \n                                                deltaOffset: [0, 0], \n                                                deltaCumul: [0, 0],\n                                                lastNewxy: [0, 0],\n                                                lastStep: 1, \n                                                lastIncrement: 0,\n                                                lastTime: time\n                                            }\n                }) => {\n            let springConfigUp = { mass: 1, tension: 200 , friction: 40, precision: 1 }\n            let springConfigDown = { mass: 1, tension: 1200 , friction: 40, precision: 0.01 }\n            let config = {  velocity: scale(direction, velocity), decay: true, precision: 1 }\n\n            velocity = (velocity<.15)?0:velocity\n\n            // if(time - temp.lastTime > 1000) {\n            //     console.log('deltaCumul...')\n            //     console.log(temp.deltaCumul)\n            //     if (temp.deltaCumul < 0.01) {\n            //         console.log('STABLE !!')\n            //     }\n            //     temp.lastTime = time\n            //     temp.deltaCumul = 0\n            // }\n            // temp.deltaCumul += velocity      \n\n            if (!down) setStep(1)\n            \n            if(first) { setTsactive(true)}\n            if(myvertical.current) {    \n                //let pos = target.getBoundingClientRect().top\n                let height = timecontainer.current.parentElement.offsetHeight\n\n                //let followDest = (delta[0]<-200)?delta[1]*10+temp.xy[1]:delta[1]+temp.xy[1]\n                let step = 1\n                let div = 1\n                // console.log(temp.xy[0])\n                if (delta[0]<-30) {step = (1000 * 60 * 60 * 24)  / zoomfactor; div = 10; }\n                if (delta[0]<-80) {step = (1000 * 60 * 60 * 24 * 30) / zoomfactor; div = 15}\n                if (delta[0]<-160) {step = (1000 * 60 * 60 * 24 * 365) / zoomfactor; div = 30}\n\n                if(step !== temp.lastStep) {\n                    //console.log('Step changed from: '+temp.lastStep+' to: '+ step)\n                    setDebug(['Step changed from: '+temp.lastStep+' to: '+ step, 0])\n                    setStep(step)\n                    temp.deltaOffset = delta\n                    temp.xy = temp.lastNewxy\n                }\n\n                delta = sub(delta,temp.deltaOffset)\n                let deltaFactor = [Math.round(delta[0]/div)*step,Math.round(delta[1]/div)*step]\n                if(down) velocity = 0\n                let newxy = add(scale(deltaFactor,Math.pow(velocity+1,2)), temp.xy)\n\n                if(step !== temp.lastStep) {\n                    temp.xy = newxy\n                    temp.lastStep = step\n                }\n\n                temp.lastNewxy = newxy\n                \n                const setLiveTime = ({ xy }) => { setLiveposition(min+(-xy[1]+height/2)*zoomfactor)}\n                const setFinalTime = ({ xy }) => {   if(!down && !active) {setTsactive(false)}; if(!down) { setSearchepoch(min+(-xy[1]+height/2)*zoomfactor) }}  \n\n\n                let minX = timecontainer.current.parentElement.offsetTop + timecontainer.current.parentElement.offsetHeight / 2\n                let maxX = - timecontainer.current.offsetHeight + timecontainer.current.parentElement.offsetHeight / 2\n        \n                newxy[1] = newxy[1]>minX ? minX : newxy[1]\n                newxy[1] = newxy[1]<maxX ? maxX : newxy[1]\n\n                set({  xy: newxy ,   config: down?springConfigDown:springConfigUp, immediate: down, onRest: setFinalTime, onFrame: setLiveTime} )\n\n            } else {    \n            }\n            return temp\n        },\n        onWheel: ({down, delta, distance, wheeling, event, temp= { xy: xy.getValue() }}) => {\n            event.persist()\n            // console.log(event.deltaY)\n            // console.log('direction: '+direction)\n            // console.log(delta)\n            // console.log(temp.xy)\n            setTsactive(true)\n            let height = timecontainer.current.parentElement.offsetHeight\n            const setLiveTime = ({ xy }) => { setLiveposition(min+(-xy[1]+height/2)*zoomfactor)}\n            const setFinalTime = ({ xy }) => {   setTsactive(false); if(!wheeling) { setSearchepoch(min+(-xy[1]+height/2)*zoomfactor) }}  \n            // let newxy = add([0,event.deltaY],temp.xy)\n            let newxy = add([0,event.deltaY*0.2],temp.xy)\n\n            let minX = timecontainer.current.parentElement.offsetTop + timecontainer.current.parentElement.offsetHeight / 2\n            let maxX = - timecontainer.current.offsetHeight + timecontainer.current.parentElement.offsetHeight / 2\n    \n            newxy[1] = newxy[1]>minX ? minX : newxy[1]\n            newxy[1] = newxy[1]<maxX ? maxX : newxy[1]\n\n            // let newxy = scale(delta, 0.1)\n            //setDebug(newxy)\n            // temp.xy = newxy\n\n            set({  xy: newxy , config: { tension: 1200, friction: 40, precision: 1  }, immediate: true, onRest: setFinalTime, onFrame: setLiveTime} )\n            return temp\n        }\n\n    })\n\n    \n\n    const scaleText = () => {\n        \n        let monthcode = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n        let day, month, hour, year = 0\n        let lastday, lastmonth = 0\n        let tics = []\n        const dayclass = (!props.vertical)?'DayTic':'DayTic-v'\n        const monthclass = (!props.vertical)?'MonthTic':'MonthTic-v'\n        const yearclass = (!props.vertical)?'YearTic':'YearTic-v'\n        \n        \n        for (let i=props.min;i<=props.max;i+=3600000) {\n            day = (new Date(i)).getUTCDate()\n            month = monthcode[(new Date(i)).getUTCMonth()]\n            hour = (new Date(i)).getUTCHours()\n            year = (new Date(i)).getUTCFullYear()\n            if(day !== lastday) tics.push({class:dayclass, pos: (i-props.min)/zoomfactor, label: day})\n            if(month !== lastmonth ) {\n                tics.push({class:monthclass, pos: (i-props.min)/zoomfactor, label: month})\n                tics.push({class:yearclass, pos: (i-props.min)/zoomfactor, label: year})\n            }\n            //if(year != lastyear) tics.push({class:'YearTic', pos: (i-props.min)/zoomfactor, label: year})\n            //if(hour != lasthour) tics.push({class:'HourTic', pos: (i-props.min)/zoomfactor, label: '.'})\n            lastday = day\n            lastmonth = month\n        }\n\n            return tics.map(item => (            <div className={item.class} key={item.class+item.pos} style={(!props.vertical)?{left:item.pos}:{top:item.pos}}>{item.label}</div>))\n    }\n\n    const [timescale, setTimescale] = useState('')    \n    //const [vertical, setVertical] = useState(props.vertical)    \n    useLayoutEffect(() => {\n        //console.log(\"useEffect (livePosition) in TimeSelector: \"+livePosition)\n        setTimescale(scaleText(props.vertical))\n    \n    },[props.vertical])\n\n\n    \n\n\n    useLayoutEffect(() => {\n        // if no gesture (touch, mouse) is ongoing, the time selector follows the global appdate\n        let offset =0\n        if(!tsactive) {\n            if(props.vertical) {\n                offset = ((min - appdate)/zoomfactor)+timecontainer.current.parentElement.offsetHeight/2\n                set({ xy: [0,offset], config: { tension: 1200, friction: 40 }, onFrame: null, onRest: null }  )\n            } else {\n                offset = ((min - appdate)/zoomfactor)+timecontainer.current.parentElement.offsetWidth/2\n                set({ xy: [offset,0], config: { tension: 1200, friction: 40 }, onFrame: null, onRest: null }  )\n\n            }           \n        }\n    },[appdate,timescale])  \n\n    useEffect(() => {\n        setAppdate(livePosition)\n    },[livePosition])\n\n\n\n    useEffect(() => {\n        // console.log('Step changed to: ' + step)\n        switch(step) {\n            case 40:\n                setHighlight(\"day\")\n                break;\n            case 1200:\n                setHighlight(\"month\")\n                break;\n            case 14600:\n                setHighlight(\"year\")\n                break;\n            default:\n                setHighlight(\"none\")\n        }\n    },[step])\n\n\n    useLayoutEffect(() => {\n        console.log(\"zoom changed to: \"+props.zoom)\n    },[props.zoom])\n\n    return (\n        <div className={props.vertical?\"Mask-v\":\"Mask\"} >\n            \n            <div className=\"TriangleContainer\" >\n                <svg height=\"40\" width=\"20\" className=\"Triangle\">\n                    <polygon points=\"20,5 20,35 12,20\" />   \n                </svg> \n            </div>        \n            <div className=\"TimeContainer\" ref={timecontainer}>\n                \n                <animated.div className=\"TimeScale\" {...bind()} style={{ width: wid,height: hei, transform: xy.interpolate((x, y) => `translate3d(0px,${y}px,0)`) }}>\n                    {timescale}\n                </animated.div>\n            </div>\n        </div>\n    )\n}\n\nexport default TimeSelector","import React, { useState, useLayoutEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport dateFormat from \"dateformat\"\nimport \"./timelabel.css\"\n\n\n\n\nfunction TimeLabel() {\n\n    const [ appdate,  ] = useGlobal('appdate')\n    const [ highlight, ] = useGlobal('highlight')\n    const [ searching, ] = useGlobal('searching')\n\n    const [year, setYear] = useState('') \n    const [month, setMonth] = useState('') \n    const [day, setDay] = useState('') \n    const [time, setTime] = useState('') \n\n    useLayoutEffect(() => {     \n        let date = new Date(appdate)\n        setYear(date.getUTCFullYear())\n        setMonth(dateFormat(date,'UTC:mmm'))\n        setDay(dateFormat(date,'UTC:dd'))\n        setTime(dateFormat(date,'UTC:HH:MM:ss'))\n    },[appdate])\n\n    // useLayoutEffect(() => {     \n    //     console.log('Searching: '+searching)\n    // },[searching])\n\n\n    return (\n        <div className='LabelContainer' >\n            <div className='Date'>\n                <div className={highlight==='day' || highlight==='none'?'DayLabel':'DayLabel Greyedout'}  key='day'  >{day}</div>\n                <div className='YearMonth'>\n                    <div className={highlight==='month' || highlight==='none'?'MonthLabel ':'MonthLabel  Greyedout'}  key='month' >{month}</div>\n                    <div className={highlight==='year' || highlight==='none'?'YearLabel ':'YearLabel Greyedout'}  key='year' >{year}</div>\n                </div>\n            </div>\n            <div className={searching===true?'Line  Line-active':'Line'} key='line' ></div>\n            <div className={highlight==='time' || highlight==='none'?'TimeLabel ':'TimeLabel Greyedout'} key='time' >{time}</div>\n        </div>\n    );\n    // <div className='MonthLabel' key='month' style={highlight=='month'?{color: 'rgba(120,0,0,1)'}:{}} >{month}</div>\n\n\n    \n}\n\nexport default TimeLabel;\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { useGlobal } from 'reactn';\nimport \"./mapstatelabel.css\"\n\n\n\nfunction MapStateLabel() {\n\n    const [ appaltitude,  ] = useGlobal('appaltitude')\n    // const [altitude, setAltitude] = useState()\n\n\n    // useLayoutEffect(() => {    \n    //     console.log('Altitude changed') \n    //     setAltitude(Math.ceil(appaltitude / 1000))\n    // },[appaltitude])\n\n    return (\n        <div className='MapStateLabel' >\n            <div >{Math.ceil(appaltitude / 1000)+ ' Km'}</div>\n        </div>\n    )\n    // <div className='MonthLabel' key='month' style={highlight=='month'?{color: 'rgba(120,0,0,1)'}:{}} >{month}</div>\n\n\n    \n}\n\nexport default MapStateLabel;\n","import React, { useEffect, useState } from \"react\";\nimport { useGlobal } from 'reactn';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport './debug.css'\n\n\n\n\nfunction Debug() {\n\n    const [ debug, setDebug ] = useGlobal('debug')\n    const [ active, setActive ] = useState(false)\n    const [ debugkeys, setDebugkeys ] = useState([])\n    \n\n    useHotkeys(\"d\",()=>{setActive(active => !active)}) \n\n    useEffect(() => {\n        console.log('Debug Overlay Key: d')\n    }, []);\n\n    useEffect(() => {\n        if(active) {\n            console.log('debug txt: ')\n            console.log(debug)\n            let lines = debugkeys\n            lines[debug[1]] = debug[0]\n            setDebugkeys( lines )\n            console.log(lines)\n        }\n    }, [debug]);\n\n\n    useEffect(() => {\n        setDebug( ['Hi',0])\n    }, []);\n\n//     const listItems = numbers.map((number) =>\n//     <li>{number}</li>\n//   );\n//   return (\n//     <ul>{listItems}</ul>\n//   )\n\n    return (\n        <div className='Debug' style={{display: (active)?'inline':'none', width: '100%', height:'100%'}}>\n            {/* <div className='ContinuousScroll' style={{position: 'relative', top: '70%', right:0, width: 60, height:'100%', background:  'rgba(22, 22, 20, 0.24)'}}/> */}\n            <div className='DebugBox1'>\n                <ul>\n                    {debugkeys.map(item=><li key={item?item[1]:''}>{item?item:'free'}</li>)}\n                </ul>\n            </div> \n        </div>\n    )\n}\n\nexport default Debug\n","import React, {useState, useLayoutEffect, useEffect, useRef } from \"react\";\nimport {useSpring, animated} from 'react-spring';\nimport { useGesture } from 'react-use-gesture'\nimport { useGlobal } from 'reactn'\nimport { add, sub, scale } from 'vec-la'\nimport \"./controlpanel.css\"\n\nexport default function SlidePanel(props) {\n\n    const [ , setDebug ] = useGlobal('debug')\n\n    const [visible, setVisible] = useState(true)\n    const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }))\n\n    const slidePanel = useRef()\n\n    const toggle = () =>  {\n        setDebug(['toggle from: '+visible+' '+slidePanel.current.offsetWidth,2])\n        set({ xy: !visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n        setVisible(visible => !visible)\n    }\n\n    useEffect(() => {\n        setDebug(['visible: '+visible,1])\n        // set({ xy: visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n    },[visible])\n\n    useEffect(() => {\n        setTimeout(toggle,1000)\n        // set({ xy: visible?[0,0]:[slidePanel.current.offsetWidth,0], immediate: false})\n    },[])\n\n    const bind = useGesture({\n        onDrag: ({  first , event, direction, velocity, down,  delta, vxvy, temp={initTarget: '', xy: xy.getValue()}}) => {\n            // setDebug('tempX: '+add(temp.xy,delta)[0],1)\n            // setDebug('down: '+down,2)\n            if(first) temp.initTarget = event.target.getAttribute(\"class\")\n            if(temp.initTarget != 'ControlPanel') return\n            if(down) {\n                set({ xy: add(temp.xy,delta), immediate: true })\n                // set({ xy: newxy })\n            } else {\n                if(vxvy[0] > 0.2) {\n                    let config = {  velocity: scale(direction, velocity), decay: true, precision: 1 }\n                    setDebug(['visible: '+visible,1])\n                    set({ xy: [slidePanel.current.offsetWidth,0], immediate: false})\n                    setVisible(false)\n                } else {\n                    set({ xy: temp.xy, immediate: false })\n                }\n            }\n            return temp\n\n\n            // if(!down && vxvy[0] > 0.2) {\n            //     setVisible(state => !state)\n            // } else {\n\n            //     let newxy = add(temp.xy,delta)\n            //     setDebug('offsetWidth: '+slidePanel.current.offsetWidth)\n            //     // if(!down && vxvy[0] > 0.2) {\n            //     //     newxy = [slidePanel.current.offsetWidth,0]\n            //     // }\n                \n            //     set({ xy: newxy, immediate: down })\n            //     return temp\n\n            // }\n        }\n        },\n        { event: { passive: false } })\n\n\n    return (\n        <div>\n            <img className='Logo' draggable=\"false\" src={props.imageSrc} alt=''  onClick={toggle} />\n\n            <animated.div {...bind()} ref={slidePanel} className='ControlPanel' style={{ transform: xy.interpolate((x, y) => `translate3d(${x}px,0,0)`) }}>\n                    {props.children}\n            </animated.div>\n        </div>\n\n    )\n}","import React, { useEffect } from \"react\";\nimport { useGlobal } from 'reactn';\n\nimport { HuePicker, AlphaPicker } from 'react-color';\nimport './colorpicker.css'\n\n\n// should use a prop\n\nfunction ColorPicker() {\n\n\n    const [ appcolor, setAppcolor ] = useGlobal('appcolor');\n\n    // useEffect(() => {\n    //     console.log('Mission changed to: '+ mission)\n    // }, [mission]);\n    \n    const handleChangeComplete = (color) => {\n        document.documentElement.style.setProperty('--color', color.hex);\n        //setAppcolor(color.hex );\n      };\n    \n    //console.log('mission rendering')\n    return (\n        <div className='ColorSelector'>\n            <HuePicker color={appcolor} onChangeComplete={handleChangeComplete }/>\n            \n            \n        </div>\n    )\n    // <AlphaPicker />  \n}\n\nexport default ColorPicker;\n","import React, { useState, useEffect } from \"react\";\nimport ClockController from \"./clockController\";\nimport Eww from \"./eww\";\nimport MissionSelector from \"./missionselector\";\nimport MapSelector from \"./mapselector\";\nimport Fullscreen from \"react-full-screen\";\nimport { useFullscreen } from '@straw-hat/react-fullscreen';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { useGlobal } from 'reactn';\n\nimport \"./styles.css\"\nimport TimeSelector from \"./timeselector2\";\nimport TimeLabel from \"./timelabel\";\nimport MapStateLabel from \"./mapstatelabel\";\n\nimport Debug from \"./debug\";\nimport SlidePanel from \"./slidepanel\";\nimport StepMask from './stepmask'\nimport ColorPicker from './colorpicker'\n\n\n\nconst App = () => {\n  //const [count, setCount] = useState(1000);\n  const [hasFetched, setFetch] = useState(false)\n\n\n  \n  const [ mission, setMission ] = useGlobal('mission');\n    useEffect(() => {\n        console.log('Mission changed to: '+ mission)\n    }, [mission]);\n \n\n\n  // Set boundaries and zoom factor of the time scale\n  const [min, setMin] = useState((new Date(\"2014-10-01\")).getTime())\n  const [max, setMax] = useState((new Date(\"2019-12-31\")).getTime())\n  \n  const [vertical, setVertical] = useState(true)\n  \n  useHotkeys(\"h\",() => {\n    setVertical(prevVertical => {\n        return (!prevVertical)\n      })\n    })\n\n\n  useEffect(() => {\n\n    const mockApi = () => {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          const randomInt = Math.ceil(Math.random() * 10)\n          console.log(\"mockApi done\")\n          resolve(randomInt)\n        }, 2000)\n      })\n    }\n    \n    async function doFetch() {\n      if (!hasFetched) {\n        const apiResponse = await mockApi();\n        setFetch(true);\n      }\n    }\n\n    doFetch()\n  }, []);\n  \n\n\n\n  const [isFull,setIsfull] = useState(false)\n  const { isFullscreen, toggleFullscreen } = useFullscreen(window.document.body);\n  // const [isControlPanel, setIscontrolpanel] = useState(false)\n  \n  useHotkeys(\"f\",toggleFullscreen )  \n  \n  //const [ appdate, setAppdate ] = useGlobal('appdate');\n  // const [ myname,  ] = useGlobal('appnames');\nconsole.log('app renders')\n  return (\n    <div className=\"App\">\n      <Fullscreen enabled={isFull} onChange={() =>  {if(!isFull) setIsfull(false)} }>\n      \n        <div className=\"DateTimeLabel\" >\n          <TimeLabel vertical={vertical} />\n        </div>\n        \n        <div className=\"ClockController\">\n          <ClockController duration=\"600000\"/>\n        </div> \n\n        <div className=\"Globe\">\n          <Eww id=\"globe\" starfield=\"true\" atmosphere='true' clon='0.5' clat='40' names='true'/>\n        </div>\n        <div className={vertical?\"TimeSelectorv\":\"TimeSelectorh\"}>\n          <TimeSelector min={min} max={max} vertical={vertical}/>\n        </div>\n        \n        <div className='MissionLabel'>{mission}</div>\n        <MapStateLabel></MapStateLabel>\n        <SlidePanel active='false' imageSrc='./images/ESA_logo_white.png' >\n          <MissionSelector></MissionSelector>\n          <MapSelector></MapSelector>\n          <ColorPicker />\n        </SlidePanel>\n\n        <Debug action='Bonjour'/>\n        <StepMask/>\n      </Fullscreen>\n   </div>\n  );\n}\n\n\n        // <ControlPanel active='false' imageSrc='./images/EOi_logo.png' >\n        //         <MissionSelector></MissionSelector>\n        //         <MapSelector></MapSelector>\n        // </ControlPanel>\n\n// <ColorPicker />\n\n        // <div className='MiniGlobe' >\n        //   <Eww id='miniglobe' clon='0.5' clat='40' myname={myname}/>  \n        // </div>  \n\n                // <img className='Logo' src='./images/EOi_logo.png' alt='' onClick={()=>setIscontrolpanel((isControlPanel => !isControlPanel))} />\n\n\n\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { setGlobal } from 'reactn';\n\n\nexport  function initGlobalStates() {\n    console.log(\"init global: \"+(new Date()).getTime())\n\n    // Set current time as global state\n    setGlobal({appdate: ((new Date()).getTime())})\n    setGlobal({searchepoch: ((new Date()).getTime())})\n    setGlobal({mission: 'S1'})\n    setGlobal({searching: false})\n    setGlobal({apppolygon: ''})\n    setGlobal({replace: true})\n    setGlobal({startend: {start:0, end:0}})\n    \n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./app\";\nimport {initGlobalStates} from \"./initglobalstates\"\nimport registerServiceWorker from './registerServiceWorker';\n\n// if you're in create-react-app import the files as:\n// import store from \"./js/store/index\";\n// import App from \"./js/components/App.jsx\";\ninitGlobalStates()\n\nrender(\n  <App />,\n  // The target element might be either root or app,\n  // depending on your development environment\n  // document.getElementById(\"app\")\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();"],"sourceRoot":""}